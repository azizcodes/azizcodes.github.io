%!PS-Adobe-3.0
%%Creator: cairo 1.14.6 (http://cairographics.org)
%%CreationDate: Wed Mar 21 10:28:34 2018
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: Letter 612 792 0 () ()
%%BoundingBox: 151 130 476 638
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%BeginResource: font TeX-tipa10
%!PS-AdobeFont-1.0: TeX-tipa10 001.001
% Filtered by type1fix.pl 0.06
%%EndComments
13 dict dup begin
/FontInfo 16 dict dup begin
/Copyright (see\040copyright\040of\040original\040TeX\040font) def
/FamilyName (TeX\040tipa10) def
/FullName (TeX\040tipa10\040Regular) def
/ItalicAngle 0 def
/Notice (converted\040after\040April\0402001) def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) def
/isFixedPitch false def
/version (001.001) def
end readonly def
/FontName /f-7-0 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedbl put
dup 73 /I put
readonly def
/FontBBox {-70 -296 812 771} readonly def
currentdict end
currentfile eexec
f983ef0097ece6396f771b991b9d207a05c222f8bd93146f421b52aa60ac08c2ea0dd3df86b6be
3b1bffbe6df47f6695d613513c15522ea697b4400a789b61d9947fe1f6df653aa2d03cea887a5c
d39365af02a4e85344b73f12088e27f6c04cae4f4bf5f2e543b9020f8a670095e846f89603e9a2
3b7f37ff950c20437ef7e212690de85a9bcdc4a61c6934be5e404871129893f0c7248e732a02d9
0feb668c6ae4e9bc3a31f33081808fa036feafde52895885069edf982a23f002735979e41ea918
a7c0ca5e26ab946df2c65ea6acf4a9bc7d6482c8605685ffab830958fbf135362aaf2a2f12be56
8849945872117d2ccc1a1116b2444c3bfb2546e91ec448c84f80f6e8e090ed9c8288b9aa0bfeb5
9a7392a3d35cf856dcba1610caed846e4850c8e934363ca080fc4b657ea524a80bbf26c276cdee
7a70c2ff0000cda74e1f29cd4fceb2c88e6a18f4a5c21f7281bb586d5972547f679a5200a878e7
0374b51e39cc1084b1289492d5cf7b33108ac0c54beb57f3d23371586847b79a3aaff216180ded
fad0faa6a668b2585a3d9c3ea542c2492b819069f85bb2c02b99939ae2c7f6c9ddc812fbd56bf3
3321ceed0dcdd667838c254a1fb83674e773823c68b78e9bc40aaa3d4ae17c4e664a9e94918777
b6f8e44f3212a02086cdfa56d48f47f07b6072193ea2744b1614b52941ebfb684714664ede5e2b
8e5767d6881c64bed36ced625c77668ac5a2c0a1c90cd6b8234a18d667fc312e33e817694769c6
fe1c92a5751076ff4f9a5999d34db395db8876bf6387e72d45aa69927ae981f7fbfe4da2db59f3
08bda6e880dd3c519481066571bee9b06d73f4c864aad49bd47f9e2b18648c1b23d1ec085b7cd8
884a3f4a61445e0501a84cdc1bcedad27be7679c65c0be9ff26b44331b347051be98fe97e63a1f
4f592bbd4bac64ea73b9eaed32962ad21bd00db7b0118e447c10b32e67da9f20cdc8da5530ce2b
9aa12ef54a374100fae1bffce6c128441331b1705428b52bb6966fc8e9890f45aff99d623bc4ac
c0db5bd2934cb1bacb2f4d76de0100144d1a9d72ecef365ac0030da9ced7f2ac2661588189da33
ae115770c64c230f3f639761d862aa06fdc36c0f6b0fdd89b20740f35c05863737369ae6321add
c4bc87f50f4c7ec1ba3ffe598debecde5630fcde9a7a31a69d466cd2abc6dc66bf727fc99418d1
a5f432b3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndResource
%%BeginResource: font CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known pop false {dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /f-11-0 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 107 /k put
dup 109 /m put
readonly def
currentdict end
currentfile eexec
f983ef0097ece61cf3a79690d73bfb4b0027b6f3b53cc32be64063d04d328b49c17a62c396cfc8
17b9fcb732c3b0aeb6264b2a70f62fbfc397eea8d069af80a71b775145f9842057f969d124e630
1a760710a5c51e8981851fbcf7f1cd1f2ab78db91af2a6f264e41cc2cdecf450a3a33c89fa447b
8bad4068cb8d7d37adaa4caab8f72cc26b024348ef8708a0ab6ee56d73f035ac9b506c91fcafc2
40791cc10b1b0ca42c87a24a69e83f61a20432744f7d79437b93825d955cee80718831f56e0254
0ae4b3a70b9dda35ca4fbcabfbc50a4cafca7423203cf03b8e9eafb091f06b2741ada33c61933f
ab98ef2fd54411c6564b030947ac99cf02f4194b6e0af84cefdc23c1b2886506402a156f0946dd
e0f96a087eea2ac27fe5bdf35b5340fc78f4deda8c9d11d98c0f5e55a92c96eda070164da36646
45cf37d0d548891f41c633b2cf39f3681ca5b295c862e21d4e3d461f0604fc3557ead3f103b7cd
e8788062ee55dd643ebf68f02de9509a711b769bbaa2f977c0c79c626050e6cc409496ca36999e
1ff008ca97815500e97752078d0286a73dfc1d55e84337b5eccb366bbff2cba70847a15deffc9a
b9465907d667d2583fc8cc9a1b753fb839c71d02786b206edb49d1f1e1222f15e35c63c1308f9b
5a012747cde52cb2b9eb0c6805b3b05040b32dbc7e380ce5ed54283fdc2eb2b9eb0c6805a609d5
bc292019eb65c765ddae5d9f5a6193a059c6d7674fd34664fff5fc0442f1fab44943e0f74ea3c6
00960734464cdc627ab1f56d3b620c7d61e434c0469999ad8a683b008d4318a044a01a6ee5c4de
a893d727949247b65a100468185591755ad88509374ea309c172fa8fae1f28ce2d6b478e29984e
142bd328cb3db08eb3c0798faa3c961089be48cd68ef446a7e7486cdf303862f2c49a504f01157
77979c3cdf97f2fda864e361612983097ae515ccdd43cc4e7c2832837b2730cedbc00213c1640c
bd6db49d0d729017e5a45b2eb6c10992f4274c8fa188470c82b5623f4607dff4afd5892cb6cd5d
85a03022b4d80fc1c3e271c4a3d53241988b6c9c1dcef7a0f9f19281c2a01c858d43fcd28c360e
5aab9ba5d4dea4db85e3a26cc0e8d7defad8c9976dd7d45d9879880dec2766c6d613450cdb6c87
a690dca9298b59923709795bce1cb2a7f1e3c7888ad49ad9f12090fc5371ea8016b7c0da013dcb
ae8ee5985b69391d249998fdba8da313ec5788b0abdeefaa9239c4edcbb4b311939899a0646a40
31ef6d0f32a9642bb52ea218982daa9fb54679a769dd0ce17187f09b1dec550179a9f8ba81883a
fe662ef681b2811e81e3e459cbc8e5a6ed948602df36cb16ac7dc8197ef5d0123780e1f4e614fd
8d60f5f6c69ad7377806b6f64aeaa409fbb41dd3ccead8d56e06ee86cac471c474e1e1b727a0b0
18c82b41297c09366a3f891de3b9807b62b6b3823d7636f6df7ba6884d206dd39e8c56bc07e542
8d35af43481b160d66572f2eeea2971e9a4744fd79897ba8f917018578e438f98aedcb8a073cf6
79cd7e52f77385a5b336fa80be78fff9705ef282270f7b516eb7d163181c4cffed31a5553007ec
327cef977efeded1342c72944f456f78d41d031fa614a8eb118a653e1a77fbff5c0e58f38d44a7
9124a9328900d44e67cf410869f1c45f1012079ab637f81356d9cf0e9b3dfa9e84fe0f296b85ca
ef4ed92097e52b9e71c17c6f8f7637f23fb60abe23521a3907d3442ef45562aee24aecab21b42b
9b24e22a0e58b33aad59fd9ceb08743b270c653b372650e67ab556369259ec5356c846ffe63e57
a421bd03c0e25a4c2a2abe0cc24d234b41fd269deeb6af086c4f12794dcd5e2485a4831d60ce1c
6305e0ce6b18fba63a71c3c1a88b4aa621cf9c1a2c5c235d433725d14acd1d0a7fe0c8dbd88a46
ca104f08806a8b0fc6a315fe9e4ab19ffd534cd281ddfe35664c24b7a6e4b9c1d6faab46c4b81a
dadfd591a3cae35e7684a2ee95ab6881a9ca351704023561d3d9b4214137112bd8b64d9085474e
e78cb85ae23d179c21f8efe8baf050d88ecf0f422bf0c15f102b5ec92484ae51d50e5705fb8b28
e62db9f8c32d691cf9cb209a50494acd6e55990d15c6a130ca5a094503712a5db0655f4383cbe5
785702c3b95e6acff0d6d1bb86c5562b71d366c068e0df346ea2fdce1d673a78d04a3dc88377ff
ae336a2ab2cde346d17e7962de2438f4b5e608cc9707f2d560dbb9c4786970d8df05b47c81eed8
f26573b38e1dca64f4b772f49554f24bf63e95b6b2b952f2807f3b35ce45c689a9fc7bc36e6413
619bcf52bb1cd0c752640dd4dc6104390a7546dbeceb7a2ef1a04bbdd5ed4b730fbc610bc590ee
309c3c49b5e3c9be27369fbfb0526ebcab6bde96c9ffb87eb7bc4361381e0f4472f87b4c17fe35
cb93ea3fd8ec25f49c92476875986527b7dc4093ac056e5821c44d7fd4e2cc32423ea320d5f6c9
38e04ccc1c259fc57282a2a876ae3062aeebd3efcf06b72d8bc51eeaa8cabaff8961327318f53e
8e0136d64c169cb4190942dcc3d7af79ee0575101ea563a9fe85dbc6f3611a926f77f33af26690
9cf5647f64a55b285cf54b5b334d0d0011dba80af1eb7c37b0410072d90429b7db7db6ada180d3
202c6ad7057c7b5fd5f59578a17ce04b12d8b8de2c55fef874bfea8d9825b5ee233a8ad91cd8c9
56234b1dd4407eea57d4bf78b89f124d0637e3a9a7223b6c73fd93a687528e38c608f62298a60f
08c11b62a9fa39068feeb9b5646e84d422aa835556761d1459386adeba9fed5b74e2d78f695c49
f9d829dd85b9641fab34cbaa49e3f306ebb3687b1bb5c764495943074e2dab0c4513bd1d14ea2f
5fc1069df238f0b38cfdcc7ab9e945374cb6f45c740dc95f8e6c82fc3247e14bf27443e4c0ecc1
09873c1e51f325d8d52338d5cbc8982fff68fb5fb92f11783bd6cf9b2307a2802eb9e68321a10d
4431ec6a9e4b6d5ae394f2ec0e8b53385143802f018edb580ebfa5d0406bbaf8dc681185582862
2626125e293c47204bf307b1bcd649ebf20be0ae42b0364b37300da60de0649e2150e70614d024
a3d2f75bd9a886f78c71b59b6754a0bf7aa2f76f920ab9c0f1cd1bd531dd25e6c2a3e3bc8da49b
1c1ef82b4737cb81b0510d551f844adfc80a55301c8310f9d103c489c90a44f84f47b6f1b8d474
366071ca1522215ace0d842767ab2c961d1c9b32bb886714945aafccfe513743f5f5c44dc1cfec
eca538472511896c85b2c9126173c12d4b2b36c4b62cae0e746c0211eefb8a8fccb473bc50fb48
a3c3e6946016908e5f4f4914fdfeedf1186f12a39f13131629ab408fb2e0dd186c257ca3dac07b
e9a7528c725db8a93d52ae0c10e4d290aef73c7fb2ca6bf922423eb71a8c59526e3d73e057d627
9630dde8906b795562f4396c0869a20694370f2696b00fe2f96369b26d56b34a0fe7ad376519d1
b8a50598b2d5a60004a3b7c89218aa9ffc1e5e74ecc4885c517c0627b58b60b136f651c1d48f38
8fb9351fc5c46dd3c4bbcb7dcfd01e6ddd4063bff55a34d64c55599a82417717eb593ed428b677
50972bba8252c31507bdd7435abe4b4edbe81b312cc5f91a1f9237ee9c278d11b51833f65260e3
bd0410699d0a0b8c613152578fac985028eec5f10e8b9bfd680cb0bb53b8e93ad0fa3a749cc223
bd356319fb1b6c6ec397d22248f0891ec1b60e84e89886212fe1b41d5c2b6345d4ba2340306efc
811586e06ab7ee765e93c50b873fd48870769d1d218a10952a9856b4b51445fb82a7928dce5fe1
805b19b99d5378cc9271c4722e47a09a9278ff244bb280cca6a828cd0901ae75f5ba1f87e73253
984d7ae66515141e34d90e770992a0736e3d042b304271e207db1f282b2dff4388e48eaad733aa
746fda33c9d9c7c9fdc090b4b2876fe4645c0bb822ce40d581c7625f9ec0de5dc6a0669412e971
2507139fc3652c35523afaff01d3bd63a1e2c8a53b9ee0543fc505902e8fe0c23f72d824e951c4
0a6483cd8a12a5b29f7c799309d17386917861acc27c200aaa34cb2a104dba07eb4ddf5e4099e3
57d625394728dc83e1d722f3cc1ae7598f169e9c9a2c1e7250715dae8660ae119d8e29323faea6
13c0d31c0c1d4005f2bfcc2d7913f8a0e18d1da390e2f1d3e28d6eddd09c93d019d608911baf7b
ce79557b1397975e38e906b695b6ae1c22af047dbc1d7d08744f182b2263e14a75b843ddd8f990
078410973d7cff56e897245a224a1ddbfaed2d848ded109648d42da10219fa6358bce77565464a
e52af167fabc06c11e6726fc233d0144d35ab68c7269ed2778017ab4ac15639d2588952fa22550
e273df724abf514d1f0364a1e2a7d9cdb4e356494de3af6125d3cc6d2ddba01ab92d36216a0505
b4c0fbe46ad4674d8bb51e7520fb4403bbae43bd6a69e475eff0ed4f71d865f6d3bf6e3ed57508
07de076c0b1f59083d488ad5fefe10d1cb93a0f4f110e45a80bbb00bf408c96bc6347922332f32
20cf474b66fe1904fab3e58c9ed0b4cc7215665ea72ea2f7212e7927877fe71070d4ebfbe97a37
5a8784640dec93f6d6eedb7224873e8fbef31c40622d385f6ee43cc6c5720d3df72065155d58eb
d21f2c93f323e9e0cdc35ac43330f9ccbcebd9415173e5304db65d3dcc4a8158b8a838ce7e0bcc
4f4bffeb9333eb9a28cdab15cf3256ae784884eb1fec9b65328a0a26d0c8edfd3213384b367fab
9829a4a1823e223a3fab405e51593700fadd42352144f1b648bf7bdd217172ca43066e2632ddf3
77a535b0d855ae8120a97e0c907967c36e88b9da5596676c9bc1fe9449bdae8ed6ed101ca70798
afb9b9ee1b357fbd0846af20d3f4e64ad7793501a0f52ca0710d5588c8a7900f9f58164d8e5174
a413764ed0b2630585c09c66a62e3ac562e06f2572fba273f8f2f62b50f2fb21040d12f607db04
0076159fa283a42c653614cac50f6d929c6d69b7ba331f2bae21b1e25c2937b5404f6ff789b73d
b70cd06e32f5658dc2ccd53d40acea5b19e4019263058c333d81e6f99741a86d21bda9c6a6680b
35fdc036ae2379b16e7549afa7ede71c3e23df721ea9f4580d8c516832677fde26b79ce1a92246
7086e293b003c9f725663ff089da8855c5fd232612fc0434c25b759debaa039a658a8f291261a1
1e58460247bd0a03d3cbaa7b005d605030d42daeb1914ec78ffa012e5a416ba91a877872a48936
2909cb20cc859f032e305be4e1e2510803c3f475ceda2c3dc8ef409faf1e260240d9eeaeae853d
f289471f6206a91d7e7a24b3568ecfff34269dc13fb9cc71850093db85bea6c890ed3ba5f8220b
7516353a9b9a7ae11bb69b37827e6036602b536a8142d4524afe7b951125c1243d3c8845a38afb
7bba584219487cd88b302487e502d5911d79eab6cc2070ab47d5bd927b0a835cdcf0362c8bc0db
3b45ad85aa6434de49b32bbb5bd180ab18c98b8e9538089552b3600a532fd24769c35281f3d605
85e75988a305f1278f6f2a5ee0405d0f30b6770af0364f4d982c07d607ffa4d55cb773d92f9b0e
163934e801ccd9a23b47930a57cae509c9e021d67c3e08ba173f8274b6b1fc1a53305dc998c657
6ef045e84fc0bb391e971d75d69cf507daf86967bfca7f098be6f9f19ae1b72c433826094601fc
acae2fdfe2773bdffc19616ad0e1da13b6575b5e949bee16f4198ce82df7bdb5a0e5411acca8d7
4cfa1f7fb2f0b696de35d3810e090f2bb036bf80aa77d8e71140005a3014d736d4338ead5b3ce7
760b0008c418c80508c44b9e5e8b58b6b770cfbd7aff85631cca1eacb7836580f3d889d9055ff8
08f29cef9ebff7ff904f89d6655dd9a7097e2a27c19a0c47e710fe7143a2ee1e642da6af560630
5c2abca4db9ae966057c124757b094b5b1226702b1a7fa4f082f8f1bbf841abbc29f760ed72e04
746ec76895d4d5d78d2e09b73e0b6cad2cbf7b2583c1b6aed6b208dd582795177df4976908582a
253ce329af84db80d2ddb23c02c659f99c0bd70849b40c4bee2c41c3118e5444cbe7de1e57da26
8c9c6e0da8f2fc33d7193f0f4ecb83dfbb9bec8d0098c10134fc5c2700a90a9f0707ad75762fb0
63f620b691c478ff88f78b486e7fa772c06e3f86b94555d981ed92fdf2ab8df1b9c1f9aca18009
8d876e0b5a1f44d53a4341ad0c3c0837b8a595932efbeceba6bdeffbee967e474e173f99907168
9c1a7e23255d793557a022726053b5bdbc9c333926d714ff8d6261e492df9c905dd66dd1b7e17e
714a44c1e073deadf6a250b765872bf96e047b297580c27ad1714d8a2ce93346d0a972cba8bae0
26bc1646f8fed5c9a3366e73a2a65fe7fbed4a8447ba4cef3f25e20eec13f5448dab2b1768be14
a2f1fe90117079de58883a86e7759a3f8723901e70ed76dfdab6db2a2597f3cded02e1418e33ef
2fc5eb86072ba97db0b4a87bf21354eb8fa680bd07fbafcf8cb2fa44a9bad1ec8d5692b12a0390
e550e272449546a95aea075538359df87234050bf5b6fa86634e628dce90f5947772b834d3dcb5
bbfef9f5faccac5ea302813fa76a0c7e8d4a6904110e7d164fdda1f2f9e867052945e5697f3e7b
3f3e44a159fdbb940d942c43520b6760dad2d26e5568604eaf88278a7842315d062bc8b723d19b
35d5913264c3313d68f88a1f063d0c1b5d51296c7c2878c5a016c6adb672f6148ea484b4356477
94900efc313ca6fb90d3165695c194440f715875b1817b511a9255d75a7ec5343baf3115503e2b
7b7550688caa306b175b35f1a17d821f4168e5f8caa50058e5700eca8751c8446a91c1ef58e6d8
de3dc3d7f89facf39e5063c470f80c7d740fc48d67a51eb34adb4bf49f04166e3c8cc5edba3268
4d760cf5de8e3b15fb7c922bb6866719f75f5e4b35fe0bcfc50117e820a707a9d45377bcbb9b50
57c58d4d9ed248becb7d749ceaa982166f4e8fb3617654d46da66f2766ffd0404adc348bbe5cb7
8623985f7bfe0b05c802f028d9f4a944f3077e85eb1e953656f07be40f600f17273a582064e98c
77b6ed4f49b086e2e83e8e7dbe8cd9da174b49171822ca13ecd8ed6cadad41e56bae142c7ea81c
e7041b17ce25ecc4e7b836a6d2831da602b8e74347810ee746cff2019ac296c137e34d2078d6cd
89d12714fa8056c200294b7d43a678eec4b09c0dfbebc9899763b21f281a278d4a67701db89d78
6acabde84a78a9647f68ca1f1d96237ba5496e840c270c2dc9320668eb83864c340dc520d9de1f
6c6035efd0273406a14dba72d0d484cf006f559c114020aca0bc9e1822efdfec07866913956d0b
f90c5b0f96b6c17799153e59603fb415cbac3aad5512eda753de8ea7b4ffe9135a8c70416899f5
b6d1765b03acac1f8f970bf2d937ae6bcb694dbd3df0db2b53fcfdb8eedfbc7bb80246f7173b31
93c0fd9bb5c1f2c3b3a9aa1b4ea166322660dd848c4922fa4fee272ba1ae64beeeb19cc875b268
712aff8d4f245c2f081ede4e619321f341b217198e7a7b6b39b5a13807cb970ad03277fdbdbf29
235c600e20ccd4d4153a4601248829f857509717222c2c9535e05debdede4dade6ddcb343c2e71
5573b2182af3875528120b42dfda773ced4e091f4e99fc1c8f33832569adb8233c781b31ff3786
8723d053307300f1e113e908473fbe39ed75a931c290e7efaf4c89d4cd22f63852ec30831d61d1
de3815a6d18fbcd15f28eea75ae50bd0b237e8cb0870cac5ddc13da58dbd060d3193fc92e6c4ce
f3bcfd81ce6b3679bfc5855796cdfa8a26d63a659a2ff7a1a7e318a7f76ff80e846a2d647d38e8
27ffaf54bd5a9221eeb416a475eabf4ef0409b1ca55a851c245bf7207aa06f542de6dff18dedae
45ebd5df41c9716f9f265e0f76ff738e8b1365d83a50d5e6ec8124003f416efe2f6d0f7804ac7c
59f19265b3d1d20ec202d2a8f04cfaaebcf61da57b1dc67a714a16a2692ba82c5058af93c2ae5d
9d1f87b638c5b191eb96bd1ccaa8346e61cbe333984dc3dd511d8a6c7cecb703091db94f945ed9
abae8f8741dadc74a02769e5a0afb87ac17d08346179d17c57a81fd3a4716d2fc8caf05a6c85c1
81c9532d22884c92d0adcab0e8d157f6bed308689f816bb889f53a7a1ea628ed7190e29081bd8d
4ab0e74d44ae28ffdd9e407e4de72b543b45d7d7291248e689ae783140e0cce8127f1cf4ffbe56
4e82d9e92163f1682dac95da42c4dee1a1b877783463f8c74d02303a38ae0463d0a7d88fe2afd4
4eee9df41d328ed439b73691292fefde0a9a0cf63f18238a85f12469d6672f40e7d8771efcf4ae
ac82a7d825e210d7441726e133a1105137d0c3f4de20d748df90d26f480d70e0744d85e09d70be
ec06f53db2ee3c198cda3215e907e6428dbdcb666fae782af947c84467e8c4203c526012d4c641
73f5c4c3bfacaf923e348b0f6c450a9c37f60e93b2f2abb07abd59c62d984ffdb322493943705b
4536e05ad78d1df159b541513cd6fd08a09e6bfc316d07e530c2e688d9b885822e11da88af1e54
581d511ef180a56faa018e8cdaef5a6e8ead14e3c5547b797425f1795d02046fc0a71b72885c88
9d3e52666b85bc50b193611f4a0b701882a7b319fc0d539a9c8912216fceaffaf43652255552cd
d7d8963c9464e435412c4661f8cd6a1c617081946df9a5e9190397626abb09e14cc4dca09ad254
ab1618db1c6c81f0309d471bc05ae2f594b1caee445a4e288e52cd8c989d05867f34f51801cca2
01da0efca37c3763f24791033ba168b4e78fda830f6281be511f9189824133072d95770125bca4
7c613a88c48decc977d07674f798fa6ad70de99bfe78b46315a91b991dff0ef612551023b8144b
cdd4822b742ded4dd61092f27d272696919a601c04692cd59b21a36b42f110f655e59006ddb637
e012b7057336c84ce0b76dc900567b9b239f1d9a76a31b634c4cbc0ad5f28d635eedec9b7559c9
0ae9dc72303f0bc3faab9b8572b7aae13bbaf79bf2b4f17dccb88647c229b51f249490e0364694
c303
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndResource
%%BeginResource: font CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known pop false {dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /f-11-1 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /omega put
readonly def
currentdict end
currentfile eexec
f983ef0097ece61cf3a79690d73bfb4b0027b6f3b53cc32be64063d04d328b49c17a62c396cfc8
17b9fcb732c3b0aeb6264b2a70f62fbfc397eea8d069af80a71b775145f9842057f969d124e630
1a760710a5c51e8981851fbcf7f1cd1f2ab78db91af2a6f264e41cc2cdecf450a3a33c89fa447b
8bad4068cb8d7d37adaa4caab8f72cc26b024348ef8708a0ab6ee56d73f035ac9b506c91fcafc2
40791cc10b1b0ca42c87a24a69e83f61a20432744f7d79437b93825d955cee80718831f56e0254
0ae4b3a70b9dda35ca4fbcabfbc50a4cafca7423203cf03b8e9eafb091f06b2741ada33c61933f
ab98ef2fd54411c6564b030947ac99cf02f4194b6e0af84cefdc23c1b2886506402a156f0946dd
e0f96a087eea2ac27fe5bdf35b5340fc78f4deda8c9d11d98c0f5e55a92c96eda070164da36646
45cf37d0d548891f41c633b2cf39f3681ca5b295c862e21d4e3d461f0604fc3557ead3f103b7cd
e8788062ee55dd643ebf68f02de9509a711b769bbaa2f977c0c79c626050e6cc409496ca36999e
1ff008ca97815500e97752078d0286a73dfc1d55e84337b5eccb366bbff2cba70847a15deffc9a
b9465907d667d2583fc8cc9a1b753fb839c71d02786b206edb49d1f1e1222f15e35c63c1308f9b
5a012747cde52cb2b9eb0c6805b3b05040b32dbc7e380ce5ed54283fdc2eb2b9eb0c6805a609d5
bc292019eb65c765ddae5d9f5a6193a059c6d7674fd34664fff5fc0442f1fab44943e0f74ea3c6
00960734464cdc627ab1f56d3b620c7d61e434c0469999ad8a683b008d4318a044a01a6ee5c4de
a893d727949247b65a100468185591755ad88509374ea309c172fa8fae1f28ce2d6b478e29984e
142bd328cb3db08eb3c0798faa3c961089be48cd68ef446a7e7486cdf303862f2c49a504f01157
77979c3cdf97f2fda864e361612983097ae515ccdd43cc4e7c2832837b2730cedbc00213c1640c
bd6db49d0d729017e5a45b2eb6c10992f4274c8fa188470c82b5623f4607dff4afd5892cb6cd5d
85a03022b4d80fc1c3e271c4a3d53241988b6c9c1dcef7a0f9f19281c2a01c858d43fcd28c360e
5aab9ba5d4dea4db85e3a26cc0e8d7defad8c9976dd7d45d9879880dec2766c6d613450cdb6c87
a690dca9298b59923709795bce1cb2a7f1e3c7888ad49ad9f12090fc5371ea8016b7c0da013dcb
ae8ee5985b69391d249998fdba8da313ec5788b0abdeefaa9239c4edcbb4b311939899a0646a40
31ef6d0f32a9642bb52ea218982daa9fb54679a769dd0ce17187f09b1dec550179a9f8ba81883a
fe662ef681b2811e81e3e459cbc8e5a6ed948602df36cb16ac7dc8197ef5d0123780e1f4e614fd
8d60f5f6c69ad7377806b6f64aeaa409fbb41dd3ccead8d56e06ee86cac471c474e1e1b727a0b0
18c82b41297c09366a3f891de3b9807b62b6b3823d7636f6df7ba6884d206dd39e8c56bc07e542
8d35af43481b160d66572f2eeea2971e9a4744fd79897ba8f917018578e438f98aedcb8a073cf6
79cd7e52f77385a5b336fa80be78fff9705ef282270f7b516eb7d163181c4cffed31a5553007ec
327cef977efeded1342c72944f456f78d41d031fa614a8eb118a653e1a77fbff5c0e58f38d44a7
9124a9328900d44e67cf410869f1c45f1012079ab637f81356d9cf0e9b3dfa9e84fe0f296b85ca
ef4ed92097e52b9e71c17c6f8f7637f23fb60abe23521a3907d3442ef45562aee24aecab21b42b
9b24e22a0e58b33aad59fd9ceb08743b270c653b372650e67ab556369259ec5356c846ffe63e57
a421bd03c0e25a4c2a2abe0cc24d234b41fd269deeb6af086c4f12794dcd5e2485a4831d60ce1c
6305e0ce6b18fba63a71c3c1a88b4aa621cf9c1a2c5c235d433725d14acd1d0a7fe0c8dbd88a46
ca104f08806a8b0fc6a315fe9e4ab19ffd534cd281ddfe35664c24b7a6e4b9c1d6faab46c4b81a
dadfd591a3cae35e7684a2ee95ab6881a9ca351704023561d3d9b4214137112bd8b64d9085474e
e78cb85ae23d179c21f8efe8baf050d88ecf0f422bf0c15f102b5ec92484ae51d50e5705fb8b28
e62db9f8c32d691cf9cb209a50494acd6e55990d15c6a130ca5a094503712a5db0655f4383cbe5
785702c3b95e6acff0d6d1bb86c5562b71d366c068e0df346ea2fdce1d673a78d04a3dc88377ff
ae336a2ab2cde346d17e7962de2438f4b5e608cc9707f2d560dbb9c4786970d8df05b47c81eed8
f26573b38e1dca64f4b772f49554f24bf63e95b6b2b952f2807f3b35ce45c689a9fc7bc36e6413
619bcf52bb1cd0c752640dd4dc6104390a7546dbeceb7a2ef1a04bbdd5ed4b730fbc610bc590ee
309c3c49b5e3c9be27369fbfb0526ebcab6bde96c9ffb87eb7bc4361381e0f4472f87b4c17fe35
cb93ea3fd8ec25f49c92476875986527b7dc4093ac056e5821c44d7fd4e2cc32423ea320d5f6c9
38e04ccc1c259fc57282a2a876ae3062aeebd3efcf06b72d8bc51eeaa8cabaff8961327318f53e
8e0136d64c169cb4190942dcc3d7af79ee0575101ea563a9fe85dbc6f3611a926f77f33af26690
9cf5647f64a55b285cf54b5b334d0d0011dba80af1eb7c37b0410072d90429b7db7db6ada180d3
202c6ad7057c7b5fd5f59578a17ce04b12d8b8de2c55fef874bfea8d9825b5ee233a8ad91cd8c9
56234b1dd4407eea57d4bf78b89f124d0637e3a9a7223b6c73fd93a687528e38c608f62298a60f
08c11b62a9fa39068feeb9b5646e84d422aa835556761d1459386adeba9fed5b74e2d78f695c49
f9d829dd85b9641fab34cbaa49e3f306ebb3687b1bb5c764495943074e2dab0c4513bd1d14ea2f
5fc1069df238f0b38cfdcc7ab9e945374cb6f45c740dc95f8e6c82fc3247e14bf27443e4c0ecc1
09873c1e51f325d8d52338d5cbc8982fff68fb5fb92f11783bd6cf9b2307a2802eb9e68321a10d
4431ec6a9e4b6d5ae394f2ec0e8b53385143802f018edb580ebfa5d0406bbaf8dc681185582862
2626125e293c47204bf307b1bcd649ebf20be0ae42b0364b37300da60de0649e2150e70614d024
a3d2f75bd9a886f78c71b59b6754a0bf7aa2f76f920ab9c0f1cd1bd531dd25e6c2a3e3bc8da49b
1c1ef82b4737cb81b0510d551f844adfc80a55301c8310f9d103c489c90a44f84f47b6f1b8d474
366071ca1522215ace0d842767ab2c961d1c9b32bb886714945aafccfe513743f5f5c44dc1cfec
eca538472511896c85b2c9126173c12d4b2b36c4b62cae0e746c0211eefb8a8fccb473bc50fb48
a3c3e6946016908e5f4f4914fdfeedf1186f12a39f13131629ab408fb2e0dd186c257ca3dac07b
e9a7528c725db8a93d52ae0c10e4d290aef73c7fb2ca6bf922423eb71a8c59526e3d73e057d627
9630dde8906b795562f4396c0869a20694370f2696b00fe2f96369b26d56b34a0fe7ad376519d1
b8a50598b2d5a60004a3b7c89218aa9ffc1e5e74ecc4885c517c0627b58b60b136f651c1d48f38
8fb9351fc5c46dd3c4bbcb7dcfd01e6ddd4063bff55a34d64c55599a82417717eb593ed428b677
50972bba8252c31507bdd7435abe4b4edbe81b312cc5f91a1f9237ee9c278d11b51833f65260e3
bd0410699d0a0b8c613152578fac985028eec5f10e8b9bfd680cb0bb53b8e93ad0fa3a749cc223
bd356319fb1b6c6ec397d22248f0891ec1b60e84e89886212fe1b41d5c2b6345d4ba2340306efc
811586e06ab7ee765e93c50b873fd48870769d1d218a10952a9856b4b51445fb82a7928dce5fe1
805b19b99d5378cc9271c4722e47a09a9278ff244bb280cca6a828cd0901ae75f5ba1f87e73253
984d7ae66515141e34d90e770992a0736e3d042b304271e207db1f282b2dff4388e48eaad733aa
746fda33c9d9c7c9fdc090b4b2876fe4645c0bb822ce40d581c7625f9ec0de5dc6a0669412e971
2507139fc3652c35523afaff01d3bd63a1e2c8a53b9ee0543fc505902e8fe0c23f72d824e951c4
0a6483cd8a12a5b29f7c799309d17386917861acc27c200aaa34cb2a104dba07eb4ddf5e4099e3
57d625394728dc83e1d722f3cc1ae7598f169e9c9a2c1e7250715dae8660ae119d8e29323faea6
13c0d31c0c1d4005f2bfcc2d7913f8a0e18d1da390e2f1d3e28d6eddd09c93d019d608911baf7b
ce79557b1397975e38e906b695b6ae1c22af047dbc1d7d08744f182b2263e14a75b843ddd8f990
078410973d7cff56e897245a224a1ddbfaed2d848ded109648d42da10219fa6358bce77565464a
e52af167fabc06c11e6726fc233d0144d35ab68c7269ed2778017ab4ac15639d2588952fa22550
e273df724abf514d1f0364a1e2a7d9cdb4e356494de3af6125d3cc6d2ddba01ab92d36216a0505
b4c0fbe46ad4674d8bb51e7520fb4403bbae43bd6a69e475eff0ed4f71d865f6d3bf6e3ed57508
07de076c0b1f59083d488ad5fefe10d1cb93a0f4f110e45a80bbb00bf408c96bc6347922332f32
20cf474b66fe1904fab3e58c9ed0b4cc7215665ea72ea2f7212e7927877fe71070d4ebfbe97a37
5a8784640dec93f6d6eedb7224873e8fbef31c40622d385f6ee43cc6c5720d3df72065155d58eb
d21f2c93f323e9e0cdc35ac43330f9ccbcebd9415173e5304db65d3dcc4a8158b8a838ce7e0bcc
4f4bffeb9333eb9a28cdab15cf3256ae784884eb1fec9b65328a0a26d0c8edfd3213384b367fab
9829a4a1823e223a3fab405e51593700fadd42352144f1b648bf7bdd217172ca43066e2632ddf3
77a535b0d855ae8120a97e0c907967c36e88b9da5596676c9bc1fe9449bdae8ed6ed101ca70798
afb9b9ee1b357fbd0846af20d3f4e64ad7793501a0f52ca0710d5588c8a7900f9f58164d8e5174
a413764ed0b2630585c09c66a62e3ac562e06f2572fba273f8f2f62b50f2fb21040d12f607db04
0076159fa283a42c653614cac50f6d929c6d69b7ba331f2bae21b1e25c2937b5404f6ff789b73d
b70cd06e32f5658dc2ccd53d40acea5b19e4019263058c333d81e6f99741a86d21bda9c6a6680b
35fdc036ae2379b16e7549afa7ede71c3e23df721ea9f4580d8c516832677fde26b79ce1a92246
7086e293b003c9f725663ff089da8855c5fd232612fc0434c25b759debaa039a658a8f291261a1
1e58460247bd0a03d3cbaa7b005d605030d42daeb1914ec78ffa012e5a416ba91a877872a48936
2909cb20cc859f032e305be4e1e2510803c3f475ceda2c3dc8ef409faf1e260240d9eeaeae853d
f289471f6206a91d7e7a24b3568ecfff34269dc13fb9cc71850093db85bea6c890ed3ba5f8220b
7516353a9b9a7ae11bb69b37827e6036602b536a8142d4524afe7b951125c1243d3c8845a38afb
7bba584219487cd88b302487e502d5911d79eab6cc2070ab47d5bd927b0a835cdcf0362c8bc0db
3b45ad85aa6434de49b32bbb5bd180ab18c98b8e9538089552b3600a532fd24769c35281f3d605
85e75988a305f1278f6f2a5ee0405d0f30b6770af0364f4d982c07d607ffa4d55cb773d92f9b0e
163934e801ccd9a23b47930a57cae509c9e021d67c3e08ba173f8274b6b1fc1a53305dc998c657
6ef045e84fc0bb391e971d75d69cf507daf86967bfca7f098be6f9f19ae1b72c433826094601fc
acae2fdfe2773bdffc19616ad0e1da13b6575b5e949bee16f4198ce82df7bdb5a0e5411acca8d7
4cfa1f7fb2f0b696de35d3810e090f2bb036bf80aa77d8e71140005a3014d736d4338ead5b3ce7
760b0008c418c80508c44b9e5e8b58b6b770cfbd7aff85631cca1eacb7836580f3d889d9055ff8
08f29cef9ebff7ff904f89d6655dd9a7097e2a27c19a0c47e710fe7143a2ee1e642da6af560630
5c2abca4db9ae966057c124757b094b5b1226702b1a7fa4f082f8f1bbf841abbc29f760ed72e04
746ec76895d4d5d78d2e09b73e0b6cad2cbf7b2583c1b6aed6b208dd582795177df4976908582a
253ce329af84db80d2ddb23c02c659f99c0bd70849b40c4bee2c41c3118e5444cbe7de1e57da26
8c9c6e0da8f2fc33d7193f0f4ecb83dfbb9bec8d0098c10134fc5c2700a90a9f0707ad75762fb0
63f620b691c478ff88f78b486e7fa772c06e3f86b94555d981ed92fdf2ab8df1b9c1f9aca18009
8d876e0b5a1f44d53a4341ad0c3c0837b8a595932efbeceba6bdeffbee967e474e173f99907168
9c1a7e23255d793557a022726053b5bdbc9c333926d714ff8d6261e492df9c905dd66dd1b7e17e
714a44c1e073deadf6a250b765872bf96e047b297580c27ad1714d8a2ce93346d0a972cba8bae0
26bc1646f8fed5c9a3366e73a2a65fe7fbed4a8447ba4cef3f25e20eec13f5448dab2b1768be14
a2f1fe90117079de58883a86e7759a3f8723901e70ed76dfdab6db2a2597f3cded02e1418e33ef
2fc5eb86072ba97db0b4a87bf21354eb8fa680bd07fbafcf8cb2fa44a9bad1ec8d5692b12a0390
e550e272449546a95aea075538359df87234050bf5b6fa86634e628dce90f5947772b834d3dcb5
bbfef9f5faccac5ea302813fa76a0c7e8d4a6904110e7d164fdda1f2f9e867052945e5697f3e7b
3f3e44a159fdbb940d942c43520b6760dad2d26e5568604eaf88278a7842315d062bc8b723d19b
35d5913264c3313d68f88a1f063d0c1b5d51296c7c2878c5a016c6adb672f6148ea484b4356477
94900efc313ca6fb90d3165695c194440f715875b1817b511a9255d75a7ec5343baf3115503e2b
7b7550688caa306b175b35f1a17d821f4168e5f8caa50058e5700eca8751c8446a91c1ef58e6d8
de3dc3d7f89facf39e5063c470f80c7d740fc48d67a51eb34adb4bf49f04166e3c8cc5edba3268
4d760cf5de8e3b15fb7c922bb6866719f75f5e4b35fe0bcfc50117e820a707a9d45377bcbb9b50
57c58d4d9ed248becb7d749ceaa982166f4e8fb3617654d46da66f2766ffd0404adc348bbe5cb7
8623985f7bfe0b05c802f028d9f4a944f3077e85eb1e953656f07be40f600f17273a582064e98c
77b6ed4f49b086e2e83e8e7dbe8cd9da174b49171822ca13ecd8ed6cadad41e56bae142c7ea81c
e7041b17ce25ecc4e7b836a6d2831da602b8e74347810ee746cff2019ac296c137e34d2078d6cd
89d12714fa8056c200294b7d43a678eec4b09c0dfbebc9899763b21f281a278d4a67701db89d78
6acabde84a78a9647f68ca1f1d96237ba5496e840c270c2dc9320668eb83864c340dc520d9de1f
6c6035efd0273406a14dba72d0d484cf006f559c114020aca0bc9e1822efdfec07866913956d0b
f90c5b0f96b6c17799153e59603fb415cbac3aad5512eda753de8ea7b4ffe9135a8c70416899f5
b6d1765b03acac1f8f970bf2d937ae6bcb694dbd3df0db2b53fcfdb8eedfbc7bb80246f7173b31
93c0fd9bb5c1f2c3b3a9aa1b4ea166322660dd848c4922fa4fee272ba1ae64beeeb19cc875b268
712aff8d4f245c2f081ede4e619321f341b217198e7a7b6b39b5a13807cb970ad03277fdbdbf29
235c600e20ccd4d4153a4601248829f857509717222c2c9535e05debdede4dade6ddcb343c2e71
5573b2182af3875528120b42dfda773ced4e091f4e99fc1c8f33832569adb8233c781b31ff3786
8723d053307300f1e113e908473fbe39ed75a931c290e7efaf4c89d4cd22f63852ec30831d61d1
de3815a6d18fbcd15f28eea75ae50bd0b237e8cb0870cac5ddc13da58dbd060d3193fc92e6c4ce
f3bcfd81ce6b3679bfc5855796cdfa8a26d63a659a2ff7a1a7e318a7f76ff80e846a2d647d38e8
27ffaf54bd5a9221eeb416a475eabf4ef0409b1ca55a851c245bf7207aa06f542de6dff18dedae
45ebd5df41c9716f9f265e0f76ff738e8b1365d83a50d5e6ec8124003f416efe2f6d0f7804ac7c
59f19265b3d1d20ec202d2a8f04cfaaebcf61da57b1dc67a714a16a2692ba82c5058af93c2ae5d
9d1f87b638c5b191eb96bd1ccaa8346e61cbe333984dc3dd511d8a6c7cecb703091db94f945ed9
aa9f5cef4ee6e65728d65bd56370d88626f7977aad94a80d9ce029be0127d82d914e3503cda7f0
2f1f10f5d5f7b8e0c15c6c2eaf42b8b0a13ab598bbc41d16cbe1578e3f25135a5e8678a1439f02
9145421045b7f2452835c615b7d563fc0d5c3ee0a227ef450af92fe65bd3887e91185da6662452
b3868d3340b53a1ffb91d5c5636cdbae167a1d7f8c78d3fb4dab10a4658e211ed86fe19cb8dd6c
aafb7e224b5ed6e7fd6ef7f217989458657bed955f4b01fc8a48a7ec23df451d02679a83d55b98
1b9d65524902ae815b287d52b5d0def768612b195f8e49eb3e9e065da08334a4e8fd99ccac9918
aa574a1f431103f308d26a7a3c71d318333f30a840635d656124522678602ea08fdcec92776e09
eb3637e2caa4be83b4724e40bc8231dab75ac14eaff95b127058beedfcf0f2cef858de343cf3a8
627d2a7c93be0b04bda102530743fc
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndResource
%%BeginResource: font CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known pop false {dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /f-12-0 def
/FontBBox {-1 -250 1171 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 107 /k put
dup 109 /m put
dup 110 /n put
readonly def
currentdict end
currentfile eexec
f983ef0097ece61cf3a79690d73bfb4b0027b6f3b53cc32be64063d04d328b49c17a62c396cfc8
17b9fcb732c3b0aeb6264b2a70f62fbfc397eea8d069af80a71b775145f9842057f969d124e630
1a760710a5c51e8981851fbcf7f1cd1f2ab78db91af2a6f264e41cc2cdecf450a3a33c89fa447b
8bad4068cb8d7d37adaa4caab8f72cc26b024348ef8708a0ab6ee56d73f035ac9b506c91fcafc2
40791cc10b1b0ca42c87a24a69e83f61a20432744f7d79437b93825d955cee80718831f56e0254
0ae4b3a70b9dda35ca4fbcabfbc50a4cafca7423203e4c32daabc53c5c9176259f5577f448eb04
19fb1f995e26b695448ae1b5b4698f36e180b5f489925f090c8c7a950833922d9cc464857975f9
f32ab824eff4584575cb2826051232924d9d3e7d73ab1273b03ec3d7c9eea9c8a55c4b66336e32
d80401bed0debc4f965d6c4aa76d4db6713674f559788557528b2ee7e9d12075bbf0dfd327b427
c101a932de4f1af17b4a7afd4bfd1beb04a9e165fcf9eedf112b614313b4f4c46fd95582aab8b3
3b74fe33bcc6ce01ae4606b8199fe9e9dea40c8015c3bede3f77f31b2adf122ab542d86836f94c
683abb9ae9991ce6f9e36cf35acdefdc4618476fa5d49f444c55d10e052d62602419dad387d129
66efaa68a6528aca9fbc2fc910db86d1482d0f54a60c409b0f340e130508c53b822d1b76997e86
71be9537e48c1e20e3d017f40b7409141c88513ea8734a87c69af3f669e1a52367e9fa052cb5fd
31c984f11cc12432b596d9b851b87a83e10c2e201f0a98f929fe90b413b810ebd4b6be0e3354fa
249805f489868081c5d5be0739aaa4adeb88cf98457912778ef57b46563c1154c684f5b8b3ba96
efba33ebd798baf4af3ea237690644943774eea53399c49c0a2ae78004a98b9fa3149e5f27392b
79b585e22946ee5853d5b6863d344ed72fbab2da595b54177a867a163d0f4fff1831c3d589a918
47b2d7da4e7c1de71b807c6cbb21a7216097213a1b417d50ba3ea708bbf8197adaace2cf367f56
34cd5be3224deaf75386e9c177f6894354a0f56d0bb788834eb4e9c12c9912f12321e17e70ae1d
eb9ebcae20462aa03fc8f6e4967a7143ab30c947146588722758be697bd10ef2d9d0a7f1682c89
57b68f995027f1f0aa914a71f3c80d3a9cfa6e1678b4cb851b1543c3b681551c51c324b5e98004
5ca101e13d69768ed2249ff39e8fdcf0f33c7d3dc9a9d13d24a98d1e4d79b73c34b15986ffc4ee
b66f9001888c4f7e4c43da890b62bc085171800787200358a12bfeaabbd8d18213fe827e2aa58d
1dedc5c11201b4a1473055bdf6f7afcb5d88895db6feaeedc0b352fcf1bcdc3cfec9297c347d5b
a699075f075d57d8fcf2bdb673b5980e89d31e497e38287c2dce8af698c74db56c87f8d5b5366d
2f92bf11cfdd814c1f90aa167d55274974bb5462c699505ea4a3c3f655e4010900cb5b7c4b9015
cbcbb0426692a68dcaac3a9c935a2ab5b09b2afd24c05873a6a994ab78e1729b07e2fb31f1c32c
13e2ca8b46d24924f79a421f09594eb51dc155b86954b27ef402e2c2b398e876f20060416c4342
38e69201f4c996fdf829926c5b66eb5beadfcde7654e95c827c7bc0bc07eaaaf3c991751ec1568
e5ac5462b00c4caba3d09818dbad987d072147d3b7cdedd924472dde17d7fca3fc451f4e2a1176
7370a463d6733e2c22bf29c23540e797ddcd09996b170945a2ee198991b487af6790303b808d92
b6ff7d79f94890e1b8eed22410c62f0b7c9558543074a2b0b17c398ad692a845181dab820b2a6c
10818b77fe742ad060e7adaaca5613903f560a5adc9d3f91666dcad54958f402f7e9315d9c6866
03779b4bac622c66f1b55ba1f089e7a5250bf1af9d97928aed8d255d9d777d6c6522bfa89a509a
b3d62a94db8a5e683838f03d035b233c9bc54f45d36679103ea250971d8a0fb7caac1eee9f998a
00d699503e1901f85467652a3f600ce79152fd73cb9c8b9cd2cfa4ecf1ff0cc0b6ce2d74d2050c
3a882090cd3cd026abda7e9a0fee819d2e72415ee599f884e09a98f4d61312f2a18eb40871ddd7
2495c517fc56a41aee6a6b63f27524c185a086140cc6aefb66a85851e1ae975472741e15d5f0a8
9abd0055f02438574d3c265ef08ff95a0a0c242539d3a4f823bfba37f19115609137e8d41e9771
d0d159f9fa9d8bea4ad12329fc048f9b878f80e09e6f0a602ee1898d518ed8d3f5a61bf6bdc840
653d9f3422896e05281332ec9a07760ef4f75e925b32630dfda0683a4ae6cb13611c17cac78c03
94493e7c2abeb5d3cb24ff28bdcd4fb511220525474acd62afa3e66498d3e51be4c9cdd9e68250
2f0dd62d89bc601e717ccc7d1471d3a12fbdc14507963a5c0cc980b67f5e0acbf1b752c52f3ca0
7470e3453e44a12a0b40fbfe8da181de74d45521d9ba48731a2b4e885d5c01b324307b78904d87
7e227117afda55e2eb038758fbeb8e20088ce203da1c6a14c700859b9cb0a3034fa87d82309a5d
3ff801773900a0072c385b4963a806bd3e1992e3e7dea99be56bb415cbad4280c85d0dc38ca0da
440e9fb1d2fb817f10a0d57c2e452ae4b17b8566ba07eee03cbff9549218909e8b63923e9219c4
ee2a8f50d914a0a4b960f4a685781966f7eb77dac76f0963eef5b519761014af532fe5e565ec00
e4f97d80b9257e554f9c7638eb3bb17c2f4b74f9b0cb11f6c03396771158833b27f3bf417c725e
e606ef74f8095596f4a73cf0d219e4312a52d9c06c6ae8ec0f40d726e9ecedf7409128752f75e6
931129f4dbbde68fd333c9f64565891425fa5d47d07dbe759289617d864d10acac1b5035cadb2c
3ddefa26fdd9dfeb3d2fdf2b3a4aae6dbc9d9ff26ab4eba2138fc1df4c2f32d32d1cf3377b65e0
e7c06cb3101e9c2d151a6bc9b456a93341ebb19b4769cd684fc4c34e4c6da53523799961a47a95
8422545d5c67c6edd4ed12d5c61dfe7b9e42836988de2e59ed363060482accc2a6a60a12c99902
0d981869a21e1a490f6783a1777d0678debf8ffb6b32f34128b2d3aad6a335fddaac7103c46933
a0e2dbfd880a775363803f6fcc8c96f66901fd4ea8402ab70fc1c142b89a6068e3d29f523994cd
819265669f862e19760bb245546871387529a04f3cd3d3ec00d322926d44205a40a9d57548cf19
e0dc3cb2586a72a5e6858677bd742e8c1887baa42b8ae6b1f437ae8f300de1f4d8d1281185134c
beefbcc4c896702098c97beb961f1cb5e1441d3a4ecd4c490880dc19fb0df736069ec3a72bd077
93b9b4495c6a55c9692a0b21a720e7ccbba8650f3808b72283c45dfd7811f4d4e794d455a8451e
bdfe9fe294d14e2353ea9c00230c5285e9be7f32849decbff16451e79e052ccbf956383ad904c0
9bd34a1c61423400d7cb02e88d2a908fdec9edfa90c981bd5b540233f737634906c7079e7748d3
7e00cd7944c912311371d4189fda2b4f48645fb7914a7bc2563df97a7e431e52dbf105c33dbe79
4bfb3efb203752d30889ce61e1362d030c23a32102faf1246a2ea80449b6a3c280835552118b20
24a36dfe7e793ed933a675c1dfafe1de9e29d3aefb9d03195e45380ef9abf17fb624651ce0dfe3
4b72c45d688e631b355b3fbb5c50811128a7480c0686f17e651b9ff6b869e342d882b1f216fc13
590cb94534aa78687ce45e6d78e79ec0d5ba5496333b0c522afefb1b5dd43e468148ef57aaee3c
00ab23ab9b0d0c5da336bb363d432360f899f9dd433f84e80987c60c8091a67c4fca76db876bff
181bb618327e68c061308cefa0a3e5a794924428796f0163e4370ec3cdab1ad1e1e9041d4cca8c
e250f79f5e48ce29605c0f37c011de30599b77345accf491538336847d17d71d7d25be9a514bcb
b427a4911f963cb38eb317e183294002f8c15313e89f584a9e8a0ad7f9693f14e29b49eca94b67
8ae0fdb4cc64ffbaebe2aef08f7d8d044a81d98056cb92b8c58e455e878493dd97eaab2b7f12f3
36578cbd077d4943e10468a24678002c651f408e40dd6b27c32015757b4243215809df1a223cfb
6fcecca001031d668ab13dc924a14998cf2a56f06870f724921f5ebc92ef3611cc1672298fd561
22a71c59d995987d736ec5a23f04e066ceff6a0dfdf2e39451d8643b426463d2ec42002828ad8d
230238c46ff88e1abdc857e3d836418b59cc21e9353c43e98f755f1208871d13e3bd1fc78c0d69
0d32951099cc3cef99d26166c3f46a5f14b8c9cea1d798e5437c34ad87f4ea4ee8a8c832adbb78
52b95dac37b3d133be93caf47b6b23fed161719a0444f1d7f7487b101a90a5acce95a06e8e8978
8ba4f034561eb96018c32a35c34054e2746cafebfa807a77ab4b3ab095fb1e21de1c5f71c91d15
393d7804e19f69d62fee85f48769cce52811bc991bccaa8a14caced77742c70a9ac72bbee8402e
ff12977aee4baeb2fc4415976ba7f82d9f00037c860a6c4e30b9eaf8a41b5af69d9bedda873c02
2e46c8e3a9d66af691a39bf46911f16918d7628ff152a81faedddad44d648ddc176f656d215f39
9c8c4958dde6c82ab15faa3988d9314d5fb7e4d2bb074e9ad8d64327ffc3c6e011bf1fa2fc7ac9
0aeb9eaa2379b6584dcce684e0aa4be43a45d52fbd9e53920feeb0d6853dc2570d806cd85f1200
bbad372aab1bf230c5564e79c73b032deb1c22f93b43c35d9540bde9751b88e1bec3f0e1d1ffa7
02b8e98ef393729439e8e27b4abe89baddff4c24ee142223466c27f3b93f001334e262b3fe6936
49ae6267977e48c8edb4c5ca6a6fa9c6b194aadaf1b7a8f90ae088a10986718b8cd7e36ebbe518
94e43b2d82449e8cf3079bf3f819dff89421281e3f54526f0d67f6ed9554074e053579bda748de
df79471f3dc8fc2b3e83c91c77f0628cebd119820345375d442e38cbdc2106735bc44f8fe699c0
2c8dddfe10ad9e44e3f3d1f01bf547396d95108a7338177400a1f5473cb7af7ac4576c67cd57c3
a7e74e1fb22cd9076dff26e73c9e6f3c6b7205e4b4fdabf8ae25ab2aef0a35df4cf8d9eb5b2202
770f8ac2fb3c40161ba70b4e25fce3fc0b3592b7cf3df1ced24dd84348fb5b81e8fc47b477e9df
9bd2b8f3a7354086ea146ccb66173d88a2bbffea215532d111fcd25e8af065e3cb03f527c0e46c
34de39e0f23946dd366e7c8f0bca6816e9e2ad2ffc4a8c31d68a57158d67525410d1ac390b88ab
48efe2f1c35a2fb30924dbb72379dd1ce2bf19c33e47bbf31c852dd2e7397895fcead90e7272cf
cedc70bd1808be257d7fd10282ebe9e5cebe3a9ac2a11695ee0639cea8085e02d1792db3643b56
20c6b695d459f746d38af29611e0610ca79f9dd210714bcc89b4ce4528206e4180751bb47d22c7
8282d128e1630201979413c3c4657eb33aa9773fac04fea7f8cfa3c89308fe3c07c9c06ed77e75
da768d2d838ed2a4bc6193595c75a80d39be25eae60260dbac7d2ef6389c00d5ab594cd59604d3
878cf6eb6a06dbcddc24ad287d087f661a846a667d49d1a7dc1a0064cd3d4ee6dc6c38117a0859
006780828a819a2b1c1a70d520240e2fa252458696fbeacd3bd354caa3f8375bc24929ffc6694c
4b5f9c52e41c21cc1ee94e9b9855a9d5e125f11c75cd996fd31d50c0d8971222a6a2e67dedb190
28969044b666572da630cc3676d5ce3f79b2f993ad5a90f59a4c884c5ee8d0feebfe5ad93232f6
87d6b1536fa58be36acec7135452b34dad37224763b48be692ad3dec8708af788500cb89dbe073
75d66b4fefde33451365fb85d8f4c3410aa458bba8637b6679f356087219dd76567ed3289601d5
768ba93d4fc46708b36040a353d580c635b78114e03ef8825972e607deede379f4086c75d7e380
9af3df3d28d10bdf8e89a187a175f0ddc8b552cead06afae309dfe2d1f50a7ebc526dde3abc0f9
2ebdc6618374e63f0eb99ba419a9b8d7fc64b9859a1a37c006e0449aa8db8b89730348c71c7e00
bbb2a5d61e7614bfcc44fa74b79dd789d9faa0f0c3797eeac73df6c79992db6925277bd3579f68
a30edeccdc6f2f9fc811b600fc65856a5ec970e9c94f43b439eefa923cbe7b85e1400375502c75
738f14d53d9a1b182c007cb2ecb23db28e5fa8e1cee1871accd1e8a1c576c4ef224fd77bd8bf71
f04dbf0e9481b5c7f1b97a57d42edfc9335204fbaec1d459142b9a652ada01e8d0501066695526
ee3687249a003d48d3bc42a59602128a203845bdd5359aae213be3c7a0b34f5bee840624e44b0a
e9b6a36e63e049c048a7e2d7e1e9b0c4323963e288f07b161ea8527b7c0997e89917643c5e9b74
a68853db9a1815f49167c3b04b2a85ebb8e9f91148025651ce03ee31870dd62aae83715b2ea525
f4b8821506d5e1dae2727f2e3554a9dfae92ff30b1a1d96785355e338d9878f75c601979758161
53ec1a941f674b24d80bb6f8404807d77614171ed0aaed43a14c54cf81acd74dfb40b2e2a4555e
7f17dfd5d18bfc73a9143396203bf756e4f88808d0bcf2027504927a38ab6b63e82c2e5208387d
04ea01ecf8c190e40d05ca1e91138e332a743500b69912906c0a13beaaafa801a8a17931c47ed7
66d49eb017b5467ec5823c68d135cee848b830c0c4e6b96d4560e5e1242dbe87f60310aa906622
7fc10eb1f35c344fd7e8b954cffbcfc7c9b1ff5eef179e29d7ee3f3bf63834d5c19bad23aaa4cf
a660091594d228a347767af9e57b0c2c521e1fe18bcb271e899d2534f5b62de75800c9e1074666
a85fda8f762f38c8445f259070a6d6b6b2209b77166ac471118bd2c39d228007d270fd622dfbea
29cdfa2d330c8fcc4c72eaa5771056069c831ea95b52172a4b8d136f790f27266b67a859ad2eb5
cf5a20b6a39274baf31e02e1c487f59ea0ad622dd509438c43a4e110173268195db4b49c02fd6d
98730be322f0d727d42252c37a1b907453b9d7e789f0e1499f3edfc44554b541383ff294df1058
a9164ed1c453cda563dea3c3fe95a66eb02f80ea4b7e28af9238176e2beadf60addda4869909be
700f2eb0d73de20b65c2e0cd2715350c4cac15aceec0a0861028c4a0f5e6b18ee47be415d88bab
fa7f7e9c6274b1a72353b128545c8955b6a61fab002b95cf69949c3beb283a30ac348e5b25476c
ce03aca0cc4a062d66bb985378da7fa79fda0d46eeeb6b792df37d9cb9e10d51bfa3c9570e33e6
8326824e6c180c152b82545b2465aa21ce44006a5e5d986a4ad27d9eee3f9171e12294a0cfa034
343a7ece3617291cef7c8d1591109503311c24170544c96f0bbc68dee4ae9c92ce237f94228d24
ed46e254967016d46398f3dd645a352754015f757c913b5790e2c601f75dbd80c78f6adcd07107
08ee348d11a4b2742e40327ebecafa44d67969eacae402b808b40f482d7b8d14c29159f0646e3e
1100cba1674478062c89801edc767a5da780f8b6a9eb941f550400895f82f1a1bd6e0769f17bca
2e7997d3a9d2a27997671791b780055211094c20f718245d5752e8364e924303f18abc6e27b983
b2003fba4de22c818526665c3cbcc4dc65b35d61c57f851fed9b4aa7f5bc44458369cc0ead6ed6
d1c0999e42b7f730083986f42915df5ca58b9d9a78ae9b70eb8454c834922374f26faffc48a938
450406ceb976e87ae3d00bcf496450a4701c7784474d381791dc54ee5073a287b4d31616a822e1
25aca839f59427abbdcdc3fe8226c3366ca1f303e16ba85a3f265b7e835828914ba5fcaf6cc00f
92bc86cbeb0e86503d533ce6dc487443f08102feecd01ee1425bef03bfff4152b42db3bc1334ea
5e1d534487cbc1f5abfd954c88c94cf3ebdcb6168565d4b026c0afd5f3eebc6f06e7855b4c847f
33e892d235e0b4b5fb1029c16fe8a1ed66ab8c00527ff9505c34982759c289c8fac60d941c2768
d80733e4d665d512cfc9ae765b71717c6343b51553790303bc2b3446b562b2f74ce4b59f9895ec
df597bae4d4700a54726d906483c64557b68891869c430249969238fc881601b9eecd1efe20d24
91364b2a8f5727b511df9c8d83f367ce2893f206def275133d4584e84b4399d4c62d853414c9fc
82b11aed08b3152ad8d314047075a8e61e67f7cc415f385d6faadd226348d317aa4d126b3600a0
ad2cc3385304441a0f7e5902b2dfeff4418de4ceaa769e475ff77bfa54526931bb05767bb02c09
9d335217a284d41f20cbd4895e0e965e4acc234a5b1b6942c561c779f0f56e8c1773bbc02978d1
020b153c589948927e6223eb1be86d084a32b33e13fc9c31c61eadf14755cd065f932d8aef03a1
b3805aa8105928af2c527c6698243ee5f68bf8b8e26882611b62afc1823b2fe120cea1b3d1d557
c6dba6401219a834982ce74bb71ada7954d17f949f3b83b99616d08f7ca14a85adeee29f353ec6
1bd9f53d82be18195d46ebb49204cbd630485a6b67eeafb4c5c68b24d9be31e482901b8970390d
853d8277ab67e9b5e8087d1df38f2691981768e660494013ed6424878b20f5501d7817783691bd
ed17801576f3c4252e81f80499fa1067224a2f5bf7058f1ba78ad427193ebd89c2494e130676a4
a654a0296c78c3386eb08d56dfd11dcc96300dca2bafce071d17b2a318967d376de73c5c7d52c6
86439ab42b72c06383cb6db4faf7adf135d692a370ef372c77833c0bac49a776ceb0c9157a8a8b
1bc9889a4f7c3bff3e64a376a3ed96de95bca29cbee1d8cd6acd3d6e474e17fb02df7f4babc2b5
c1981bdaadc776e5c1f5f9eebecae8a586fd7d09d9b6427d0840b3ca11be4b7a66c5dedcb547f0
006302186421af6fd790d414e28002c6cee88cf2a8d20bb20c70b7ed4690727c9656b9a7d1a5d5
b912656d49536aafa75d6f55d358168d6f87f185f068771b341d3ab6e65d19c8b0293188961769
1ab1b87dc87a856ba154acc3d59068f8c8669eb2de84b7074f7794314ac7b0b3abe5d74867597b
d8fc8ae26f2779ad37c952582700b43dac44daa5d1c57cdf34dad9297fcae33a4d71c0ba5d8291
af23ab5c3881e65997fb59f3442470fabc164731415acd12c5e4541bfc3aade7a277964ab1999a
e5659634534bbc28f37b2dd979ef15a46bf2a550b793090d971016af0af884feea38ef36cff38d
e17bb335cf3c2aad2507b94fb18d04cfd2e3bddf1badab61e064f2a9c647e14a044c19533d8368
5b299042fd41405dd3b4d9f12dc3de91762c64ae8ee1f637726c82af7b6d07103ff2390920e4b8
39b4efef8bc76891c9c118dfc8403a1c556a13fc28e31a4367e2556822d88ca5ac62b37370192f
b1331594fc1c8ea78c6b9908ae572843bae2804bfee34bb6e37c6d12083e2522e7623aa970f1b2
9e0332f373ce43190276f774e74ec8299537f23d99
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndResource
%%BeginResource: font CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known pop false {dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /f-13-0 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
f983ef0097ece61cf3a79690d73bfb4b0027b78229ecae63571dca5d489f77bdeee69161ac65b8
1a171acfec6a38e69dd162ea7d456fbeadb28c016db3bfa3a91b731dd3d89e31936de5e0ebbee4
d9bf15a1d35b3bfa43ade27c55337a53e8117722f41ae71510be6095ec8fcc4480cf4d4b3c8a65
dec16f24a875f2c200388e757c8d066a3bd39db828e62e2d3d19908b221b8f5b58f7a6a2ebb901
d705aee915d9f92114c59f6a9124885e77bd754ad8dacd1e7fa44ef6a4733c0ef482d5f4f7788b
0d58fe7cceea728243b0a6d07c975363fe2f68dc120d39bc1437b4ac6e91b4f1adcd675ae140b6
f59a96ca858bbd5c861ee4d4da5cd8c0810bbf81fb77d72f04692826e26e06411cd5bf235072b9
a22bff0b022257caea6b35a80f6584f84fb25d2b12b487b122a82e32ffef3260f9ade779b4795d
3c56adfeb29c4e258b2d9f9a28e54efd9bb6a98778a6cc09348657ae5c4f1cbd6a6657b6960225
2e89f0dc72dc41fa2151c8680593116af44bb56979d80ae7eb28ed92dd5211a953ef3956453d15
90fb10f8f053d924da5eedf7ba9ae7eef8e88adc91b40f9aa66111521e97affc76678b95a94c1b
10498274d41eb5dce6c800cfc2b1daaded801c27fd5b57ddf20a4e7acceb6ec82bdcc67f5ec5b6
9221de716f66d38f37d936a4379b1ef049d22ff23aeaea253f840f67cde55a9c0449f09f5c0144
ebd1be42eb4dc7654dea77f4821c36b37e6367f23bfd70288ebc289858ae641a75597dc3453bed
fea0eb27f30b6dfd61e07ec4ab199fea4c2f59d6f6b04bf3f8356318f0ed8e1e663838237ef143
fee4ccc3540ea39b05197d2d9c149a2a71569b89e3526966b4860666d7394635cec4328c5e453a
59e314fb4aee07dd60c6ce98b1c7e0fa4983414f17c728d92a27a7c1402b6bc51e3a9474e312be
1e6d5b802895af8e46ae6dfe64ff5e41bc52a3648091f713c7f4021c9ee000cbfd06faae97bae0
55c337de33c9cd0c6f45c4918db239e6e63d795f44b9d097118d083b6d6ebe2062308845affa58
d04bfccbfa3d1f3b4d086f1e362357eda652158996fb06cf39ebc15946fd58e6040e2150803bb9
d9156133cec43034651f6a759639393fe2cc6d608730180c4ff6fe77346eda3b4b747bdddcd33a
9c81236a22c18964c1a3dc6b47a384cf48f9dcda4481ac84ee0234b1825028609526349bd3bebd
3275055bdb3d52e2595512a9d803f68a9237ef9f933f367f4cf21bc4aa61ae6222051ca394db85
b9bcd0c78e7cff1b38db843b76e9eb828fdefef5790cd372d971e5bb8ab00df0cc66afb0fc526d
9e6a4d1bceaf99078466dbcc1d96c22b022ee2b84ec839a896acfbc1baf7cbdbc883b8dcd3368d
579e95d20124d58a0d8e896eaa9ca2dcd4d3f084aa237af69c9a958ae0129ed065740b556cbbd6
7695d32b1ac85b0f26bb974bd8468f058a619486ce6fc45b074a6541d409eb725ff3af49d5ae3b
d896d1d6bd78746535a61e265056b9dca3c637dbf690b539ec8fe181acf0ec5edced82868355e0
8d64edd445413bf367c817170006d3dcc6a9a7288531311a44035d457837b97044fb3beda4503e
e5820e5532bb9304e8c83201f9c46a1d6739b2da74d046a75a60ca064cafe82168bd87e88005cf
a68f9db5faf2f75f0d7bfdba7ccedf205bb6c7361a62e619af888a9e753f1522d7094e5a9bc206
cbce76f0b6a1d85a2b93789aa0cb3105e43acaf226d61764d6962dbb1ecb372fc27ab8e79763d8
3df97805bc70614355bdc853942f8f4d271b54b3c475b27d7f5985dd84b14c22480a6b156b9a81
2adc8ec155bf922fba301815ac958e68109c186984b28592719e1579e7510fc5b0429b577f83b8
aa4e11a93291dcd14a1ff76cc5e54de58ae4b399f086c0c8283d938d5f4254f37e43aac99f49cf
259036817690e55f09e8c20ee7e627cd38a0ca9d7a574a816238478497dffedb41bc0a56b7eba0
9b58a4d8d5711b931598873b73f54a94cb7db62a78b590a189c0b83d7bcc665ae203d5669c721b
b4c34ba9b85388afde9502da1ad77994941dfb0c8d9673fe3801ed7b646a3f7b86c87e2a5234b0
2507e05189732e574b7f2294b59c2945666bca518a71b9b5c34f823217326b827cb5c75195caf9
b93dfff259bf3e0ca4b2c6bee5860851ea5ecef377689a76b98c4e81e8f17067f47439f0fc5194
d5a0a1959d1e71c88eed68a2b915e56b38c00507921917cb41bcdfcbb6e041d80b1e06a41e974c
ae2bed5381d03bb4e1f2117d109277de28efe7bebcca40d687561b073614d885440c9130c12643
1c95e73f4c7a9d2c9ea5a86e1f9ace968bd2db67c0900ecf65dfe8eddd61a11c285867c06a4557
ed0ad36fce2e0192435bece4fd8d7cfc355c6c019ca83dc0c9290e10d0f166ff639ee6fdef87ad
b19fdf0215f52da1ed5eb65876fb24c0ded82ec96814c0f8afbc1db375051bdabae230a873df8b
5b55e6c006e6f7b6334287820ba8f20d65b01155c9032d6393ea04d967e4106ee05423610be003
033e86cc7f177df3e49dc911d5cad22495e430ee44d9fa74960ce44ff6867327dd3985c0f7f456
b049bbe721f07a2eb9149a44f06086ff1391a6e2bd4a5278ff89beed802bab6f81a8d4c25f1759
7beafb760a318ea610b5f145274a2b3aa611858529712d404991ea274f2270452da3b68d891699
43ba7686e3019263133290796975cb035b2e6169b8621e7136990ab699d1c89fa0e94551191523
fd1a69cda50cf8aded596f56dfa218cccc84acda3226a0451e87ff0e44fe54f52b37a59220fb13
5473a469ea525805de37d223c18319139185b97fc2ea83356ef7799081d1e2a97d89f977de1458
9ca8446cd692fdf2419459618475c952f389db09c0749798af8397ac3e11d4e7302e39ac34ca03
df273851301a1ae9b226e84fe2e0b65131299516bd64aa90efe39f280591af10c90b652ae14e80
cc1201b4109629558e83b83483d4dd57e0857ae0dfcd5a64b5cc36c1f28ddc752ac1d1bcfde5f5
b1511a3e6b30d835186f38e35215a328d396db7c634aad187428b23f68d013bd6b8ac2d7ff93a1
d399c360245641c2200021b9f8dd69304f74616ea2dda34144fc11ec42b09af21134c2c7fbf153
4abd44083021d4ba466e732a1fab596e9f6afd4874ceefad852697601ad8f15aa5d59e20c11e25
b8fcf60d6138d6e72a8f4cf154c97bf5990595c479ba3a2f96dd65396d54a42b209ca55d3eb21c
be6c44f0780d2c43fcddddea5a65ee645aacbef909a155b55247a4dbd5d59e7d0fc8c20a219344
312a1d86cb69662d2c7cf928f6d817ba34ff554890aef5afe8b01db6537b9725b88cff02db92e7
87b593a6491f930eda75143528147e0341763f3f8b9794a0dee7a4889530c765a8e665f58c9334
0c99a098250ef663f3158ea3e6dccfef4212909a5c5c23e2d61189d23d69e8bc366c947019c230
5017afc9d36c6e8c560efaa4093c944a4457698c5f5de74374ffdd24cb5e6d24a04b531793be80
2d5ae400e2b068a62252c678f4547fba7c677e634cc76a0373124d65ce68dd5d085841569a2f8e
9c9b71ed1b3794e6f899d6f3cf7b6eee7f33a285abc190b8f17454b084c8a83a7c64cb899733eb
e3ea8d710bf15470c8699b265b4d3714870776f16ae4a5402c0a40070a16114298a51c1646f6cd
e88114626af0e4cae0ff7384d863891521eac6f31a5cd295cc0c0e7d59de52de04bf5238156f4c
e33cd4897cc482ae5ad1826628529ce5a6a5e6a55aca0b20b657cdf5e57c5a73f96f93622c6cf5
00bcd7e6922bc3ca96bba05fea0b0ff7ddcac109be83fa8934851e9be9bd3109192202eab1c77b
0c86d1ff97e3b8732fdbb9eecd2a547e3a1cc4402d8f1d213c98890afb12ce908ea3cec9d2e7b5
bce47c25c32ef337c45f3ee522f5cc76d1505ded96156f80bf6c8e2cf5c3f28898c2f7cedcad10
f6dc5c45ff4979906b2fd4db0d9435bd85ff5b78e78e441d140ab53db156f4c6402f716ed7ab7c
5617ae1d1a22bfa5bbc89dddcf9f14feb699d206e1345b793185d2907babe65547a9a17f8b0ce7
18d98db6039357616cc44be309ec11368ac4d965927773cdaf50ed2d48e692b2a3b31521bad488
bf684f01e3506733b27eddbb5d0d6d3d8e65a5e1bc745e1eec0547984018419179b38d42e30997
94341d97885f230300ec6fa06b18c17a1fa77dc186886492d150df1440db4efae287f2f2a4ecbc
f0683eedea3f78b1b68fc1911cbf2625185f73c141dbc9674e7affff580b4a0296073f5b6505e4
d63a4a736bc3b794809e801860ce4691a57eb02c0947efc1de4bed3962346769c613f240db1574
368b28f186b608bb99da33ae1b3c266e49d58ae67a462fcf2e6bfed1ac1ffcc24c9752ea793f60
923f7579d2b8ef9860975e6a80d5f9637d594a9567f8a2d1e15ccb1edd3d502972c969ee42f57d
74500d30170904a463d659af0d96ee6fed9f4c7fa0c7800ebb2ed3b78c3f095d18068f96573a03
3ef343c07bca94dd9897af2830b6a40086c1e8945b26f8baedb8c0af3371060ce18cf8d8693738
c15c2eb95a4f7f7a37e82abff54ce8d19524e45379c92bee3ae74131231fb175d96fbe54274a88
135fc74d9f429b9794912a8d157c0ce5045f3b16a4bc78811f1007c96eaef9bbd706533a7ad804
11e4a3adb0bdbc27a94632d00a5a561df53e0c63a0c17d9df09ada247b420b524135e9e7c34699
8993f716f41a8601099fb2cbad6f760245a1b52e1f8c45fb5379021a64ee55e368f1e2d704bc41
76d8e1a1f034a631aa520c6039639207386175c7913af1aeeb95f1c6f995387a454c25e6f78af6
0ec1d34e0fa0bb4bb8b9417b5d8c59d31bbd89cebd28c490d8436128eaa23c69816af90a4622b8
2a030514aa5eb2865f5fc5247dbfef5be641da1448376de08544b9902118a5259175d547a87932
6510c732848d4e5d6d4569021cffaf8be720fc9b73df8a0b8be87eb08c3a2cdeb28d6acc63694c
a9cbd263838f26a9f538d85fa00cb23f053094977019ff9a935d627668bf9e94eac831d09da176
27b4a4f4b6a790273ec536a5d8f66f478bbacaf17382f7a3e9257e554ed267eb03cd70b80359ae
7667c44c0c9411a2ee41a9b0a6a12418a37e6e814069df72d0534d6bd5631f158a3fed39fe33e4
d97f5b8d0133f8d67b92c72466cb2b82def502a67fa8a37ea4473056da8b1a1c589960957b0e1f
e2316dabbb150f8f8be2c4da45e4014cdbb22df11a9fa8b85278ac7f0a6f75996a7eba0e524eda
ab6ca54ec3b3dade7c9edd4ac5eba9087cfd542cdccdb9410202ea1c5dfd4abfc5c0e1c0ec8224
6a93f453389bdef4fe8a94f9aa5b492ae04400c73f55f67ad0b02f092d87e10bc9f14ad36c3e8c
c6519bd9ac63f795a51f61a9877cc56e8d87e1078a1562332869ec5d52bc95be2923ce6e9ab07c
7b9ce0382a5afc60a44693aa58cfd33baa0415f5c8afc239125af4452c3a0010fef23c70df02d5
d1fee6d23fcbd6b59137ef773e877df1e42eccd49373383b53556929650002a51973c5cb12eb66
96f8d09086c7a0818b7372d1d17fea577704df4eaa121e0271b9459d57e1fd89a3db3d4c75c620
79c3cadf03ef97d04c5a4cc5e608ef1599afb139ad7fe73fda41b81dc0cd9fbf93834f9ba7fb12
38e895e9da72f1bbb8ff581c45a14a39981170d15d4e04022a9aa5a2aef9f6d38d68df4bff98a3
71296a4e9ebdd2feb5bb616bde6c9a4647901613239b815ded225e3408799fa2f73d7be239cf11
494c456dcdb4d618d21d19d81879bfacb55ef117fdfdd0d5f66bc97fbd7c6aeffc84d196359698
e9f36512d6cc42775d1adabf6c99b4f4a232579106d27801f76a71f0770168e40a85403af26be1
4ba533ec0551c3b18ea8ee97c57f9faeb4192419978ee50242ad61347104fab8f4260f518922ae
10276c55fd46ea3d4f6471207910d77c8db13e391124b50453b60fbb4e4f15855fa03ac4c3a5e0
f6cdb7995b1118bc4c9bd2f869682bfb9be20d917cf997d4c2000abd5e11e2dbd79c9c8b7685a1
7943a2de2ac4cc60a50cafb37baf863aa8b8350d7dbb1b52c2d3652745ce06b1193d2785073f5c
668c4a117d268d839d41e497165a50d08c3292fbd174411692a3b744da54986d1ef767d6bea6a5
f437e5fb61f7581c72fa8df1f51909443be412c321c9e1fd626b345b705dc4a8017eb0d8cb61cf
e5f3f80f796bba6fc7502bb925a33915953141c4444698a18663eeb95e492f20542eef84b047ac
52a439bc794ccd488ee9b25bc467ed09a418256bc0c14a808f007231fbf97efc1881425ddb64fd
6c170debd330257427c9d8b53dbde875aec06196cb8f0d33bf10b681605a02e750feadb3196bb3
ec2c251e5f549c2fb6c91fb32c1bba3c9af6ce30cb6b71cc2ba681231b1b521619b863addda93f
bae29f8c7a439415d22bb35f59608609cd13d22612cbc6aeb6601b37a6c9f09eb1eb8f60f12134
956e456db374fdd7a93302dc2fa405641d09fe7c28314b08e4fc9de9294b2caacb8f8673647ea3
2571bd33996045e3a3a6ebd1315c3c0c91fce65dbba1d1dc730bfbf02a1d5b16c74a8e5841450a
24fb0d87108469267cd21aea77cdd8b317629be24dca7fbaabd757acf62f5733cde3c4f6d138ac
ee93de18cb485c9178214351fa3f0a44ed41a3f7de68816b7fef6c2869af4f677f3f358533afb7
d4f090c65f0358bb63e52d2c4878d2ea0620d1fddce9b8bc22e99bcb711de2d4086cc2950ed2fc
50508e3aa0c15b109a3221caa9cbd6be368bc6b7a7033656d9ffc85f729d4bff1c18b00e78b5eb
5c9cf181906885c45e315b2aba41d3cdf32f0cf301dd4eb4bf9b28c0a4d429fc84aa97633a6bba
6ab0f43f61d0f6fa9a35256ef7bcd8fb934fa1c035a8ae3b600920b608ebb40850e4c7e3564572
675ccc7002cc2029bb963d87385c2aaedd472a224f92187298652ba268336df3bc28b33441c1a8
985bfe71eb30e33ee83f738123d76f94308a1a2f2f549d40b7ff6d97ed87b1989dc12aad21ba8b
c42b2c361c50e44b74ec9db17061db171b932c910397d42c1d6a305299545952ff8ab117bff8e2
bc2e52e7ffdf6cb64d61aef2e79481ce9a1915b207c58c4dda3d71172cd99883a27078693831a0
7ac70c67e1eecc1dd5b3dbd0f7b445a167e77f54ecd3f88a4622771c55c53c9cb58631b60374fc
4e6ff1ff4a26dabbc2ae562a124333c2822e4b52598cf5b4d5292df4b06800d9689c04ecd895d1
7847d93faa68b508e524b39321aff9e749343638acab6cc92af4b447b87c3798277b3e83341988
8cda9aeeb978ffbdda27b6628fff08a55fc41f646741d092148a2e149cb295f283b9c3a6ee040a
ecf8a895dde8dd46908ff65a57f7cabe8dd42fbd82206e77cc64aba562e6d21726a63f5a75c4f7
fce6a8bcd6523bc18679cf3730bcf4f1ecf3cd00d8bf63af271164211a34e3beb928abe1a06def
8b2de826c893604c5f375c7c254c4a2a797fc1ef11b38ce154a5b337c453a307e501929d361a66
aa0ec59243a64f8cdc31f57ec829093184386859fe4b6792265a6b32d03cf1c81e583addc7bada
c25c98fd44a3796e33e53e9b2019d0d8c6ba3685019e67d931b5a817b2ce47a88be668bd45dac0
5199d05b5f02de05455bf2cdd48f2b93b50edea9a5e0c871f8ac1665fedcd0bab330ee628e3df4
514d679aa059ab3c1da74e2590354028facc543cfdbba7f90010a2aa33b7329faaa0df1c555e03
b71f153a5cae8a5f9738bc5c53da38544cc23c785088062e05e3896956986b6210d343068b5106
361486b7545b0547cf0d349f8c8243a143da36873b6b976134637dcce4848d2b8079a823ff9b9c
24b103c2431fd4355629b72066f2b789f812d0565f4b4796f2ae15ca2d8f85e7ba1aa6507f3775
58fbdc1a504365bed2f254525f45e522b942af4755133b3ab52f2e454991c89c4c24dcd62d6c73
03b47e17f7f9b58d64dec62022d89ab52b3fcbd13a311968a98e564a9df26842017e6c4a0a075b
cbf6487eda91be673e1d7c76577eb40a27fa83823ce39747b53fa263e7401cc0e786dc790316b1
e8c7c638f34e5cb1997f024077f021bae0ea089fe03a30f5e7fea9db8d11add0bab54fca6abffd
f82be69745ede991299273871491cc576e0e0457a01430f95bbf1353aaaa819841234cde86626d
ef610f17b54752a15b94216384e6d05284c28ea823aaf941c3d953d334f6a6eacb144374e99c5d
5b8a2e1fa1a78e7ee565ecec553d1543aea4d90359191b416079d6532a074a4a1f52fa681a76ef
d7b1701e6531b8048e7c98
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndResource
%%BeginResource: font CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known pop false {dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /f-14-1 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /radicalBig put
dup 2 /radicalbigg put
readonly def
currentdict end
currentfile eexec
f983ef0097ece61cf3a79690d73bfb4b0027b78229ecae63571dca5d489f77bdeee69161ac65b8
1a171acfec6a38e69dd162ea7d456fbeadb28c016db3bfa3a91b731dd3d89e31936de5e0ebbee4
d9bf15a1d35b3bfa43ade27c55337a53e8117722f41ae71510be6095ec8fcc4480cf4d4b3c8a65
dec16f24a875f2c200388e757c8d066a3bd39db828e62e2d3d19908b221b8f5b58f7a6a2ebb901
d705aee915d9f92114c59f6a9124885e77bd754ad8dacd1e7fa44ef6a4733c0ef482d5f4f7788b
0d58fe7cceea728243b0a6d07c975363fe2f68dc10b0745b0864ed2645357de0f884e6c560db5b
90bc479fb276c0e67c6aca496775a4f0a75faf28917167800890ef3c86ede7a7414bcd45e936cf
947b2e825295f827128a2fff2b753d5e3652c8b4795554cae61967ebdbbe371300075727bb795a
e304f5c14abcb350397652b5d0ea3d4d73b833a8032462e681e43cd3d78a43fa952ed710c6e663
8885baad7de969273ee06f07b72b04ed08c21158b78de6e78e991bd249b33ef76a88735e8f7686
ce0700b3747281e15759556ff9048a9b1a08d068b8f996d45086c1d4e3f34ff73383b31c8e1f28
4cf111f5679604167bb9b16b1da2216bb4453aced50f10101b1f921e9a4a7ee1c8dbaad3e5178d
22f3ec573f7084b7b8d1e6119e9ae49d3102e0a2de3b052767d8576e55a556c85d0301a1f0054a
5190fa7b20803c143cfc85b17db4fffbcbfaa340dae90bccac08b034c8f413b6b58684df5ec36b
4e9035e56d518021144eac7d803e9e47047ae3a81875badc350ce68592fca852ed1d9f043b69fc
ae99cca661e5732c959c074d97acb34eb41f4b13fd5f39ad1afdd086098ea63b4e8cd38d0c435e
21ea5b145036590eeda3ea7eebf57c62574eaa09fc25266a430e676cbc64322e6f17d5c59462f5
448c9ddb5286fa0a6a46767bde7a302121bf36fa6d9ddab70e226c4a2704164bfd970a71b6d2e5
35d7052d8abc13a5dbb526763ca517567d5fedb1c5f52334bc83f4b4e62f8d18301b5238ff2886
f34ee94a2fc0efaafad2d25f49c12ae1d7600637eb753ba2078375cb1ca94528f0675312aac27a
b367062f14ce2f579a94d1d54087989b8f789d4c69ae1ae7377a264138f86c8c5cfc2268e39722
fd215b1e40f213e1c28f2b31ec529fddd314d1b8fc50c92cf13fa32c0a1383101e1c975a8ba0b2
72e541dddf541ca9f272fdd9e268cab4d0667a82f41a648a292fce8a2c8ed4b7a425e24f685dd9
c5d65dcaf54702101e86a91376554664d6ab8b8165bee10c7e9b7eaaf0ed50ec2106c51dd5adf8
dfb0cec463b0ed5545c32f4b73dbea1c47818d8ede2f04fe8c0f22851083d5cc349070c1b4a011
9d3f74865259f5e8a4e2fef199f23bcc1519ad05fc975f5494c2092e9d0fbe2fa9cf57b7c1b187
c01f31f7062fe0e714529d5252e440a65df4508685f75d19495b53fe58f50f114ef557cfbb95f1
6a621ac66f918696b0f48e01abc6f267199993d68dd76f27a219240ef14d3f18f2cde95e243cc1
6625b8ee05681c866e67f2e414eb287dfff772b01053b1cab975931a185894d5676d0fbdd4c20d
46ddc16561e06fcac7cd47bfedf2f27e806ee261d40ba7c460ae004fa6cb1b0c40475c28cd4c40
e05c5b606d6346173050a75d36b3e1e46f7dcc01304bae188ae682fce0d38d507ed0832e8cf399
14914cd8ac4126418a9612bd1b856f86c7ac3a14a35b38f197ce4a47e53cdbea38a4a848c692bb
65c02a53233a78d50667314e7d0d8e43c2e1fdb5530d4b28e7bb19ca6f9c5fc3d117bc5e3ffe33
a5b7a69f7f7159ca667d96b5d03e4c5e59ae171c9fb2f20cde1d442961efb6027577efc06bbc97
b9b8ffa97ec03364355cc803fd2376db0fab381d301d05232429cbe3ce117e0ff99e47d628d116
4437884ad964ac2de777531709f1d6c49f79b9073457fd046c5c76322afd16c1cb7f534fab4cea
1cc11ae5cf20fa53dbf43bd274a6d42fb09d671da621ebe514910177affae8b6087a84c09f8227
a5eb5a16985b5991f07b7bc632137f3c96446ecbb9ee31bcad2e6a293c4134ad506a465abcb72c
0bbfe9b198d79d225e6a83d937920036d23adf8f062b751a148dd5c8cb11b254da5a636fdfe339
c8b8c6b67635198fae9a4e9e894ca1fab597af5ca4db9a4bf3b44426a935bd0ccf8a0c54d6698e
bdafece8ca77f06114deadfc32d9c085ff3685c1e1d710236e291233140b298e1ac763505d146a
50c4cf0158702d7d136f3c03a7d60b789214257699255dc5b2885b496d844e016ac8d652f20791
0deb6f43e3aee8f34924933accf93466d54f3c556e22e7e2027754015e1d0c8dfb194fa0c58ef6
6c54d92739fe1e609b63c5f9303c66959b42f1c0e1717af82e7a269b49244182bab1c3dd615da1
ff36f70ad9d5dd9d4700e98682f4c4d9e57b459edcdb653b8a3c1982b083bc84c55568dde68de4
83fb1db089ebc9935815fdd7d035704986c98fcd3642367a59a8b1337dca37900cac287d01de1a
bd824a83c1c55846539077aa2fe74d4ceda53593b4a8e9586da0d258de260b4054400b8694051d
0c3152f286798c7fcaed046432748f127248e76d7f357aba6ad7a6003dead5806753585f363246
aec4fe0c7c481c7040453f8906a90edfe154d59ccd52573a3b064b4087c4a1c78267a96180302a
fab60a365f3b5d40ab976133c374385160c53d58cd419e913cf3ceda1414e2c99028dd92cd3003
078a32982de4113d03914f8a09c1a4ec66dfea0ae82a6887c2c50b40dbb6ca2ea81fb10d944d45
88b21cf5cb3ffab12d79091f21e179319d53f8ee0994425cb70a283f85576a0c65cfb6e3e1f2a4
b9312fec1a38e9165731f68c2bc3a1d3148b1bf93ee623f5542b4844e9d3a53fd8ad8e72c0336a
8cf7f490ada44965a38c2608cb025e010b2ab9f9a3a69c57c888ab06e25ab6994241693fcc2df8
f6e2b43ada28546b3255fe623b39aed18982a1dde8346ee0996687e411c4ece195fac4ca8cee12
34f1f1f3f35e7503f5cd84e6d420c1bb99c9ad4cf643d6420418495e293973f3fb4d2d4a51d2e2
94c46182c8b52da287ea04930d703fcf5d3958f5b217d6873081335d649a5e45339c5d26f46dfa
f7737db5ab34db069227f5e73acd5538bf373008b7d8727569052bf63e646ad463404ca2de2c38
57a9fa62e5485f0635e9c6fb9dde883e8e784d4b75d957c386848a83f95f2f2aea19bd80be1bd1
22b03e27943e283355b49c847f16961047d2cfa65817e99121c57b9f32de192cb5eeddee4656b1
7b370b496fd52dd90d8500b87251fde226d7230693236d8c1d054427e58c755e57e7808ed1ae6e
5bce4a3c691d333d192741416d86b3b716c3a7bc9e52c3ac7bdd1ac67fb18fd57fead473a4cfa1
3248e6f166f1b78d43a0e1457801c70973f5b2fbd65c482ec76148a8bc2f4a379542c3883b9dfd
bd0728d0e3e541c1b743be8918c231d3093c4564c40153f3ff72ff24ca36481082e970b1736ed8
664a543347fd3ea27e4f7f3fd34d1e1f97f8a21201bc6b1fe84a5a484e330307e08e0f480e3d00
7f43e598c6ae726dd10284a294bc548775af2e1574fb86ec4b4636b87f1d6db2a4b856db018d56
d9644c08ae8be05fcea3809e917a5953942afcbf410ce9a52ebb4b956a0a6600982547ff0597e5
e92d05f1edb70bc78ca32ec76438a996d71f5daa012c51b95fab452486a790361c0d43641b7eb3
b73e79e53fc56ff6ca4b361e80a18fa4a1fac5f65326aa382867e0e4999791f58d5e2c82e1bf2c
57b4da85afaa7819505834e31db2f4938053d47d0a4b98b7d64ef0aebdf9d561d4cf409b77be9b
c6a2343d18ecc7756c78132682158b123d3552d9d5ddb77042c8abc6cb4386683e9aa2ea98d873
fe1147c89f2ec672e47dad71a3c886ec9619ba2f178c0db8af7cf15c160436e19b654c390e9cc8
d354aeb3bc6972cbb53423c7081d2e276f69e28ca78c9e33d7451d0c9a0faaef172736e6e7c8fd
6066ee8e402e4e892a2a4fdb92846f86a59c84de87e9645bbf04108ec0d07925ed47ad7e55344f
2a5d80a8387a9570115e93d4d98889d46d33e5f382046e57a022723ddea1232f8e5a1f2504f2eb
79f712986ea426174d4163a68b805cfe9aed4abc997fde625d1b559cdc904adaef2ce75347fff7
88aa5cc14deba6ec1aa0d412403eb26defd2db74b2f39ea174796f9a64f615518882e36344e55c
a89d0da75b39042edcb2dd9e68ac54d4c027fa8c674abd1a664c5e5642d0bfd516165d4a3d46c6
f91f7d9393ff91b85d9b9ac3ea53335a647299f11bf73c66ac2a30717a41c456a8f3293dc3e6ea
13ab8ab869bd376a9afd5d28000252b8ef76ba80d802c0534d1926b50021e7070155dd152d2967
715da0caf19ef202fcfffcf748be11dc56704bcf843ca76847213ccf6021d8407081e62f545573
4651eaff0c361f29a367aa63c34543a9753990fe009fea05fb25bfa664f10fab43bba46345b859
7009f87c37e3095e1f299e8796eda183a34fc709e3e5d801a1773ad905d4064b347bcfba53e7fc
05e137c3ddd6cec6b14a255e83cf1c0b3fb76ad8a7841fa20144f48fc192c3fd8eb1b330c72f16
22a79887517b96a00108add788036f92ab82a8daea71b81633419ec77a37dbb520f21375793221
d62a7d844944e2fbd9019cad883e3dccc5a7efee0f81826162073232f312b5b348f4b8bb303745
b5b9763ce2a755b71e32151eccc2b5ac278c9bbf41ba1dec03a5edaa25b472c359569212ce744b
4ee297423bd68ac82cdbe4e907c5c8d8181742fe42882442d54f21213dee1d3036da54d0a149d3
147a7f6d4b5719beb7aef5777029307831f13139f51332e59e2d67acb6e5e09b4d741325a9daf9
80a33143a0ed4da984fad60b2db8d2dbbcd2273f00b2be5031b290af60b8b96f474f6d4cc34c4e
e339eaece8004320d8cbc189a9ba8d0e100759cebf6d36fc929dc076467ad29790e7f93f5c99ef
406ef93a5480e8227bb42e68727ca15061d8dd3400512519296237713ddd127b39011dff58d9ed
772f3390299ec9325c249a6b838d690a7a1ace4bd79d0159ac78f0c295e58922e5291f4fe6791e
7e7bbd7ed8e49034c70ebe43b66e02e61c59a3ab540427332cda3673fdd7a4b0a372b6032c19bc
f058df4eea3458ec71442ee1ed1c2222a4f92640067ea249e9732ae776036404ee5aa1b6b2d924
12a6fefacb64fdc2e5abf623d7c2f7e786402772154e3b7df0496d799fda9192981ddaee995357
0fcac4f8090bf52dd470a88a540f212129a4fd9da3d493740b013ff10b0524ed7a7dca667bb125
dc050e65cf2a0eb06c2f92722e3a3a6824d7b40c6a8b76e8bd87f3dfecf4d5d55c7ae598f70c5c
c509cd1fc9f968f841e3f6222b4dbaf20422654c483b8961c28ec6ada75d8e1d3002ccbfa2c4e2
ec499b493d7759e6b4ad3c5451db5a580e03ba6bdb6843e9c916d29b3bdb14f5e91d186d8847be
18d2cfa658283992633330d2c003e5323db743f8986733458f95c4ee627f462597a88934797a80
e68ab9b48c2705f76370af955fcc77b6034e78c098cd1eab548ba92ec278d44ec952f89d0e6ebb
1227e38696afeb27e2f3fd724956f24e198f1212324c029a48807f6fc1dab83ba87d2c79490c3c
3ec287e7a80fb9fc1fcb5cf122aea90dc6f5e4dae6350c1ca830823c500a08a2c741a499ef0bdf
a7c57a4918534f8abe0d8b4382c9fff2bda6e5016659acc32ca65f3032a751a5312e51914173c9
f62d1971aedb6a535d152697f47449260be4c105166850e659014895ae8b330f224273a22fb0c1
5c56ea03b611d107be469e76af9d86f7de46525cf4fd87aac139f72d2ad0e6d8c211047a6539ac
5e6a198717425c681307d7fe795f983ba3025d77c8e28f9531783d05220e0831b6ad9770a71854
6ec066b7eed90bd694a04fbcea38e4b3b23fba342d7d5629df943b151f92af1a0bb98eb5fcb794
8db45bb53118c2b7d356daf0f99a33c26454d81b112cf073f920199e47b6c6bc30c9c789c958e1
9e831b78fe03d1751ccab864f03ebd34f90d639f67d09de99c2147013909e3b6aa7d600c853318
79a29705c4a6637a3e7491c754363053c8c7dcdccd5b299ca30c7b7692800c52f145c7ecfc38a4
da32ffca53c65f1b695b9172b530c9faf9f81e5b5be40beac6a823cccafd0f0f8b534f960fcb47
ab234e52325d928b6825fef496682e81b61180182e2a0e96bb81c436c3cc7021bbb9a769307ae9
aa89e28f4b430223e05a38eb87783e396e6d162835876e3e9386bcd12183e9fe7cfe757df1508f
5f41141c6fc70b19feb96861b5462c1df6171277f7eda3317d14c0ab75c0949bcd276741c7a349
d590e7a569d428efcf78ca4cd3dde1b784e5b6eb7010bf2defe16902aea01735da331cd4c229a9
6e0cced34079d071a53172f1a18e9aff3fd6fa5805872cd798a7832c974577f664f01d30896098
f4bd65df8f1ecd8f8e1166bbc6e20e24301aebe55a1aa14dd5a5da8aeca1e0f40c6f39c2572ca1
50c2c4f6f5651ace4c626d5acf279eca54544a6773daf8f76d2d46e1daf432e5c1399c7482bcea
3ccc67ad742771f6d8a00e86665a9f0cd75f61ddf9e8b3688863119916a0ef97c0ea3b13f55e4a
5da911018d3588070e90827772b7e0843d9b9bf9542ec5f18ee51c51e0b8fe58d7c35ab36f1353
dedf2c6f55a69268ddcdb8fb0a40887ff4825d2828e9f8d3828118efd3c1b9d5d5079cc1cb9e66
b3618d67a9dbabd0454407b6de4e0aadfde0ed86296358298018681c7a937b46011f1de6e4676f
21b787f107adf90539fc3f8e72f3ab96e14feda66f3ffc83e16c83e6901ff74940b6278892ddf1
9abe2bbac212c7a26d3e8b538c61682f6972654d0daa6adb1682086279ace1b9612e415e642d44
2b477599a277517b9785289c3764b116ed1b10f823d49008398af3b84f44f2ef2f7301d9c2ff4d
aa5dd7eff7faf562acb6c713eae12d85a8e76eb10ad54a6a9a3b0484ca917e4d1d6afe9df4701a
0b99950113c0fbda0d03f8fcd006bc45a5569b835ca17523e401214149e7015d558639bdd613bf
685ee028fc246ecac642d5d1bae7fff05875c76840f70b6a0d50a81bd7f230e01c1342241d4064
ee05a50c6aff48af4fbdfc7dd9f619182b66bf9a36495800c66d32907ac7bc720bfa66c88dab4c
8dac12aab1dca186fa29b3577630c95f44bf40867f60b9fe323f8718549904ee2e7a44b8ac2ae2
374c1a424b5472c32d14519e71d6b518d6310ddcb84680a0a6b490b4854b762b7858111ed2e015
075b2afe929240b60a99010c3bdcc3c984415cf22a9d8c3dd11face3ce54325292e8a7a1fa102d
8a76eea7fec3fd3a8f0e6d82b4628bb29d0febf0f91446abc665bdec469a56b3211ac8411de7d8
b5f1f33721441bd5e514291deb7387c39aa3e892bd776f028b885151cdf3a2933663c62982e2d8
76b899791a1296416ed7b3444a2e12ae432ae4be16b337c3e110c96b099fd4368d9078fd9742c7
6a12d7e5ddd0c24374dcaf0c4f0bb1d1560d2825bfe552678b0dbea2a25f6a726a31455598b3d4
877219cf6777ab067a5c6f782e4c8fd112aa8e99894b441453f705dfa7418f1ac37e61c46c41d1
7e5defc7a6c3334fc890c3b0868722fbeec31912cccd057c97a1168c304a84405c9eee74d7edd0
3fa64c7f7240829b71c7a733ac660eafc2f51cdb12770ba5d45513c3af6edc6d91ee6374eab986
47b4c192212565e7bb223ab1a8ed2f31684afb2fe807af4bf5a695ecd041586c95e959f4d0f8e2
b4e70acd844e3367de4d32e56d0c67af5629a1bdf78789380dc127c1a50c509e582df0dc455ad6
5db39de25d1fd010c32ca846335fdee421e2a0cceb2afaaf89922b3e226e6adaca39820123474b
e8a196ac89067c7d0b1cf701152bf622e16540e5d06095d57f9fea04d55d9740a6dbabc057a23e
a4ff468e1a94f68a7da574f32a5c832164ec356dc53ad55fdc0c8d5bf2e7d0cac441b94dd02825
3a9deef20dd44e50641608c0b96a61ef18644e80e57d3583599115f56d6afb0c9ac2da44244fae
a2c3a3fe836877a82e0c4380d088598e892d8eb6ae03d357bdc452c8c1ef749814f2e4f62690d8
945352c92c83bc1cf84efef6d84f59593c77b913f26b6fead00adcee33a7fbdecc512486b30375
2f98d2c4e5f9c7b68c529dbb525b8e197db8189f423eb5206a5686a798f478cde6b795c2684e31
0c3eb57c662f73261d022bd33ed8b57b5cda512b60cca0162b372cebe69fb5affd23e97d7f1433
05227ce6dab9ffe20c6ce4838283e0832f221286bc9e471f703de89165313dc8cfa6bb37a4f091
1f308f2be0a51fb5e8bf311c14676b1c389eff2b9711215ab4183cddd2eed03c15ff0d927ebe08
0d65d7dae6cb064be446b2e1a2ee94443acf2cd7190816c141564f894eedddc65700e358c398e2
e8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
Encoding 1 /g1 put
Encoding 2 /g2 put
Encoding 3 /g3 put
Encoding 4 /g4 put
Encoding 5 /g5 put
Encoding 6 /g6 put
Encoding 7 /g7 put
Encoding 8 /g8 put
/Glyphs [
    { % 0
0.338812 0 0.046875 0 0.292969 0.683594 d1
q
q 0.23698 0 0 0.68306 0.04879 0 cm
<<
   /ImageType 1
   /Width 34
   /Height 98
   /ImageMatrix [34 0 0 -98 0 98]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff ff ff c0 
   ff ff ff ff c0 
   ff ff ff ff c0 
   ff ff ff ff c0 
   00 7f ff 80 00 
   00 1f fe 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 0f fc 00 00 
   00 1f fe 00 00 
   00 7f ff 80 00 
   ff ff ff ff c0 
   ff ff ff ff c0 
   ff ff ff ff c0 
   ff ff ff ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 1
0.521983 0 0.0273438 0 0.496094 0.4375 d1
q
q 0.46002 0 0 0.43911 0.02788 -0.000000000000000056 cm
<<
   /ImageType 1
   /Width 66
   /Height 63
   /ImageMatrix [66 0 0 -63 0 63]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 03 c0 00 7f e0 00 00 00 
   07 ff c0 03 ff fc 00 00 00 
   ff ff c0 0f ff ff 00 00 00 
   ff ff c0 3f 00 ff c0 00 00 
   ff ff c0 78 00 1f e0 00 00 
   ff ff c0 f0 00 0f f0 00 00 
   01 ff c1 c0 00 07 f8 00 00 
   00 7f c3 80 00 07 fc 00 00 
   00 7f c7 00 00 03 fc 00 00 
   00 3f ce 00 00 03 fe 00 00 
   00 3f ce 00 00 01 fe 00 00 
   00 3f dc 00 00 01 fe 00 00 
   00 3f d8 00 00 01 fe 00 00 
   00 3f f8 00 00 00 ff 00 00 
   00 3f f0 00 00 00 ff 00 00 
   00 3f f0 00 00 00 ff 00 00 
   00 3f f0 00 00 00 ff 00 00 
   00 3f e0 00 00 00 ff 00 00 
   00 3f e0 00 00 00 ff 00 00 
   00 3f e0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 7f e0 00 00 01 ff 80 00 
   00 ff f0 00 00 03 ff c0 00 
   ff ff ff f0 03 ff ff ff c0 
   ff ff ff f0 03 ff ff ff c0 
   ff ff ff f0 03 ff ff ff c0 
   ff ff ff f0 03 ff ff ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 2
0.365298 0 0.015625 -0.0078125 0.3125 0.613281 d1
q
q 0.29274 0 0 0.62033 0.01394 -0.00697 cm
<<
   /ImageType 1
   /Width 42
   /Height 89
   /ImageMatrix [42 0 0 -89 0 89]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 70 00 00 00 
   00 00 70 00 00 00 
   00 00 70 00 00 00 
   00 00 70 00 00 00 
   00 00 70 00 00 00 
   00 00 70 00 00 00 
   00 00 70 00 00 00 
   00 00 f0 00 00 00 
   00 00 f0 00 00 00 
   00 00 f0 00 00 00 
   00 00 f0 00 00 00 
   00 00 f0 00 00 00 
   00 01 f0 00 00 00 
   00 01 f0 00 00 00 
   00 01 f0 00 00 00 
   00 03 f0 00 00 00 
   00 03 f0 00 00 00 
   00 07 f0 00 00 00 
   00 07 f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 1f f0 00 00 00 
   00 3f f0 00 00 00 
   00 7f f0 00 00 00 
   00 ff f0 00 00 00 
   03 ff f0 00 00 00 
   0f ff ff ff ff 00 
   ff ff ff ff ff 00 
   ff ff ff ff ff 00 
   ff ff ff ff ff 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 00 00 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 0f f0 00 01 c0 
   00 07 f8 00 03 80 
   00 07 f8 00 03 80 
   00 07 f8 00 03 80 
   00 07 f8 00 07 80 
   00 03 fc 00 07 00 
   00 03 fc 00 0f 00 
   00 01 fe 00 0e 00 
   00 00 ff 00 1e 00 
   00 00 7f 80 3c 00 
   00 00 3f e0 f8 00 
   00 00 1f ff f0 00 
   00 00 07 ff c0 00 
   00 00 00 ff 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 3
0.365298 0 0.0351562 0 0.339844 0.4375 d1
q
q 0.29971 0 0 0.43911 0.03485 -0.000000000000000056 cm
<<
   /ImageType 1
   /Width 43
   /Height 63
   /ImageMatrix [43 0 0 -63 0 63]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 0f 00 07 f8 00 
   0f ff 00 1f fe 00 
   ff ff 00 7f ff 80 
   ff ff 00 f8 1f c0 
   ff ff 01 e0 3f c0 
   ff ff 03 c0 7f e0 
   03 ff 07 80 7f e0 
   00 ff 0f 00 7f e0 
   00 ff 0e 00 7f e0 
   00 7f 1c 00 7f e0 
   00 7f 18 00 3f c0 
   00 7f 38 00 1f 80 
   00 7f 30 00 06 00 
   00 7f 70 00 00 00 
   00 7f 70 00 00 00 
   00 7f 60 00 00 00 
   00 7f e0 00 00 00 
   00 7f e0 00 00 00 
   00 7f c0 00 00 00 
   00 7f c0 00 00 00 
   00 7f c0 00 00 00 
   00 7f c0 00 00 00 
   00 7f c0 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 7f 80 00 00 00 
   00 ff c0 00 00 00 
   01 ff f0 00 00 00 
   ff ff ff f8 00 00 
   ff ff ff f8 00 00 
   ff ff ff f8 00 00 
   ff ff ff f8 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 4
0.469778 0 0.0351562 -0.0078125 0.433594 0.445312 d1
q
q 0.39032 0 0 0.45305 0.03485 -0.00697 cm
<<
   /ImageType 1
   /Width 56
   /Height 65
   /ImageMatrix [56 0 0 -65 0 65]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 01 ff 80 00 00 
   00 00 0f ff f0 00 00 
   00 00 7f ff fe 00 00 
   00 00 ff 00 ff 00 00 
   00 03 f8 00 1f c0 00 
   00 07 e0 00 07 e0 00 
   00 1f c0 00 03 f8 00 
   00 3f 80 00 01 fc 00 
   00 7f 00 00 00 fe 00 
   00 fe 00 00 00 7f 00 
   00 fc 00 00 00 3f 00 
   01 f8 00 00 00 1f 80 
   03 f8 00 00 00 1f c0 
   07 f0 00 00 00 0f e0 
   07 f0 00 00 00 0f e0 
   0f e0 00 00 00 07 f0 
   0f e0 00 00 00 07 f0 
   1f e0 00 00 00 07 f8 
   1f c0 00 00 00 03 f8 
   3f c0 00 00 00 03 fc 
   3f c0 00 00 00 03 fc 
   3f c0 00 00 00 03 fc 
   7f c0 00 00 00 03 fe 
   7f 80 00 00 00 01 fe 
   7f 80 00 00 00 01 fe 
   7f 80 00 00 00 01 fe 
   7f 80 00 00 00 01 fe 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   ff 80 00 00 00 01 ff 
   7f 80 00 00 00 01 fe 
   7f 80 00 00 00 01 fe 
   7f c0 00 00 00 03 fe 
   7f c0 00 00 00 03 fe 
   7f c0 00 00 00 03 fe 
   3f c0 00 00 00 03 fc 
   3f c0 00 00 00 03 fc 
   1f c0 00 00 00 03 f8 
   1f e0 00 00 00 07 f8 
   1f e0 00 00 00 07 f8 
   0f e0 00 00 00 07 f0 
   0f f0 00 00 00 0f f0 
   07 f0 00 00 00 0f e0 
   03 f8 00 00 00 1f c0 
   03 f8 00 00 00 1f c0 
   01 fc 00 00 00 3f 80 
   00 fe 00 00 00 7f 00 
   00 7f 00 00 00 fe 00 
   00 3f 80 00 01 fc 00 
   00 1f c0 00 03 f8 00 
   00 0f e0 00 07 f0 00 
   00 03 f8 00 1f c0 00 
   00 01 ff 00 ff 80 00 
   00 00 7f ff fe 00 00 
   00 00 0f ff f0 00 00 
   00 00 01 ff 80 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 5
0.521983 0 0.0351562 -0.0078125 0.496094 0.695312 d1
q
q 0.45305 0 0 0.70397 0.03485 -0.00697 cm
<<
   /ImageType 1
   /Width 65
   /Height 101
   /ImageMatrix [65 0 0 -101 0 101]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 00 00 00 00 1e 00 00 
   00 00 00 00 00 3f fe 00 00 
   00 00 00 00 07 ff fe 00 00 
   00 00 00 00 07 ff fe 00 00 
   00 00 00 00 07 ff fe 00 00 
   00 00 00 00 07 ff fe 00 00 
   00 00 00 00 00 0f fe 00 00 
   00 00 00 00 00 03 fe 00 00 
   00 00 00 00 00 03 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 00 00 01 fe 00 00 
   00 00 00 ff 80 01 fe 00 00 
   00 00 0f ff f8 01 fe 00 00 
   00 00 3f ff fe 01 fe 00 00 
   00 00 ff 80 3f 81 fe 00 00 
   00 03 fc 00 07 c1 fe 00 00 
   00 07 f8 00 01 e1 fe 00 00 
   00 1f e0 00 00 f9 fe 00 00 
   00 3f c0 00 00 7d fe 00 00 
   00 7f 80 00 00 3d fe 00 00 
   00 ff 00 00 00 1f fe 00 00 
   01 fe 00 00 00 0f fe 00 00 
   01 fc 00 00 00 07 fe 00 00 
   03 fc 00 00 00 07 fe 00 00 
   07 f8 00 00 00 03 fe 00 00 
   07 f0 00 00 00 01 fe 00 00 
   0f f0 00 00 00 01 fe 00 00 
   1f f0 00 00 00 01 fe 00 00 
   1f e0 00 00 00 01 fe 00 00 
   1f e0 00 00 00 01 fe 00 00 
   3f e0 00 00 00 01 fe 00 00 
   3f c0 00 00 00 01 fe 00 00 
   7f c0 00 00 00 01 fe 00 00 
   7f c0 00 00 00 01 fe 00 00 
   7f c0 00 00 00 01 fe 00 00 
   7f c0 00 00 00 01 fe 00 00 
   7f 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   ff 80 00 00 00 01 fe 00 00 
   7f 80 00 00 00 01 fe 00 00 
   7f c0 00 00 00 01 fe 00 00 
   7f c0 00 00 00 01 fe 00 00 
   7f c0 00 00 00 01 fe 00 00 
   3f c0 00 00 00 01 fe 00 00 
   3f c0 00 00 00 01 fe 00 00 
   3f e0 00 00 00 01 fe 00 00 
   1f e0 00 00 00 01 fe 00 00 
   1f e0 00 00 00 01 fe 00 00 
   0f f0 00 00 00 03 fe 00 00 
   0f f0 00 00 00 03 fe 00 00 
   07 f8 00 00 00 07 fe 00 00 
   03 f8 00 00 00 07 fe 00 00 
   03 fc 00 00 00 0f fe 00 00 
   01 fe 00 00 00 1f fe 00 00 
   00 fe 00 00 00 3d fe 00 00 
   00 7f 00 00 00 3d fe 00 00 
   00 3f 80 00 00 f9 ff 00 00 
   00 1f c0 00 01 f1 ff 00 00 
   00 0f f0 00 03 c1 ff c0 00 
   00 07 f8 00 0f 81 ff ff 80 
   00 01 ff 00 7f 01 ff ff 80 
   00 00 7f ff fc 01 ff ff 80 
   00 00 1f ff e0 01 ff ff 80 
   00 00 01 ff 00 01 ff 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 6
0.521983 0 0.0273438 -0.0078125 0.496094 0.4375 d1
q
q 0.46002 0 0 0.44608 0.02788 -0.00697 cm
<<
   /ImageType 1
   /Width 66
   /Height 64
   /ImageMatrix [66 0 0 -64 0 64]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 03 c0 00 00 00 0f 00 00 
   07 ff c0 00 00 1f ff 00 00 
   ff ff c0 00 03 ff ff 00 00 
   ff ff c0 00 03 ff ff 00 00 
   ff ff c0 00 03 ff ff 00 00 
   ff ff c0 00 03 ff ff 00 00 
   01 ff c0 00 00 07 ff 00 00 
   00 7f c0 00 00 01 ff 00 00 
   00 7f c0 00 00 01 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 00 ff 00 00 
   00 3f c0 00 00 01 ff 00 00 
   00 3f c0 00 00 01 ff 00 00 
   00 3f c0 00 00 01 ff 00 00 
   00 3f c0 00 00 03 ff 00 00 
   00 3f c0 00 00 03 ff 00 00 
   00 3f c0 00 00 03 ff 00 00 
   00 3f c0 00 00 07 ff 00 00 
   00 1f c0 00 00 06 ff 00 00 
   00 1f e0 00 00 0e ff 00 00 
   00 1f e0 00 00 1c ff 00 00 
   00 0f e0 00 00 1c ff 00 00 
   00 0f f0 00 00 38 ff 80 00 
   00 07 f0 00 00 70 ff 80 00 
   00 03 f8 00 01 e0 ff e0 00 
   00 01 fe 00 03 c0 ff ff c0 
   00 00 ff c0 1f 80 ff ff c0 
   00 00 3f ff fe 00 ff ff c0 
   00 00 0f ff f8 00 ff ff c0 
   00 00 00 ff c0 00 ff 80 00 
   >}
>>
imagemask
Q
Q
    }
    { % 7
0.417503 0 0.0351562 -0.0078125 0.390625 0.445312 d1
q
q 0.3485 0 0 0.45305 0.03485 -0.00697 cm
<<
   /ImageType 1
   /Width 50
   /Height 65
   /ImageMatrix [50 0 0 -65 0 65]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 01 ff 80 00 00 
   00 00 0f ff f8 00 00 
   00 00 3f ff fe 00 00 
   00 00 ff 00 7f 80 00 
   00 03 fc 00 07 e0 00 
   00 07 f0 00 01 f0 00 
   00 1f e0 00 00 78 00 
   00 3f c0 00 00 3c 00 
   00 7f 80 00 00 1e 00 
   00 ff 00 00 00 0f 00 
   01 fe 00 00 00 1f 00 
   01 fc 00 00 00 ff 00 
   03 fc 00 00 01 ff 80 
   07 f8 00 00 03 ff 80 
   07 f8 00 00 03 ff 80 
   0f f0 00 00 03 ff 80 
   0f f0 00 00 03 ff 80 
   1f e0 00 00 03 ff 80 
   1f e0 00 00 03 ff 80 
   3f e0 00 00 01 ff 00 
   3f c0 00 00 00 7c 00 
   3f c0 00 00 00 00 00 
   7f c0 00 00 00 00 00 
   7f c0 00 00 00 00 00 
   7f c0 00 00 00 00 00 
   7f 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   7f 80 00 00 00 00 00 
   7f c0 00 00 00 00 00 
   7f c0 00 00 00 00 00 
   7f c0 00 00 00 00 00 
   7f c0 00 00 00 00 00 
   3f c0 00 00 00 00 00 
   3f e0 00 00 00 00 00 
   3f e0 00 00 00 00 00 
   1f e0 00 00 00 01 c0 
   1f f0 00 00 00 01 c0 
   0f f0 00 00 00 03 c0 
   0f f8 00 00 00 03 80 
   07 f8 00 00 00 03 80 
   03 fc 00 00 00 07 80 
   03 fe 00 00 00 07 00 
   01 fe 00 00 00 0f 00 
   00 ff 00 00 00 1e 00 
   00 7f 80 00 00 3c 00 
   00 3f c0 00 00 78 00 
   00 1f e0 00 00 f0 00 
   00 0f f8 00 01 e0 00 
   00 03 fc 00 07 c0 00 
   00 00 ff 80 3f 80 00 
   00 00 3f ff fe 00 00 
   00 00 0f ff f8 00 00 
   00 00 01 ff 80 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 8
0.260817 0 0.0351562 0 0.214844 0.660156 d1
q
q 0.17425 0 0 0.66215 0.03485 -0.000000000000000111 cm
<<
   /ImageType 1
   /Width 25
   /Height 95
   /ImageMatrix [25 0 0 -95 0 95]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 78 00 00 
   01 fe 00 00 
   03 ff 00 00 
   07 ff 80 00 
   07 ff 80 00 
   07 ff 80 00 
   07 ff 80 00 
   07 ff 80 00 
   07 ff 80 00 
   03 ff 00 00 
   01 fe 00 00 
   00 78 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 07 80 00 
   0f ff 80 00 
   ff ff 80 00 
   ff ff 80 00 
   ff ff 80 00 
   ff ff 80 00 
   03 ff 80 00 
   00 ff 80 00 
   00 ff 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 ff c0 00 
   01 ff e0 00 
   ff ff ff 80 
   ff ff ff 80 
   ff ff ff 80 
   ff ff ff 80 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0.015625 -0.0078125 0.496094 0.695312] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-0-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
Encoding 1 /g1 put
Encoding 2 /g2 put
/Glyphs [
    { % 0
0.50177 0 0.0351562 0 0.46875 0.613281 d1
q
q 0.42517 0 0 0.61336 0.03485 0.000000000000000111 cm
<<
   /ImageType 1
   /Width 61
   /Height 88
   /ImageMatrix [61 0 0 -88 0 88]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   3f ff ff f8 00 00 00 00 
   7f ff ff fc 00 00 00 00 
   ff ff ff fc 00 00 00 00 
   ff ff ff fc 00 00 00 00 
   ff ff ff fc 00 00 00 00 
   ff ff ff fc 00 00 00 00 
   7f ff ff fc 00 00 00 00 
   3f ff ff f8 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 00 00 
   00 3f c0 00 00 00 03 f0 
   00 3f c0 00 00 00 03 f0 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   00 3f c0 00 00 00 07 f8 
   3f ff ff ff ff ff ff f8 
   7f ff ff ff ff ff ff f8 
   ff ff ff ff ff ff ff f8 
   ff ff ff ff ff ff ff f8 
   ff ff ff ff ff ff ff f8 
   ff ff ff ff ff ff ff f8 
   7f ff ff ff ff ff ff f0 
   3f ff ff ff ff ff ff f0 
   >}
>>
imagemask
Q
Q
    }
    { % 1
0.50177 0 0.015625 0 0.488281 0.613281 d1
q
q 0.46699 0 0 0.61336 0.01394 0.000000000000000111 cm
<<
   /ImageType 1
   /Width 67
   /Height 88
   /ImageMatrix [67 0 0 -88 0 88]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   3f ff f8 00 00 03 ff ff 80 
   7f ff fc 00 00 07 ff ff c0 
   ff ff fe 00 00 0f ff ff e0 
   ff ff fe 00 00 0f ff ff e0 
   ff ff fe 00 00 0f ff ff e0 
   ff ff fe 00 00 0f ff ff e0 
   7f ff fc 00 00 07 ff ff c0 
   3f ff f8 00 00 03 ff ff 80 
   00 7f 80 00 00 00 3f e0 00 
   00 7f c0 00 00 00 7f c0 00 
   00 3f c0 00 00 00 7f c0 00 
   00 3f e0 00 00 00 ff 80 00 
   00 1f e0 00 00 00 ff 80 00 
   00 1f f0 00 00 01 ff 00 00 
   00 1f f0 00 00 01 ff 00 00 
   00 0f f8 00 00 03 fe 00 00 
   00 0f f8 00 00 03 fe 00 00 
   00 07 fc 00 00 03 fc 00 00 
   00 07 fc 00 00 07 fc 00 00 
   00 03 fe 00 00 07 f8 00 00 
   00 03 fe 00 00 0f f8 00 00 
   00 01 ff 00 00 0f f8 00 00 
   00 01 ff 00 00 1f f0 00 00 
   00 00 ff 80 00 1f f0 00 00 
   00 00 ff 80 00 3f e0 00 00 
   00 00 7f c0 00 3f e0 00 00 
   00 00 7f c0 00 7f c0 00 00 
   00 00 3f c0 00 7f c0 00 00 
   00 00 3f e0 00 7f 80 00 00 
   00 00 1f e0 00 ff 80 00 00 
   00 00 1f f0 00 ff 00 00 00 
   00 00 0f f0 01 ff 00 00 00 
   00 00 0f f8 01 fe 00 00 00 
   00 00 07 f8 03 fe 00 00 00 
   00 00 07 fc 03 fc 00 00 00 
   00 00 03 fc 03 fc 00 00 00 
   00 00 03 fe 07 fc 00 00 00 
   00 00 01 fe 07 f8 00 00 00 
   00 00 01 fe 0f f8 00 00 00 
   00 00 00 ff 0f f0 00 00 00 
   00 00 00 ff 0f f0 00 00 00 
   00 00 00 7f 9f e0 00 00 00 
   00 00 00 7f 9f e0 00 00 00 
   00 00 00 3f 9f c0 00 00 00 
   00 00 00 3f ff c0 00 00 00 
   00 00 00 3f ff 80 00 00 00 
   00 00 00 1f ff 80 00 00 00 
   00 00 00 1f ff 00 00 00 00 
   00 00 00 0f ff 00 00 00 00 
   00 00 00 0f ff 00 00 00 00 
   00 00 00 07 fe 00 00 00 00 
   00 00 00 07 fe 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 00 03 fc 00 00 00 00 
   00 00 01 ff ff f8 00 00 00 
   00 00 03 ff ff fc 00 00 00 
   00 00 03 ff ff fc 00 00 00 
   00 00 03 ff ff fc 00 00 00 
   00 00 03 ff ff fc 00 00 00 
   00 00 03 ff ff fc 00 00 00 
   00 00 03 ff ff fc 00 00 00 
   00 00 01 ff ff f8 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 2
0.50177 0 0.0195312 0 0.472656 0.613281 d1
q
q 0.44608 0 0 0.61336 0.02091 0.000000000000000111 cm
<<
   /ImageType 1
   /Width 64
   /Height 88
   /ImageMatrix [64 0 0 -88 0 88]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   1f ff fe 00 01 ff ff e0 
   1f ff ff 00 03 ff ff f0 
   3f ff ff 80 03 ff ff f0 
   3f ff ff 80 03 ff ff f0 
   3f ff ff 80 03 ff ff f0 
   3f ff ff 80 03 ff ff f0 
   1f ff ff 00 03 ff ff f0 
   1f ff fe 00 01 ff ff e0 
   00 3f e0 00 00 1f f0 00 
   00 1f f0 00 00 1f f0 00 
   00 1f f0 00 00 3f e0 00 
   00 0f f8 00 00 3f e0 00 
   00 07 f8 00 00 7f c0 00 
   00 07 fc 00 00 7f c0 00 
   00 03 fe 00 00 ff 80 00 
   00 03 fe 00 00 ff 80 00 
   00 01 ff 00 01 ff 00 00 
   00 01 ff 00 01 ff 00 00 
   00 00 ff 80 03 fe 00 00 
   00 00 ff 80 03 fe 00 00 
   00 00 7f c0 07 fc 00 00 
   00 00 7f c0 07 fc 00 00 
   00 00 3f e0 0f f8 00 00 
   00 00 3f e0 0f f8 00 00 
   00 00 1f f0 1f f0 00 00 
   00 00 1f f0 1f f0 00 00 
   00 00 0f f8 1f e0 00 00 
   00 00 0f f8 3f e0 00 00 
   00 00 07 fc 3f c0 00 00 
   00 00 03 fc 7f c0 00 00 
   00 00 03 fe 7f 80 00 00 
   00 00 01 fe ff 80 00 00 
   00 00 01 ff ff 00 00 00 
   00 00 00 ff ff 00 00 00 
   00 00 00 ff fe 00 00 00 
   00 00 00 7f fe 00 00 00 
   00 00 00 7f fc 00 00 00 
   00 00 00 3f fc 00 00 00 
   00 00 00 3f f8 00 00 00 
   00 00 00 1f f8 00 00 00 
   00 00 00 1f f0 00 00 00 
   00 00 00 0f f0 00 00 00 
   00 00 00 1f f0 00 00 00 
   00 00 00 1f f8 00 00 00 
   00 00 00 3f f8 00 00 00 
   00 00 00 3f fc 00 00 00 
   00 00 00 7f fe 00 00 00 
   00 00 00 7f fe 00 00 00 
   00 00 00 ff ff 00 00 00 
   00 00 00 ff ff 00 00 00 
   00 00 01 fe ff 80 00 00 
   00 00 01 fe 7f 80 00 00 
   00 00 03 fc 7f c0 00 00 
   00 00 03 fc 3f c0 00 00 
   00 00 07 f8 3f e0 00 00 
   00 00 07 f8 1f e0 00 00 
   00 00 0f f0 1f f0 00 00 
   00 00 0f f0 0f f0 00 00 
   00 00 1f f0 0f f8 00 00 
   00 00 1f e0 07 f8 00 00 
   00 00 3f e0 07 fc 00 00 
   00 00 3f c0 03 fc 00 00 
   00 00 7f c0 03 fe 00 00 
   00 00 7f 80 01 fe 00 00 
   00 00 ff 80 01 ff 00 00 
   00 00 ff 00 00 ff 80 00 
   00 01 ff 00 00 ff 80 00 
   00 01 fe 00 00 7f c0 00 
   00 03 fe 00 00 7f c0 00 
   00 03 fc 00 00 3f e0 00 
   00 07 fc 00 00 3f e0 00 
   00 07 f8 00 00 1f f0 00 
   00 0f f8 00 00 0f f0 00 
   00 0f f0 00 00 0f f8 00 
   00 1f f0 00 00 07 f8 00 
   00 1f e0 00 00 07 fc 00 
   00 3f e0 00 00 03 fc 00 
   00 3f c0 00 00 03 fe 00 
   00 7f c0 00 00 01 fe 00 
   00 7f c0 00 00 01 ff 00 
   3f ff fc 00 00 1f ff fe 
   7f ff fc 00 00 3f ff ff 
   ff ff fe 00 00 3f ff ff 
   ff ff fe 00 00 3f ff ff 
   ff ff fe 00 00 3f ff ff 
   ff ff fe 00 00 3f ff ff 
   7f ff fc 00 00 3f ff ff 
   3f ff fc 00 00 1f ff fe 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0.015625 0 0.488281 0.613281] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-1-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
Encoding 1 /g1 put
Encoding 2 /g2 put
Encoding 3 /g3 put
Encoding 4 /g4 put
Encoding 5 /g5 put
Encoding 6 /g6 put
Encoding 7 /g7 put
Encoding 8 /g8 put
Encoding 9 /g9 put
/Glyphs [
    { % 0
0.896974 0 0.0507812 0 0.84375 0.683594 d1
q
q 0.78312 0 0 0.68272 0.0502 0 cm
<<
   /ImageType 1
   /Width 78
   /Height 68
   /ImageMatrix [78 0 0 -68 0 68]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff 80 00 00 00 00 07 ff fc 
   ff ff c0 00 00 00 00 0f ff fc 
   ff ff c0 00 00 00 00 0f ff fc 
   01 ff c0 00 00 00 00 0f fe 00 
   00 6f e0 00 00 00 00 1b f8 00 
   00 6f e0 00 00 00 00 1b f8 00 
   00 6f e0 00 00 00 00 1b f8 00 
   00 67 f0 00 00 00 00 33 f8 00 
   00 67 f0 00 00 00 00 33 f8 00 
   00 63 f8 00 00 00 00 63 f8 00 
   00 63 f8 00 00 00 00 63 f8 00 
   00 63 f8 00 00 00 00 63 f8 00 
   00 61 fc 00 00 00 00 c3 f8 00 
   00 61 fc 00 00 00 00 c3 f8 00 
   00 61 fc 00 00 00 00 c3 f8 00 
   00 60 fe 00 00 00 01 83 f8 00 
   00 60 fe 00 00 00 01 83 f8 00 
   00 60 7f 00 00 00 03 03 f8 00 
   00 60 7f 00 00 00 03 03 f8 00 
   00 60 7f 00 00 00 03 03 f8 00 
   00 60 3f 80 00 00 06 03 f8 00 
   00 60 3f 80 00 00 06 03 f8 00 
   00 60 3f 80 00 00 06 03 f8 00 
   00 60 1f c0 00 00 0c 03 f8 00 
   00 60 1f c0 00 00 0c 03 f8 00 
   00 60 0f e0 00 00 18 03 f8 00 
   00 60 0f e0 00 00 18 03 f8 00 
   00 60 0f e0 00 00 18 03 f8 00 
   00 60 07 f0 00 00 30 03 f8 00 
   00 60 07 f0 00 00 30 03 f8 00 
   00 60 07 f0 00 00 30 03 f8 00 
   00 60 03 f8 00 00 60 03 f8 00 
   00 60 03 f8 00 00 60 03 f8 00 
   00 60 01 fc 00 00 c0 03 f8 00 
   00 60 01 fc 00 00 c0 03 f8 00 
   00 60 01 fc 00 00 c0 03 f8 00 
   00 60 00 fe 00 01 80 03 f8 00 
   00 60 00 fe 00 01 80 03 f8 00 
   00 60 00 fe 00 01 80 03 f8 00 
   00 60 00 7f 00 03 00 03 f8 00 
   00 60 00 7f 00 03 00 03 f8 00 
   00 60 00 3f 80 06 00 03 f8 00 
   00 60 00 3f 80 06 00 03 f8 00 
   00 60 00 3f 80 06 00 03 f8 00 
   00 60 00 1f c0 0c 00 03 f8 00 
   00 60 00 1f c0 0c 00 03 f8 00 
   00 60 00 1f c0 0c 00 03 f8 00 
   00 60 00 0f e0 18 00 03 f8 00 
   00 60 00 0f e0 18 00 03 f8 00 
   00 60 00 07 f0 30 00 03 f8 00 
   00 60 00 07 f0 30 00 03 f8 00 
   00 60 00 07 f0 30 00 03 f8 00 
   00 60 00 03 f8 60 00 03 f8 00 
   00 60 00 03 f8 60 00 03 f8 00 
   00 60 00 03 f8 60 00 03 f8 00 
   00 60 00 01 fc c0 00 03 f8 00 
   00 60 00 01 fc c0 00 03 f8 00 
   00 60 00 00 ff 80 00 03 f8 00 
   00 60 00 00 ff 80 00 03 f8 00 
   00 60 00 00 ff 80 00 03 f8 00 
   00 60 00 00 7f 00 00 03 f8 00 
   00 f0 00 00 7f 00 00 03 f8 00 
   00 f0 00 00 7f 00 00 03 f8 00 
   01 f8 00 00 3e 00 00 03 f8 00 
   0f ff 00 00 3e 00 00 0f fe 00 
   ff ff f0 00 1c 00 07 ff ff fc 
   ff ff f0 00 1c 00 07 ff ff fc 
   ff ff f0 00 1c 00 07 ff ff fc 
   >}
>>
imagemask
Q
Q
    }
    { % 1
0.48945 0 0.0390625 -0.0117188 0.480469 0.453125 d1
q
q 0.43172 0 0 0.46184 0.04016 -0.01004 cm
<<
   /ImageType 1
   /Width 43
   /Height 46
   /ImageMatrix [43 0 0 -46 0 46]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 07 fc 00 00 00 
   00 3f ff 80 00 00 
   00 f8 0f e0 00 00 
   03 c0 03 f0 00 00 
   07 00 01 f8 00 00 
   0e 00 00 fc 00 00 
   0f c0 00 7e 00 00 
   1f e0 00 7f 00 00 
   1f f0 00 3f 80 00 
   1f f0 00 3f 80 00 
   1f f0 00 3f 80 00 
   1f f0 00 1f c0 00 
   1f f0 00 1f c0 00 
   0f e0 00 1f c0 00 
   03 80 00 1f c0 00 
   00 00 00 1f c0 00 
   00 00 00 1f c0 00 
   00 00 00 1f c0 00 
   00 00 00 1f c0 00 
   00 00 0f ff c0 00 
   00 01 ff ff c0 00 
   00 0f fe 1f c0 00 
   00 3f c0 1f c0 00 
   00 ff 00 1f c0 00 
   03 fc 00 1f c0 00 
   07 f8 00 1f c0 00 
   0f f0 00 1f c0 00 
   1f e0 00 1f c0 00 
   3f c0 00 1f c0 00 
   7f c0 00 1f c0 00 
   7f 80 00 1f c0 00 
   7f 80 00 1f c0 60 
   ff 00 00 1f c0 60 
   ff 00 00 1f c0 60 
   ff 00 00 1f c0 60 
   ff 00 00 3f c0 60 
   ff 00 00 3f c0 60 
   ff 00 00 3f c0 60 
   ff 80 00 7f c0 60 
   7f 80 00 ef c0 60 
   7f c0 00 c7 e0 c0 
   3f c0 01 c7 e0 c0 
   1f e0 07 83 f1 c0 
   07 f8 1e 03 ff 80 
   01 ff fc 01 ff 00 
   00 1f e0 00 7c 00 
   >}
>>
imagemask
Q
Q
    }
    { % 2
0.380717 0 0.03125 0 0.363281 0.441406 d1
q
q 0.32128 0 0 0.44176 0.03012 -0.000000000000000056 cm
<<
   /ImageType 1
   /Width 32
   /Height 44
   /ImageMatrix [32 0 0 -44 0 44]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   03 f8 03 f0 
   ff f8 1f fc 
   ff f8 3c 3e 
   ff f8 70 7f 
   07 f8 e0 ff 
   03 f9 c0 ff 
   01 f9 80 ff 
   01 fb 80 ff 
   01 fb 00 7e 
   01 fb 00 3c 
   01 ff 00 00 
   01 fe 00 00 
   01 fe 00 00 
   01 fe 00 00 
   01 fe 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   01 fc 00 00 
   03 ff 00 00 
   ff ff fe 00 
   ff ff fe 00 
   ff ff fe 00 
   >}
>>
imagemask
Q
Q
    }
    { % 3
0.435033 0 0.03125 -0.0117188 0.402344 0.453125 d1
q
q 0.36144 0 0 0.46184 0.03012 -0.01004 cm
<<
   /ImageType 1
   /Width 36
   /Height 46
   /ImageMatrix [36 0 0 -46 0 46]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 7f 80 00 
   00 03 ff f0 00 
   00 0f c0 7c 00 
   00 3f 00 0f 00 
   00 fc 00 03 80 
   01 f8 00 01 c0 
   03 f8 00 0f c0 
   07 f0 00 1f e0 
   07 e0 00 3f e0 
   0f e0 00 3f e0 
   1f c0 00 3f e0 
   1f c0 00 3f e0 
   3f 80 00 3f e0 
   3f 80 00 1f c0 
   7f 80 00 07 00 
   7f 80 00 00 00 
   7f 80 00 00 00 
   7f 00 00 00 00 
   ff 00 00 00 00 
   ff 00 00 00 00 
   ff 00 00 00 00 
   ff 00 00 00 00 
   ff 00 00 00 00 
   ff 00 00 00 00 
   ff 00 00 00 00 
   ff 00 00 00 00 
   ff 00 00 00 00 
   ff 00 00 00 00 
   ff 00 00 00 00 
   7f 00 00 00 00 
   7f 80 00 00 00 
   7f 80 00 00 00 
   3f 80 00 00 00 
   3f 80 00 00 30 
   3f c0 00 00 30 
   1f c0 00 00 70 
   0f e0 00 00 60 
   0f e0 00 00 e0 
   07 f0 00 00 c0 
   03 f8 00 01 c0 
   01 f8 00 03 80 
   00 fc 00 07 00 
   00 3f 00 1e 00 
   00 1f c0 78 00 
   00 07 ff f0 00 
   00 00 ff 80 00 
   >}
>>
imagemask
Q
Q
    }
    { % 4
0.543867 0 0.03125 0 0.511719 0.691406 d1
q
q 0.47188 0 0 0.69276 0.03012 0 cm
<<
   /ImageType 1
   /Width 47
   /Height 69
   /ImageMatrix [47 0 0 -69 0 69]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   01 fc 00 00 00 00 
   ff fc 00 00 00 00 
   ff fc 00 00 00 00 
   ff fc 00 00 00 00 
   07 fc 00 00 00 00 
   03 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 01 fe 00 00 
   01 fc 07 ff c0 00 
   01 fc 1e 07 f0 00 
   01 fc 38 01 f8 00 
   01 fc 70 01 fc 00 
   01 fc e0 00 fc 00 
   01 fd c0 00 fe 00 
   01 fd 80 00 fe 00 
   01 ff 80 00 7f 00 
   01 ff 00 00 7f 00 
   01 ff 00 00 7f 00 
   01 fe 00 00 7f 00 
   01 fe 00 00 7f 00 
   01 fe 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   01 fc 00 00 7f 00 
   03 fe 00 00 ff 80 
   ff ff f8 3f ff fe 
   ff ff f8 3f ff fe 
   ff ff f8 3f ff fe 
   >}
>>
imagemask
Q
Q
    }
    { % 5
0.48945 0 0.0507812 0 0.441406 0.664062 d1
q
q 0.38152 0 0 0.66264 0.0502 0 cm
<<
   /ImageType 1
   /Width 38
   /Height 66
   /ImageMatrix [38 0 0 -66 0 66]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 03 fe 00 00 
   00 1f ff c0 00 
   00 7f ff f0 00 
   01 f8 0f fc 00 
   03 c0 01 fe 00 
   07 80 00 ff 00 
   0e 00 00 7f 80 
   1c 00 00 3f c0 
   1c 00 00 1f e0 
   38 00 00 1f f0 
   30 00 00 0f f0 
   70 00 00 0f f8 
   60 00 00 07 f8 
   6c 00 00 07 f8 
   ff 00 00 07 fc 
   ff 80 00 07 fc 
   ff c0 00 07 fc 
   ff c0 00 03 fc 
   ff c0 00 03 fc 
   ff c0 00 03 fc 
   ff c0 00 03 fc 
   7f 80 00 07 fc 
   3f 00 00 07 fc 
   00 00 00 07 fc 
   00 00 00 07 f8 
   00 00 00 07 f8 
   00 00 00 0f f8 
   00 00 00 0f f0 
   00 00 00 1f f0 
   00 00 00 1f e0 
   00 00 00 1f e0 
   00 00 00 3f c0 
   00 00 00 7f 80 
   00 00 00 7f 00 
   00 00 00 ff 00 
   00 00 00 fe 00 
   00 00 01 fc 00 
   00 00 03 f8 00 
   00 00 07 f0 00 
   00 00 07 e0 00 
   00 00 0f c0 00 
   00 00 1f 80 00 
   00 00 3f 00 00 
   00 00 7c 00 00 
   00 00 f8 00 00 
   00 00 f0 00 00 
   00 01 e0 00 00 
   00 03 c0 00 00 
   00 07 80 00 00 
   00 0f 00 00 0c 
   00 1e 00 00 0c 
   00 3c 00 00 0c 
   00 38 00 00 18 
   00 70 00 00 18 
   00 e0 00 00 18 
   01 c0 00 00 18 
   03 80 00 00 38 
   07 00 00 00 30 
   0e 00 00 00 70 
   1f ff ff ff f0 
   1f ff ff ff f0 
   3f ff ff ff f0 
   7f ff ff ff f0 
   ff ff ff ff e0 
   ff ff ff ff e0 
   ff ff ff ff e0 
   >}
>>
imagemask
Q
Q
    }
    { % 6
0.48945 0 0.0820312 0 0.410156 0.664062 d1
q
q 0.32128 0 0 0.66264 0.08032 0 cm
<<
   /ImageType 1
   /Width 32
   /Height 66
   /ImageMatrix [32 0 0 -66 0 66]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 30 00 
   00 00 f0 00 
   00 01 f0 00 
   00 03 f0 00 
   00 1f f0 00 
   00 ff f0 00 
   ff ff f0 00 
   ff e7 f0 00 
   ff 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 07 f0 00 
   00 0f f8 00 
   00 1f fc 00 
   7f ff ff ff 
   7f ff ff ff 
   7f ff ff ff 
   >}
>>
imagemask
Q
Q
    }
    { % 7
0.271883 0 0.0820312 -0.191406 0.199219 0.101562 d1
q
q 0.11044 0 0 0.29116 0.08032 -0.19076 cm
<<
   /ImageType 1
   /Width 11
   /Height 29
   /ImageMatrix [11 0 0 -29 0 29]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   1e 00 
   7f 80 
   ff 80 
   ff c0 
   ff c0 
   ff e0 
   ff e0 
   ff e0 
   7f e0 
   1e 60 
   00 60 
   00 60 
   00 60 
   00 60 
   00 e0 
   00 c0 
   00 c0 
   00 c0 
   01 c0 
   01 80 
   03 80 
   03 00 
   07 00 
   06 00 
   0e 00 
   1c 00 
   38 00 
   70 00 
   60 00 
   >}
>>
imagemask
Q
Q
    }
    { % 8
0.48945 0 0.0390625 -0.0195312 0.453125 0.664062 d1
q
q 0.4016 0 0 0.68272 0.04016 -0.02008 cm
<<
   /ImageType 1
   /Width 40
   /Height 68
   /ImageMatrix [40 0 0 -68 0 68]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 ff 00 00 
   00 07 ff e0 00 
   00 1f 81 f8 00 
   00 3e 00 7c 00 
   00 fc 00 3f 00 
   01 f8 00 1f 80 
   01 f0 00 0f 80 
   03 e0 00 07 c0 
   07 c0 00 03 e0 
   07 c0 00 03 e0 
   0f c0 00 03 f0 
   0f 80 00 01 f0 
   1f 80 00 01 f8 
   1f 80 00 01 f8 
   3f 80 00 01 fc 
   3f 80 00 01 fc 
   3f 80 00 01 fc 
   3f 00 00 00 fc 
   7f 00 00 00 fe 
   7f 00 00 00 fe 
   7f 00 00 00 fe 
   7f 00 00 00 fe 
   7f 00 00 00 fe 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   ff 00 00 00 ff 
   7f 00 00 00 fe 
   7f 00 00 00 fe 
   7f 00 00 00 fe 
   7f 00 00 00 fe 
   7f 00 00 00 fe 
   7f 80 00 01 fe 
   3f 80 00 01 fc 
   3f 80 00 01 fc 
   3f 80 00 01 fc 
   1f 80 00 01 f8 
   1f 80 00 01 f8 
   0f c0 00 03 f0 
   0f c0 00 03 f0 
   0f c0 00 03 f0 
   07 e0 00 07 e0 
   03 e0 00 07 c0 
   03 f0 00 0f c0 
   01 f8 00 1f 80 
   00 fc 00 3f 00 
   00 3e 00 7c 00 
   00 1f 81 f8 00 
   00 07 ff e0 00 
   00 00 ff 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 9
0.48945 0 0.0390625 -0.0195312 0.453125 0.664062 d1
q
q 0.4016 0 0 0.68272 0.04016 -0.02008 cm
<<
   /ImageType 1
   /Width 40
   /Height 68
   /ImageMatrix [40 0 0 -68 0 68]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 ff 00 00 
   00 07 ff e0 00 
   00 1f ff f8 00 
   00 7f 00 fe 00 
   00 fc 00 3f 00 
   01 f0 00 1f 80 
   03 e0 00 0f c0 
   03 c0 00 07 e0 
   07 c0 00 03 f0 
   0f 80 00 01 f0 
   0f 80 00 01 f0 
   0f 00 00 01 f8 
   1f 00 00 00 f8 
   1f 00 00 00 f8 
   1f 00 00 00 f8 
   1f 00 00 00 f8 
   1f 80 00 00 f8 
   1f 80 00 00 f8 
   1f c0 00 01 f8 
   1f c0 00 01 f0 
   1f e0 00 01 f0 
   0f f0 00 03 e0 
   0f fc 00 03 e0 
   07 fe 00 07 c0 
   07 ff 80 0f 80 
   03 ff c0 1f 00 
   01 ff f0 3e 00 
   01 ff f8 78 00 
   00 7f fe f0 00 
   00 3f ff c0 00 
   00 1f ff c0 00 
   00 07 ff e0 00 
   00 03 ff f8 00 
   00 07 ff fc 00 
   00 1e 7f ff 00 
   00 7c 1f ff 80 
   00 f8 0f ff c0 
   01 e0 03 ff e0 
   03 c0 01 ff f0 
   07 c0 00 7f f8 
   0f 80 00 3f fc 
   1f 00 00 0f fc 
   3e 00 00 07 fe 
   3e 00 00 01 fe 
   7c 00 00 00 fe 
   7c 00 00 00 ff 
   7c 00 00 00 7f 
   f8 00 00 00 3f 
   f8 00 00 00 3f 
   f8 00 00 00 1f 
   f8 00 00 00 1f 
   f8 00 00 00 1f 
   f8 00 00 00 1f 
   f8 00 00 00 1f 
   fc 00 00 00 1e 
   7c 00 00 00 3e 
   7c 00 00 00 3e 
   7e 00 00 00 3c 
   3e 00 00 00 7c 
   1f 00 00 00 f8 
   1f 80 00 01 f0 
   0f c0 00 03 e0 
   07 e0 00 07 c0 
   03 f8 00 1f 80 
   00 ff 00 ff 00 
   00 3f ff fc 00 
   00 0f ff f0 00 
   00 01 ff 80 00 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0.03125 -0.191406 0.84375 0.691406] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-2-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
Encoding 1 /g1 put
Encoding 2 /g2 put
Encoding 3 /g3 put
Encoding 4 /g4 put
Encoding 5 /g5 put
Encoding 6 /g6 put
Encoding 7 /g7 put
/Glyphs [
    { % 0
0.549837 0 0.0820312 0 0.476562 0.652344 d1
q
q 0.38456 0 0 0.65208 0.0836 -0.000000000000000111 cm
<<
   /ImageType 1
   /Width 46
   /Height 78
   /ImageMatrix [46 0 0 -78 0 78]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 00 1e 00 00 
   00 00 00 3e 00 00 
   00 00 00 fe 00 00 
   00 00 03 fe 00 00 
   00 00 0f fe 00 00 
   00 00 7f fe 00 00 
   00 07 ff fe 00 00 
   03 ff ff fe 00 00 
   ff ff ff fe 00 00 
   ff ff ff fe 00 00 
   ff ff ff fe 00 00 
   ff f8 7f fe 00 00 
   fc 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   00 00 7f fe 00 00 
   7f ff ff ff ff fc 
   7f ff ff ff ff fc 
   7f ff ff ff ff fc 
   7f ff ff ff ff fc 
   7f ff ff ff ff fc 
   >}
>>
imagemask
Q
Q
    }
    { % 1
0.305474 0 0.0351562 0 0.277344 0.703125 d1
q
q 0.23408 0 0 0.70224 0.03344 0 cm
<<
   /ImageType 1
   /Width 28
   /Height 84
   /ImageMatrix [28 0 0 -84 0 84]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 3f 00 00 
   00 ff c0 00 
   01 ff e0 00 
   03 ff f0 00 
   03 ff f0 00 
   07 ff f8 00 
   07 ff f8 00 
   07 ff f8 00 
   07 ff f8 00 
   07 ff f8 00 
   07 ff f8 00 
   03 ff f0 00 
   03 ff f0 00 
   01 ff e0 00 
   00 ff c0 00 
   00 3f 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 00 00 00 
   00 1f f8 00 
   ff ff f8 00 
   ff ff f8 00 
   ff ff f8 00 
   ff ff f8 00 
   ff ff f8 00 
   01 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   00 ff f8 00 
   ff ff ff f0 
   ff ff ff f0 
   ff ff ff f0 
   ff ff ff f0 
   ff ff ff f0 
   >}
>>
imagemask
Q
Q
    }
    { % 2
0.4338 0 0.0351562 -0.0078125 0.402344 0.460938 d1
q
q 0.35948 0 0 0.46816 0.03344 -0.00836 cm
<<
   /ImageType 1
   /Width 43
   /Height 56
   /ImageMatrix [43 0 0 -56 0 56]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 03 ff c0 0e 00 
   00 1f ff fc 1e 00 
   00 ff ff ff 7e 00 
   03 ff ff ff fe 00 
   07 fe 00 3f fe 00 
   0f f0 00 0f fe 00 
   1f e0 00 03 fe 00 
   3f c0 00 01 fe 00 
   3f 80 00 00 fe 00 
   7f 80 00 00 fe 00 
   7f 00 00 00 7e 00 
   7f 00 00 00 7e 00 
   ff 00 00 00 3e 00 
   ff 00 00 00 3e 00 
   ff 80 00 00 3e 00 
   ff 80 00 00 3e 00 
   ff c0 00 00 3e 00 
   ff f0 00 00 00 00 
   ff fc 00 00 00 00 
   ff ff 80 00 00 00 
   7f ff fe 00 00 00 
   7f ff ff f0 00 00 
   3f ff ff fe 00 00 
   3f ff ff ff 80 00 
   1f ff ff ff e0 00 
   0f ff ff ff f0 00 
   07 ff ff ff fc 00 
   03 ff ff ff fe 00 
   00 ff ff ff ff 00 
   00 3f ff ff ff 00 
   00 0f ff ff ff 80 
   00 01 ff ff ff 80 
   00 00 0f ff ff c0 
   00 00 00 3f ff c0 
   00 00 00 07 ff e0 
   00 00 00 01 ff e0 
   f8 00 00 00 ff e0 
   f8 00 00 00 7f e0 
   fc 00 00 00 3f e0 
   fc 00 00 00 3f e0 
   fc 00 00 00 1f e0 
   fe 00 00 00 1f e0 
   fe 00 00 00 1f e0 
   fe 00 00 00 1f c0 
   ff 00 00 00 1f c0 
   ff 80 00 00 3f c0 
   ff 80 00 00 3f 80 
   ff c0 00 00 3f 80 
   ff e0 00 00 7f 00 
   ff f8 00 00 ff 00 
   ff fc 00 03 fe 00 
   ff ff 80 1f fc 00 
   fe 7f ff ff f0 00 
   f8 1f ff ff c0 00 
   f0 07 ff ff 00 00 
   e0 00 7f f0 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 3
0.549837 0 0.0351562 -0.0078125 0.542969 0.460938 d1
q
q 0.5016 0 0 0.46816 0.03344 -0.00836 cm
<<
   /ImageType 1
   /Width 60
   /Height 56
   /ImageMatrix [60 0 0 -56 0 56]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 3f fe 00 00 00 00 
   00 07 ff ff e0 00 00 00 
   00 1f ff ff fc 00 00 00 
   00 7f ff ff ff 00 00 00 
   01 ff c0 0f ff c0 00 00 
   03 fe 00 03 ff e0 00 00 
   07 ff 00 00 ff f0 00 00 
   07 ff 80 00 7f f8 00 00 
   0f ff c0 00 7f fc 00 00 
   0f ff c0 00 3f fe 00 00 
   0f ff c0 00 3f fe 00 00 
   0f ff c0 00 1f ff 00 00 
   0f ff c0 00 1f ff 00 00 
   0f ff c0 00 1f ff 00 00 
   0f ff c0 00 0f ff 80 00 
   07 ff 80 00 0f ff 80 00 
   03 ff 00 00 0f ff 80 00 
   01 fe 00 00 0f ff 80 00 
   00 00 00 00 0f ff 80 00 
   00 00 00 00 0f ff 80 00 
   00 00 00 00 0f ff 80 00 
   00 00 00 00 0f ff 80 00 
   00 00 00 00 0f ff 80 00 
   00 00 00 00 0f ff 80 00 
   00 00 00 07 ff ff 80 00 
   00 00 03 ff ff ff 80 00 
   00 00 7f ff ff ff 80 00 
   00 03 ff ff ff ff 80 00 
   00 1f ff f0 0f ff 80 00 
   00 7f ff 00 0f ff 80 00 
   00 ff fc 00 0f ff 80 00 
   03 ff f0 00 0f ff 80 00 
   07 ff c0 00 0f ff 80 00 
   0f ff 80 00 0f ff 80 00 
   1f ff 00 00 0f ff 80 00 
   3f ff 00 00 0f ff 80 00 
   3f fe 00 00 0f ff 80 00 
   7f fc 00 00 0f ff 80 00 
   7f fc 00 00 0f ff 81 f0 
   ff fc 00 00 0f ff 81 f0 
   ff f8 00 00 0f ff 81 f0 
   ff f8 00 00 0f ff 81 f0 
   ff f8 00 00 0f ff 81 f0 
   ff f8 00 00 1f ff 81 f0 
   ff f8 00 00 1f ff 81 f0 
   ff fc 00 00 3f ff 81 f0 
   7f fc 00 00 3f ff 81 f0 
   7f fe 00 00 7f ff 81 f0 
   3f fe 00 00 f7 ff c3 f0 
   3f ff 00 01 e3 ff c3 e0 
   1f ff c0 07 e3 ff ff e0 
   07 ff f0 1f 81 ff ff c0 
   03 ff ff ff 00 ff ff 80 
   00 ff ff fc 00 7f ff 00 
   00 1f ff f0 00 3f fc 00 
   00 01 ff 80 00 07 f0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 4
0.794284 0 0.0234375 -0.0078125 0.769531 0.441406 d1
q
q 0.73568 0 0 0.45144 0.02508 -0.00836 cm
<<
   /ImageType 1
   /Width 88
   /Height 54
   /ImageMatrix [88 0 0 -54 0 54]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff ff e1 ff ff ff 80 0f ff ff 
   ff ff ff e1 ff ff ff 80 0f ff ff 
   ff ff ff e1 ff ff ff 80 0f ff ff 
   ff ff ff e1 ff ff ff 80 0f ff ff 
   ff ff ff e1 ff ff ff 80 0f ff ff 
   01 ff f0 00 03 ff c0 00 00 3f e0 
   01 ff f8 00 01 ff e0 00 00 0f 80 
   00 ff f8 00 01 ff e0 00 00 1f 00 
   00 ff f8 00 01 ff e0 00 00 1f 00 
   00 ff fc 00 00 ff f0 00 00 3f 00 
   00 7f fc 00 00 ff f0 00 00 3e 00 
   00 7f fe 00 00 7f f0 00 00 3e 00 
   00 7f fe 00 00 7f f8 00 00 7e 00 
   00 3f fe 00 00 7f f8 00 00 7c 00 
   00 3f ff 00 00 7f fc 00 00 fc 00 
   00 1f ff 00 00 7f fc 00 00 f8 00 
   00 1f ff 00 00 ff fc 00 00 f8 00 
   00 1f ff 80 00 ff fe 00 01 f8 00 
   00 0f ff 80 01 ff fe 00 01 f0 00 
   00 0f ff c0 01 ff ff 00 03 f0 00 
   00 07 ff c0 01 ff ff 00 03 e0 00 
   00 07 ff c0 03 ff ff 00 03 e0 00 
   00 07 ff e0 03 e7 ff 80 07 e0 00 
   00 03 ff e0 07 e7 ff 80 07 c0 00 
   00 03 ff f0 07 c3 ff c0 07 c0 00 
   00 01 ff f0 07 c3 ff c0 0f 80 00 
   00 01 ff f0 0f c3 ff c0 0f 80 00 
   00 01 ff f8 0f 81 ff e0 1f 80 00 
   00 00 ff f8 0f 81 ff e0 1f 00 00 
   00 00 ff fc 1f 00 ff e0 1f 00 00 
   00 00 ff fc 1f 00 ff f0 3f 00 00 
   00 00 7f fc 3f 00 ff f0 3e 00 00 
   00 00 7f fe 3e 00 7f f8 7e 00 00 
   00 00 3f fe 3e 00 7f f8 7c 00 00 
   00 00 3f fe 7e 00 7f f8 7c 00 00 
   00 00 3f ff 7c 00 3f fc fc 00 00 
   00 00 1f ff fc 00 3f fc f8 00 00 
   00 00 1f ff f8 00 1f ff f8 00 00 
   00 00 0f ff f8 00 1f ff f0 00 00 
   00 00 0f ff f8 00 1f ff f0 00 00 
   00 00 0f ff f0 00 0f ff f0 00 00 
   00 00 07 ff f0 00 0f ff e0 00 00 
   00 00 07 ff e0 00 07 ff e0 00 00 
   00 00 03 ff e0 00 07 ff c0 00 00 
   00 00 03 ff e0 00 07 ff c0 00 00 
   00 00 03 ff c0 00 03 ff c0 00 00 
   00 00 01 ff c0 00 03 ff 80 00 00 
   00 00 01 ff 80 00 01 ff 80 00 00 
   00 00 01 ff 80 00 01 ff 80 00 00 
   00 00 00 ff 80 00 01 ff 00 00 00 
   00 00 00 ff 00 00 00 ff 00 00 00 
   00 00 00 7f 00 00 00 fe 00 00 00 
   00 00 00 7f 00 00 00 fe 00 00 00 
   00 00 00 3e 00 00 00 7c 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 5
0.500012 0 0.0351562 -0.0078125 0.46875 0.460938 d1
q
q 0.42636 0 0 0.46816 0.03344 -0.00836 cm
<<
   /ImageType 1
   /Width 51
   /Height 56
   /ImageMatrix [51 0 0 -56 0 56]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 07 ff 80 00 00 
   00 00 7f ff f8 00 00 
   00 01 ff ff fe 00 00 
   00 07 ff ff ff 80 00 
   00 1f ff 03 ff e0 00 
   00 3f fc 00 7f f0 00 
   00 7f f0 00 3f f8 00 
   00 ff e0 00 1f fc 00 
   01 ff c0 00 0f fc 00 
   03 ff 80 00 07 fe 00 
   07 ff 80 00 07 ff 00 
   0f ff 00 00 03 ff 00 
   0f ff 00 00 03 ff 80 
   1f fe 00 00 03 ff 80 
   1f fe 00 00 01 ff 80 
   3f fe 00 00 01 ff c0 
   3f fe 00 00 01 ff c0 
   3f fe 00 00 01 ff c0 
   7f fc 00 00 01 ff c0 
   7f fc 00 00 01 ff e0 
   7f fc 00 00 00 ff e0 
   7f fc 00 00 00 ff e0 
   ff fc 00 00 00 ff e0 
   ff fc 00 00 00 ff e0 
   ff ff ff ff ff ff e0 
   ff ff ff ff ff ff e0 
   ff ff ff ff ff ff e0 
   ff ff ff ff ff ff e0 
   ff fc 00 00 00 00 00 
   ff fc 00 00 00 00 00 
   ff fc 00 00 00 00 00 
   ff fc 00 00 00 00 00 
   ff fc 00 00 00 00 00 
   ff fc 00 00 00 00 00 
   7f fc 00 00 00 00 00 
   7f fc 00 00 00 00 00 
   7f fc 00 00 00 00 00 
   7f fe 00 00 00 00 00 
   3f fe 00 00 00 00 00 
   3f fe 00 00 00 00 00 
   3f fe 00 00 00 03 e0 
   1f ff 00 00 00 03 e0 
   1f ff 00 00 00 07 e0 
   0f ff 00 00 00 07 c0 
   07 ff 80 00 00 0f c0 
   07 ff 80 00 00 0f 80 
   03 ff c0 00 00 1f 80 
   01 ff e0 00 00 3f 00 
   00 ff f0 00 00 7e 00 
   00 7f fc 00 01 fc 00 
   00 1f ff 00 07 f8 00 
   00 0f ff e0 3f f0 00 
   00 03 ff ff ff c0 00 
   00 00 ff ff ff 80 00 
   00 00 3f ff fc 00 00 
   00 00 01 ff e0 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 6
0.549837 0 0.0351562 -0.0078125 0.519531 0.460938 d1
q
q 0.47652 0 0 0.46816 0.03344 -0.00836 cm
<<
   /ImageType 1
   /Width 57
   /Height 56
   /ImageMatrix [57 0 0 -56 0 56]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 01 ff c0 00 00 00 
   00 00 3f ff fe 00 00 00 
   00 00 ff ff ff 80 00 00 
   00 03 ff ff ff e0 00 00 
   00 0f ff 80 ff f8 00 00 
   00 3f fc 00 1f fe 00 00 
   00 7f f0 00 07 ff 00 00 
   00 ff e0 00 03 ff 80 00 
   01 ff c0 00 01 ff c0 00 
   03 ff 80 00 00 ff e0 00 
   03 ff 00 00 00 7f e0 00 
   07 ff 00 00 00 7f f0 00 
   0f ff 00 00 00 7f f8 00 
   0f fe 00 00 00 3f f8 00 
   1f fe 00 00 00 3f fc 00 
   1f fe 00 00 00 3f fc 00 
   3f fe 00 00 00 3f fe 00 
   3f fc 00 00 00 1f fe 00 
   3f fc 00 00 00 1f fe 00 
   7f fc 00 00 00 1f ff 00 
   7f fc 00 00 00 1f ff 00 
   7f fc 00 00 00 1f ff 00 
   7f fc 00 00 00 1f ff 00 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   ff fc 00 00 00 1f ff 80 
   7f fc 00 00 00 1f ff 00 
   7f fc 00 00 00 1f ff 00 
   7f fc 00 00 00 1f ff 00 
   3f fc 00 00 00 1f fe 00 
   3f fe 00 00 00 3f fe 00 
   3f fe 00 00 00 3f fe 00 
   1f fe 00 00 00 3f fc 00 
   1f fe 00 00 00 3f fc 00 
   0f ff 00 00 00 7f f8 00 
   0f ff 00 00 00 7f f8 00 
   07 ff 80 00 00 ff f0 00 
   03 ff 80 00 00 ff e0 00 
   01 ff c0 00 01 ff c0 00 
   00 ff e0 00 03 ff 80 00 
   00 7f f0 00 07 ff 00 00 
   00 3f fc 00 1f fe 00 00 
   00 1f ff 80 ff fc 00 00 
   00 07 ff ff ff f0 00 00 
   00 01 ff ff ff c0 00 00 
   00 00 3f ff fe 00 00 00 
   00 00 03 ff e0 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 7
0.916423 0 0.0429688 0 0.894531 0.453125 d1
q
q 0.84436 0 0 0.45144 0.0418 0 cm
<<
   /ImageType 1
   /Width 101
   /Height 54
   /ImageMatrix [101 0 0 -54 0 54]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 3f f0 00 1f f8 00 00 01 ff 80 00 00 
   ff ff f0 00 ff ff 80 00 0f ff f8 00 00 
   ff ff f0 03 ff ff e0 00 3f ff fe 00 00 
   ff ff f0 0f ff ff f0 00 ff ff ff 00 00 
   ff ff f0 3f 80 ff f8 03 f8 0f ff 80 00 
   ff ff f0 7e 00 7f fc 07 e0 07 ff c0 00 
   03 ff f0 f8 00 3f fe 0f 80 03 ff e0 00 
   00 ff f1 f0 00 1f fe 1f 00 01 ff e0 00 
   00 ff f3 e0 00 1f ff 3e 00 01 ff f0 00 
   00 ff f3 c0 00 1f ff 3c 00 01 ff f0 00 
   00 ff f7 80 00 1f ff 78 00 01 ff f0 00 
   00 ff f7 00 00 0f ff f0 00 00 ff f8 00 
   00 ff ff 00 00 0f ff f0 00 00 ff f8 00 
   00 ff fe 00 00 0f ff e0 00 00 ff f8 00 
   00 ff fe 00 00 0f ff e0 00 00 ff f8 00 
   00 ff fc 00 00 0f ff c0 00 00 ff f8 00 
   00 ff fc 00 00 0f ff c0 00 00 ff f8 00 
   00 ff fc 00 00 0f ff c0 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   00 ff f8 00 00 0f ff 80 00 00 ff f8 00 
   ff ff ff f8 0f ff ff ff 80 ff ff ff f8 
   ff ff ff f8 0f ff ff ff 80 ff ff ff f8 
   ff ff ff f8 0f ff ff ff 80 ff ff ff f8 
   ff ff ff f8 0f ff ff ff 80 ff ff ff f8 
   ff ff ff f8 0f ff ff ff 80 ff ff ff f8 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0.0234375 -0.0078125 0.894531 0.703125] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-3-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
Encoding 1 /g1 put
Encoding 2 /g2 put
/Glyphs [
    { % 0
0.507536 0 0.0429688 0 0.476562 0.609375 d1
q
q 0.42636 0 0 0.61028 0.0418 0 cm
<<
   /ImageType 1
   /Width 51
   /Height 73
   /ImageMatrix [51 0 0 -73 0 73]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   7f ff ff 00 00 00 00 
   ff ff ff 80 00 00 00 
   ff ff ff c0 00 00 00 
   ff ff ff c0 00 00 00 
   ff ff ff c0 00 00 00 
   ff ff ff 80 00 00 00 
   7f ff ff 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 00 00 
   00 fe 00 00 00 07 c0 
   00 fe 00 00 00 0f e0 
   00 fe 00 00 00 0f e0 
   00 fe 00 00 00 0f e0 
   00 fe 00 00 00 0f e0 
   00 fe 00 00 00 0f e0 
   00 fe 00 00 00 0f e0 
   00 fe 00 00 00 0f e0 
   00 fe 00 00 00 0f e0 
   00 fe 00 00 00 0f e0 
   00 fe 00 00 00 0f e0 
   00 fe 00 00 00 0f e0 
   7f ff ff ff ff ff e0 
   ff ff ff ff ff ff e0 
   ff ff ff ff ff ff e0 
   ff ff ff ff ff ff e0 
   ff ff ff ff ff ff e0 
   ff ff ff ff ff ff e0 
   7f ff ff ff ff ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 1
0.507536 0 0.015625 0 0.492188 0.609375 d1
q
q 0.46816 0 0 0.61028 0.01672 0 cm
<<
   /ImageType 1
   /Width 56
   /Height 73
   /ImageMatrix [56 0 0 -73 0 73]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   3f ff c0 00 03 ff fe 
   7f ff e0 00 07 ff ff 
   ff ff f0 00 0f ff ff 
   ff ff f0 00 0f ff ff 
   ff ff f0 00 0f ff ff 
   7f ff e0 00 07 ff ff 
   3f ff c0 00 03 ff fe 
   01 fe 00 00 00 7f 80 
   00 ff 00 00 00 7f 00 
   00 ff 00 00 00 ff 00 
   00 7f 00 00 00 ff 00 
   00 7f 80 00 01 fe 00 
   00 3f 80 00 01 fe 00 
   00 3f c0 00 03 fc 00 
   00 1f c0 00 03 fc 00 
   00 1f e0 00 07 f8 00 
   00 0f e0 00 07 f8 00 
   00 0f f0 00 07 f0 00 
   00 07 f0 00 0f f0 00 
   00 07 f8 00 0f e0 00 
   00 03 f8 00 1f e0 00 
   00 03 fc 00 1f c0 00 
   00 01 fc 00 3f c0 00 
   00 01 fe 00 3f 80 00 
   00 00 fe 00 7f 80 00 
   00 00 ff 00 7f 80 00 
   00 00 7f 00 7f 00 00 
   00 00 7f 80 ff 00 00 
   00 00 3f 80 fe 00 00 
   00 00 3f 81 fe 00 00 
   00 00 3f c1 fc 00 00 
   00 00 1f c3 fc 00 00 
   00 00 1f e3 f8 00 00 
   00 00 0f e3 f8 00 00 
   00 00 0f e7 f0 00 00 
   00 00 07 f7 f0 00 00 
   00 00 07 ff e0 00 00 
   00 00 03 ff e0 00 00 
   00 00 03 ff c0 00 00 
   00 00 01 ff c0 00 00 
   00 00 01 ff c0 00 00 
   00 00 00 ff 80 00 00 
   00 00 00 ff 80 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 00 7f 00 00 00 
   00 00 1f ff fc 00 00 
   00 00 3f ff fe 00 00 
   00 00 3f ff fe 00 00 
   00 00 3f ff fe 00 00 
   00 00 3f ff fe 00 00 
   00 00 3f ff fe 00 00 
   00 00 1f ff fc 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 2
0.507536 0 0.0234375 0 0.484375 0.609375 d1
q
q 0.45144 0 0 0.61028 0.02508 0 cm
<<
   /ImageType 1
   /Width 54
   /Height 73
   /ImageMatrix [54 0 0 -73 0 73]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   1f ff e0 00 ff ff 80 
   3f ff f0 01 ff ff c0 
   7f ff f8 01 ff ff e0 
   7f ff f8 01 ff ff e0 
   7f ff f8 01 ff ff e0 
   3f ff f0 01 ff ff c0 
   1f ff e0 00 ff ff 80 
   00 7f 80 00 0f e0 00 
   00 7f 80 00 1f e0 00 
   00 3f c0 00 1f c0 00 
   00 3f c0 00 3f c0 00 
   00 1f e0 00 3f 80 00 
   00 1f e0 00 7f 80 00 
   00 0f f0 00 7f 00 00 
   00 0f f0 00 ff 00 00 
   00 07 f8 00 fe 00 00 
   00 07 f8 01 fe 00 00 
   00 03 fc 01 fc 00 00 
   00 01 fc 03 fc 00 00 
   00 01 fe 03 f8 00 00 
   00 00 fe 07 f8 00 00 
   00 00 ff 07 f0 00 00 
   00 00 7f 0f f0 00 00 
   00 00 7f 8f e0 00 00 
   00 00 3f 9f e0 00 00 
   00 00 3f df c0 00 00 
   00 00 1f ff c0 00 00 
   00 00 1f ff 80 00 00 
   00 00 0f ff 80 00 00 
   00 00 0f ff 00 00 00 
   00 00 07 ff 00 00 00 
   00 00 07 fe 00 00 00 
   00 00 03 fe 00 00 00 
   00 00 01 fc 00 00 00 
   00 00 01 fc 00 00 00 
   00 00 03 fe 00 00 00 
   00 00 03 fe 00 00 00 
   00 00 07 ff 00 00 00 
   00 00 07 ff 00 00 00 
   00 00 0f ff 80 00 00 
   00 00 0f ff 80 00 00 
   00 00 1f ff c0 00 00 
   00 00 1f df c0 00 00 
   00 00 3f 9f e0 00 00 
   00 00 3f 8f e0 00 00 
   00 00 7f 07 f0 00 00 
   00 00 7f 07 f0 00 00 
   00 00 fe 03 f8 00 00 
   00 00 fe 03 f8 00 00 
   00 01 fe 01 fc 00 00 
   00 01 fc 01 fe 00 00 
   00 03 fc 00 fe 00 00 
   00 03 f8 00 ff 00 00 
   00 07 f8 00 7f 00 00 
   00 07 f0 00 7f 80 00 
   00 0f f0 00 3f 80 00 
   00 0f e0 00 3f c0 00 
   00 1f e0 00 1f c0 00 
   00 1f c0 00 1f e0 00 
   00 3f c0 00 0f e0 00 
   00 3f 80 00 0f f0 00 
   00 7f 80 00 07 f0 00 
   00 7f 00 00 07 f8 00 
   00 ff 00 00 03 f8 00 
   00 fe 00 00 03 fc 00 
   01 fe 00 00 01 fe 00 
   7f ff c0 00 0f ff f0 
   ff ff e0 00 1f ff f8 
   ff ff f0 00 3f ff fc 
   ff ff f0 00 3f ff fc 
   ff ff f0 00 3f ff fc 
   ff ff e0 00 1f ff f8 
   7f ff c0 00 0f ff f0 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0.015625 0 0.492188 0.609375] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-4-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
Encoding 1 /g1 put
Encoding 2 /g2 put
/Glyphs [
    { % 0
0.524824 0 0.0351562 0 0.492188 0.613281 d1
q
q 0.44548 0 0 0.61404 0.03612 0 cm
<<
   /ImageType 1
   /Width 37
   /Height 51
   /ImageMatrix [37 0 0 -51 0 51]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   7f ff e0 00 00 
   ff ff f0 00 00 
   ff ff f0 00 00 
   ff ff f0 00 00 
   7f ff e0 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 f0 
   03 f0 00 01 f8 
   03 f0 00 01 f8 
   03 f0 00 01 f8 
   03 f0 00 01 f8 
   03 f0 00 01 f8 
   03 f0 00 01 f8 
   03 f0 00 01 f8 
   03 f0 00 01 f8 
   7f ff ff ff f8 
   ff ff ff ff f8 
   ff ff ff ff f8 
   ff ff ff ff f8 
   7f ff ff ff f0 
   >}
>>
imagemask
Q
Q
    }
    { % 1
0.524824 0 0.0234375 0 0.503906 0.613281 d1
q
q 0.46956 0 0 0.61404 0.02408 0 cm
<<
   /ImageType 1
   /Width 39
   /Height 51
   /ImageMatrix [39 0 0 -51 0 51]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   7f fc 00 7f fc 
   ff fe 00 ff fe 
   ff fe 00 ff fe 
   ff fe 00 ff fe 
   7f fc 00 7f fc 
   07 f0 00 0f c0 
   07 f0 00 1f c0 
   03 f0 00 1f 80 
   03 f8 00 3f 80 
   01 f8 00 3f 80 
   01 fc 00 7f 00 
   00 fc 00 7f 00 
   00 fe 00 7e 00 
   00 7e 00 fe 00 
   00 7f 00 fc 00 
   00 3f 01 fc 00 
   00 3f 81 f8 00 
   00 1f 81 f8 00 
   00 1f 83 f0 00 
   00 0f c3 f0 00 
   00 0f c7 f0 00 
   00 07 e7 e0 00 
   00 07 e7 e0 00 
   00 03 e7 c0 00 
   00 03 ef c0 00 
   00 01 ff 80 00 
   00 01 ff 80 00 
   00 01 ff 00 00 
   00 00 ff 00 00 
   00 00 fe 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 00 7e 00 00 
   00 07 ff e0 00 
   00 0f ff f0 00 
   00 0f ff f0 00 
   00 0f ff f0 00 
   00 07 ff e0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 2
0.524824 0 0.0234375 0 0.503906 0.613281 d1
q
q 0.46956 0 0 0.61404 0.02408 0 cm
<<
   /ImageType 1
   /Width 39
   /Height 51
   /ImageMatrix [39 0 0 -51 0 51]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   3f ff 03 ff e0 
   7f ff 07 ff f0 
   7f ff 87 ff f0 
   7f ff 07 ff f0 
   3f ff 03 ff e0 
   01 f8 00 fe 00 
   01 fc 00 fe 00 
   00 fc 01 fc 00 
   00 fe 01 fc 00 
   00 7e 01 f8 00 
   00 7f 03 f8 00 
   00 3f 03 f0 00 
   00 3f 87 f0 00 
   00 1f 87 e0 00 
   00 1f cf e0 00 
   00 0f cf c0 00 
   00 0f ff c0 00 
   00 07 ff 80 00 
   00 07 ff 80 00 
   00 03 ff 00 00 
   00 03 ff 00 00 
   00 01 fe 00 00 
   00 01 fe 00 00 
   00 00 fc 00 00 
   00 00 fc 00 00 
   00 01 fe 00 00 
   00 01 fe 00 00 
   00 03 ff 00 00 
   00 03 ff 00 00 
   00 07 ff 80 00 
   00 07 ff c0 00 
   00 0f cf c0 00 
   00 0f cf e0 00 
   00 1f c7 e0 00 
   00 1f 87 f0 00 
   00 3f 83 f0 00 
   00 3f 03 f8 00 
   00 7f 01 f8 00 
   00 7e 01 fc 00 
   00 fe 00 fc 00 
   00 fc 00 fe 00 
   01 fc 00 7e 00 
   01 f8 00 7f 00 
   03 f8 00 3f 00 
   03 f0 00 3f 80 
   03 f0 00 1f 80 
   7f fe 00 ff fc 
   7f ff 01 ff fc 
   ff ff 01 ff fe 
   7f ff 01 ff fc 
   7f fe 00 ff fc 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0.0234375 0 0.503906 0.613281] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-5-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
Encoding 1 /g1 put
Encoding 2 /g2 put
Encoding 3 /g3 put
Encoding 4 /g4 put
Encoding 5 /g5 put
Encoding 6 /g6 put
Encoding 7 /g7 put
Encoding 8 /g8 put
Encoding 9 /g9 put
Encoding 10 /g10 put
Encoding 11 /g11 put
Encoding 12 /g12 put
Encoding 13 /g13 put
Encoding 14 /g14 put
Encoding 15 /g15 put
Encoding 16 /g16 put
Encoding 17 /g17 put
Encoding 18 /g18 put
Encoding 19 /g19 put
Encoding 20 /g20 put
Encoding 21 /g21 put
Encoding 22 /g22 put
Encoding 23 /g23 put
Encoding 24 /g24 put
Encoding 25 /g25 put
Encoding 26 /g26 put
Encoding 27 /g27 put
Encoding 28 /g28 put
Encoding 29 /g29 put
Encoding 30 /g30 put
Encoding 31 /g31 put
Encoding 32 /g32 put
Encoding 33 /g33 put
Encoding 34 /g34 put
Encoding 35 /g35 put
Encoding 36 /g36 put
Encoding 37 /g37 put
Encoding 38 /g38 put
Encoding 39 /g39 put
Encoding 40 /g40 put
Encoding 41 /g41 put
Encoding 42 /g42 put
Encoding 43 /g43 put
Encoding 44 /g44 put
Encoding 45 /g45 put
Encoding 46 /g46 put
Encoding 47 /g47 put
Encoding 48 /g48 put
/Glyphs [
    { % 0
0.388772 0 0.0976562 -0.242188 0.335938 0.746094 d1
q
q 0.22876 0 0 0.98728 0.09632 -0.2408 cm
<<
   /ImageType 1
   /Width 19
   /Height 82
   /ImageMatrix [19 0 0 -82 0 82]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 60 
   00 00 e0 
   00 01 c0 
   00 03 80 
   00 07 00 
   00 0e 00 
   00 1e 00 
   00 3c 00 
   00 78 00 
   00 78 00 
   00 f0 00 
   01 e0 00 
   01 e0 00 
   03 c0 00 
   03 c0 00 
   07 c0 00 
   07 80 00 
   0f 80 00 
   0f 00 00 
   0f 00 00 
   1f 00 00 
   1e 00 00 
   1e 00 00 
   3e 00 00 
   3e 00 00 
   3e 00 00 
   7c 00 00 
   7c 00 00 
   7c 00 00 
   7c 00 00 
   7c 00 00 
   7c 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   f8 00 00 
   7c 00 00 
   7c 00 00 
   7c 00 00 
   7c 00 00 
   7c 00 00 
   7c 00 00 
   3e 00 00 
   3e 00 00 
   3e 00 00 
   1e 00 00 
   1e 00 00 
   1f 00 00 
   0f 00 00 
   0f 00 00 
   0f 80 00 
   07 80 00 
   07 c0 00 
   03 c0 00 
   03 c0 00 
   01 e0 00 
   01 e0 00 
   00 f0 00 
   00 78 00 
   00 78 00 
   00 3c 00 
   00 1e 00 
   00 0e 00 
   00 07 00 
   00 03 80 
   00 01 c0 
   00 00 e0 
   00 00 60 
   >}
>>
imagemask
Q
Q
    }
    { % 1
0.555405 0 0.0234375 -0.191406 0.519531 0.445312 d1
q
q 0.4816 0 0 0.63812 0.02408 -0.19264 cm
<<
   /ImageType 1
   /Width 40
   /Height 53
   /ImageMatrix [40 0 0 -53 0 53]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   03 f0 1f e0 00 
   ff f0 7f f8 00 
   ff f1 e0 7e 00 
   ff f3 80 1f 80 
   07 f7 00 0f c0 
   03 fe 00 07 e0 
   03 fc 00 03 f0 
   03 f8 00 03 f8 
   03 f0 00 01 f8 
   03 f0 00 01 fc 
   03 f0 00 00 fc 
   03 f0 00 00 fe 
   03 f0 00 00 fe 
   03 f0 00 00 fe 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 fe 
   03 f0 00 00 fe 
   03 f0 00 00 fe 
   03 f0 00 01 fc 
   03 f0 00 01 fc 
   03 f8 00 03 f8 
   03 f8 00 03 f0 
   03 fc 00 07 f0 
   03 fe 00 0f e0 
   03 f6 00 0f c0 
   03 f7 80 3f 00 
   03 f1 e0 7e 00 
   03 f0 ff f8 00 
   03 f0 1f c0 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   07 f8 00 00 00 
   ff ff c0 00 00 
   ff ff c0 00 00 
   ff ff c0 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 2
0.391541 0 0.0234375 0 0.375 0.445312 d1
q
q 0.33712 0 0 0.44548 0.02408 0 cm
<<
   /ImageType 1
   /Width 28
   /Height 37
   /ImageMatrix [28 0 0 -37 0 37]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 e0 1f 00 
   ff e0 7f c0 
   ff e1 e3 e0 
   ff e3 87 f0 
   0f e7 07 f0 
   03 e6 07 f0 
   03 ee 07 f0 
   03 ec 03 e0 
   03 fc 00 80 
   03 f8 00 00 
   03 f8 00 00 
   03 f8 00 00 
   03 f8 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   03 f0 00 00 
   07 f8 00 00 
   ff ff f0 00 
   ff ff f0 00 
   ff ff f0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 3
0.499901 0 0.0234375 -0.0117188 0.480469 0.457031 d1
q
q 0.44548 0 0 0.46956 0.02408 -0.01204 cm
<<
   /ImageType 1
   /Width 37
   /Height 39
   /ImageMatrix [37 0 0 -39 0 39]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 03 fe 00 00 
   00 0f ff 80 00 
   00 3e 03 e0 00 
   00 f8 00 f8 00 
   01 f0 00 7c 00 
   03 e0 00 3e 00 
   07 c0 00 1f 00 
   0f 80 00 0f 80 
   1f 80 00 0f c0 
   1f 00 00 07 c0 
   3f 00 00 07 e0 
   3f 00 00 07 e0 
   7e 00 00 03 f0 
   7e 00 00 03 f0 
   7e 00 00 03 f0 
   7e 00 00 03 f0 
   fe 00 00 03 f8 
   fe 00 00 03 f8 
   fe 00 00 03 f8 
   fe 00 00 03 f8 
   fe 00 00 03 f8 
   fe 00 00 03 f8 
   fe 00 00 03 f8 
   fe 00 00 03 f8 
   fe 00 00 03 f8 
   7e 00 00 03 f0 
   7e 00 00 03 f0 
   7f 00 00 07 f0 
   3f 00 00 07 e0 
   3f 00 00 07 e0 
   1f 80 00 0f c0 
   0f 80 00 0f 80 
   0f c0 00 1f 80 
   07 e0 00 3f 00 
   03 f0 00 7e 00 
   00 f8 00 f8 00 
   00 7e 03 f0 00 
   00 1f ff c0 00 
   00 03 fe 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 4
0.555405 0 0.0234375 0 0.53125 0.445312 d1
q
q 0.49364 0 0 0.44548 0.02408 0 cm
<<
   /ImageType 1
   /Width 41
   /Height 37
   /ImageMatrix [41 0 0 -37 0 37]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   03 f0 0f f0 00 00 
   ff f0 3f fc 00 00 
   ff f0 f0 3f 00 00 
   ff f1 c0 1f 80 00 
   0f f3 80 0f c0 00 
   03 f7 00 0f c0 00 
   03 fe 00 0f c0 00 
   03 fc 00 07 e0 00 
   03 fc 00 07 e0 00 
   03 f8 00 07 e0 00 
   03 f8 00 07 e0 00 
   03 f8 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   07 f8 00 0f f0 00 
   ff ff c1 ff ff 80 
   ff ff c1 ff ff 80 
   ff ff c1 ff ff 80 
   >}
>>
imagemask
Q
Q
    }
    { % 5
0.555405 0 0.0234375 -0.0117188 0.53125 0.445312 d1
q
q 0.49364 0 0 0.45752 0.02408 -0.01204 cm
<<
   /ImageType 1
   /Width 41
   /Height 38
   /ImageMatrix [41 0 0 -38 0 38]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   03 f0 00 07 e0 00 
   ff f0 01 ff e0 00 
   ff f0 01 ff e0 00 
   ff f0 01 ff e0 00 
   0f f0 00 1f e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 0f e0 00 
   03 f0 00 0f e0 00 
   03 f0 00 0f e0 00 
   03 f0 00 1f e0 00 
   01 f0 00 1f e0 00 
   01 f8 00 3f e0 00 
   00 f8 00 77 f8 00 
   00 fc 00 e7 ff 80 
   00 3f 03 c7 ff 80 
   00 1f ff 87 ff 80 
   00 03 fc 07 e0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 6
0.444396 0 0.0351562 -0.0117188 0.421875 0.457031 d1
q
q 0.37324 0 0 0.46956 0.03612 -0.01204 cm
<<
   /ImageType 1
   /Width 31
   /Height 39
   /ImageMatrix [31 0 0 -39 0 39]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 03 fc 00 
   00 1f ff 80 
   00 7e 03 e0 
   01 f8 00 70 
   03 f0 00 f8 
   07 e0 01 fc 
   0f c0 03 fc 
   0f c0 03 fc 
   1f 80 03 fc 
   3f 80 03 fc 
   3f 00 01 f8 
   7f 00 00 f0 
   7f 00 00 00 
   7f 00 00 00 
   7e 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   7e 00 00 00 
   7f 00 00 00 
   7f 00 00 00 
   3f 00 00 06 
   3f 80 00 06 
   1f 80 00 0e 
   1f c0 00 0c 
   0f c0 00 1c 
   07 e0 00 38 
   03 f0 00 70 
   01 f8 00 e0 
   00 7c 07 c0 
   00 1f ff 00 
   00 07 f8 00 
   >}
>>
imagemask
Q
Q
    }
    { % 7
0.444396 0 0.0234375 -0.0117188 0.421875 0.457031 d1
q
q 0.38528 0 0 0.46956 0.02408 -0.01204 cm
<<
   /ImageType 1
   /Width 32
   /Height 39
   /ImageMatrix [32 0 0 -39 0 39]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 07 f8 00 
   00 1f ff 00 
   00 7c 0f c0 
   01 f8 03 e0 
   03 f0 01 f0 
   07 e0 01 f8 
   0f c0 00 f8 
   1f 80 00 7c 
   1f 80 00 7c 
   3f 00 00 7e 
   3f 00 00 3e 
   7f 00 00 3e 
   7f 00 00 3f 
   7e 00 00 3f 
   fe 00 00 3f 
   fe 00 00 3f 
   fe 00 00 3f 
   ff ff ff ff 
   ff ff ff ff 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   7e 00 00 00 
   7e 00 00 00 
   7f 00 00 00 
   7f 00 00 00 
   3f 00 00 03 
   3f 80 00 03 
   1f 80 00 07 
   0f c0 00 06 
   07 c0 00 0e 
   07 e0 00 1c 
   01 f0 00 38 
   00 f8 00 70 
   00 7e 03 e0 
   00 1f ff 80 
   00 03 fc 00 
   >}
>>
imagemask
Q
Q
    }
    { % 8
0.555405 0 0.0351562 -0.0117188 0.53125 0.699219 d1
q
q 0.4816 0 0 0.71036 0.03612 -0.01204 cm
<<
   /ImageType 1
   /Width 40
   /Height 59
   /ImageMatrix [40 0 0 -59 0 59]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 00 0f c0 
   00 00 03 ff c0 
   00 00 03 ff c0 
   00 00 03 ff c0 
   00 00 00 3f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 03 f8 0f c0 
   00 1f ff 0f c0 
   00 7e 07 8f c0 
   00 f8 01 ef c0 
   03 f0 00 7f c0 
   07 e0 00 3f c0 
   0f c0 00 1f c0 
   0f c0 00 1f c0 
   1f 80 00 0f c0 
   3f 80 00 0f c0 
   3f 00 00 0f c0 
   7f 00 00 0f c0 
   7f 00 00 0f c0 
   7e 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   7e 00 00 0f c0 
   7f 00 00 0f c0 
   7f 00 00 0f c0 
   3f 00 00 0f c0 
   3f 00 00 0f c0 
   1f 80 00 1f c0 
   1f 80 00 1f c0 
   0f c0 00 3f c0 
   07 e0 00 7f c0 
   03 f0 00 ef f0 
   01 f8 01 cf ff 
   00 7c 07 8f ff 
   00 1f fe 0f ff 
   00 07 f8 0f c0 
   >}
>>
imagemask
Q
Q
    }
    { % 9
0.277763 0 0.0859375 -0.253906 0.265625 0.746094 d1
q
q 0.16856 0 0 0.99932 0.08428 -0.25284 cm
<<
   /ImageType 1
   /Width 14
   /Height 83
   /ImageMatrix [14 0 0 -83 0 83]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff fc 
   ff fc 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   fc 00 
   ff fc 
   ff fc 
   >}
>>
imagemask
Q
Q
    }
    { % 10
0.277763 0 0.0234375 0 0.253906 0.699219 d1
q
q 0.21672 0 0 0.69832 0.02408 -0.000000000000000111 cm
<<
   /ImageType 1
   /Width 18
   /Height 58
   /ImageMatrix [18 0 0 -58 0 58]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   03 f0 00 
   ff f0 00 
   ff f0 00 
   ff f0 00 
   0f f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   07 f8 00 
   ff ff c0 
   ff ff c0 
   ff ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 11
0.527593 0 0.0234375 0 0.519531 0.699219 d1
q
q 0.4816 0 0 0.69832 0.02408 -0.000000000000000111 cm
<<
   /ImageType 1
   /Width 40
   /Height 58
   /ImageMatrix [40 0 0 -58 0 58]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   03 f0 00 00 00 
   ff f0 00 00 00 
   ff f0 00 00 00 
   ff f0 00 00 00 
   0f f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 01 ff fc 
   03 f0 01 ff fc 
   03 f0 01 ff fc 
   03 f0 00 7f c0 
   03 f0 00 7f 00 
   03 f0 00 7c 00 
   03 f0 00 70 00 
   03 f0 00 e0 00 
   03 f0 01 c0 00 
   03 f0 03 80 00 
   03 f0 07 00 00 
   03 f0 1e 00 00 
   03 f0 38 00 00 
   03 f0 78 00 00 
   03 f0 fc 00 00 
   03 f1 fc 00 00 
   03 f3 fe 00 00 
   03 f7 3f 00 00 
   03 fe 3f 80 00 
   03 f8 1f 80 00 
   03 f0 0f c0 00 
   03 f0 0f e0 00 
   03 f0 07 e0 00 
   03 f0 03 f0 00 
   03 f0 01 f8 00 
   03 f0 01 fc 00 
   03 f0 00 fc 00 
   03 f0 00 7e 00 
   03 f0 00 7f 00 
   03 f0 00 3f 00 
   03 f0 00 3f 80 
   03 f0 00 1f c0 
   07 f8 00 3f f0 
   ff ff c0 ff ff 
   ff ff c0 ff ff 
   ff ff c0 ff ff 
   >}
>>
imagemask
Q
Q
    }
    { % 12
0.39431 0 0.0351562 -0.0117188 0.363281 0.457031 d1
q
q 0.31304 0 0 0.46956 0.03612 -0.01204 cm
<<
   /ImageType 1
   /Width 26
   /Height 39
   /ImageMatrix [26 0 0 -39 0 39]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 ff 03 00 
   03 ff e7 00 
   0f 80 ff 00 
   1e 00 3f 00 
   3c 00 1f 00 
   78 00 0f 00 
   70 00 07 00 
   f0 00 07 00 
   f0 00 07 00 
   f0 00 03 00 
   f8 00 03 00 
   f8 00 03 00 
   fc 00 03 00 
   ff 00 00 00 
   7f e0 00 00 
   7f ff 00 00 
   3f ff e0 00 
   1f ff f8 00 
   0f ff fc 00 
   03 ff fe 00 
   00 ff ff 00 
   00 07 ff 80 
   00 00 7f 80 
   00 00 1f 80 
   c0 00 0f c0 
   c0 00 07 c0 
   c0 00 07 c0 
   e0 00 03 c0 
   e0 00 03 c0 
   e0 00 03 c0 
   f0 00 03 c0 
   f0 00 03 80 
   f8 00 07 80 
   fc 00 07 80 
   fc 00 0f 00 
   ff 00 1e 00 
   f3 c0 7c 00 
   e1 ff f0 00 
   c0 3f 80 00 
   >}
>>
imagemask
Q
Q
    }
    { % 13
0.277763 0 0.0117188 -0.253906 0.191406 0.746094 d1
q
q 0.16856 0 0 0.99932 0.01204 -0.25284 cm
<<
   /ImageType 1
   /Width 14
   /Height 83
   /ImageMatrix [14 0 0 -83 0 83]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff fc 
   ff fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   00 fc 
   ff fc 
   ff fc 
   >}
>>
imagemask
Q
Q
    }
    { % 14
0.388772 0 0.046875 -0.242188 0.289062 0.746094 d1
q
q 0.22876 0 0 0.98728 0.04816 -0.2408 cm
<<
   /ImageType 1
   /Width 19
   /Height 82
   /ImageMatrix [19 0 0 -82 0 82]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   c0 00 00 
   e0 00 00 
   70 00 00 
   38 00 00 
   1c 00 00 
   0e 00 00 
   0f 00 00 
   07 80 00 
   03 c0 00 
   03 c0 00 
   01 e0 00 
   00 f0 00 
   00 f0 00 
   00 78 00 
   00 78 00 
   00 7c 00 
   00 3c 00 
   00 3e 00 
   00 1e 00 
   00 1e 00 
   00 1f 00 
   00 0f 00 
   00 0f 00 
   00 0f 80 
   00 0f 80 
   00 0f 80 
   00 07 c0 
   00 07 c0 
   00 07 c0 
   00 07 c0 
   00 07 c0 
   00 07 c0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 03 e0 
   00 07 c0 
   00 07 c0 
   00 07 c0 
   00 07 c0 
   00 07 c0 
   00 07 c0 
   00 0f 80 
   00 0f 80 
   00 0f 80 
   00 0f 00 
   00 0f 00 
   00 1f 00 
   00 1e 00 
   00 1e 00 
   00 3e 00 
   00 3c 00 
   00 7c 00 
   00 78 00 
   00 78 00 
   00 f0 00 
   00 f0 00 
   01 e0 00 
   03 c0 00 
   03 c0 00 
   07 80 00 
   0f 00 00 
   0e 00 00 
   1c 00 00 
   38 00 00 
   70 00 00 
   e0 00 00 
   c0 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 15
0.277763 0 0.0234375 0 0.253906 0.675781 d1
q
q 0.21672 0 0 0.67424 0.02408 0 cm
<<
   /ImageType 1
   /Width 18
   /Height 56
   /ImageMatrix [18 0 0 -56 0 56]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   03 80 00 
   0f e0 00 
   1f f0 00 
   1f f0 00 
   1f f0 00 
   1f f0 00 
   1f f0 00 
   0f e0 00 
   03 80 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   03 f0 00 
   ff f0 00 
   ff f0 00 
   ff f0 00 
   07 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   07 f8 00 
   ff ff c0 
   ff ff c0 
   ff ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 16
0.499901 0 0.0351562 -0.0117188 0.503906 0.457031 d1
q
q 0.45752 0 0 0.46956 0.03612 -0.01204 cm
<<
   /ImageType 1
   /Width 38
   /Height 39
   /ImageMatrix [38 0 0 -39 0 39]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 1f e0 00 00 
   00 ff fc 00 00 
   03 e0 3f 00 00 
   07 00 0f 80 00 
   0f 80 07 e0 00 
   1f c0 03 f0 00 
   1f e0 03 f0 00 
   1f e0 01 f8 00 
   1f e0 01 f8 00 
   1f e0 00 fc 00 
   0f c0 00 fc 00 
   07 80 00 fc 00 
   00 00 00 fc 00 
   00 00 00 fc 00 
   00 00 00 fc 00 
   00 00 00 fc 00 
   00 00 7f fc 00 
   00 07 ff fc 00 
   00 3f e0 fc 00 
   00 fe 00 fc 00 
   03 f8 00 fc 00 
   0f f0 00 fc 00 
   1f c0 00 fc 00 
   3f c0 00 fc 00 
   7f 80 00 fc 00 
   7f 00 00 fc 00 
   7f 00 00 fc 0c 
   fe 00 00 fc 0c 
   fe 00 00 fc 0c 
   fe 00 00 fc 0c 
   fe 00 01 fc 0c 
   fe 00 01 fc 0c 
   ff 00 03 fc 0c 
   7f 00 07 7c 0c 
   7f 80 06 3e 18 
   3f c0 1e 3e 18 
   0f e0 78 1f f0 
   03 ff f0 0f e0 
   00 7f 80 07 c0 
   >}
>>
imagemask
Q
Q
    }
    { % 17
0.833168 0 0.0234375 0 0.804688 0.445312 d1
q
q 0.77056 0 0 0.44548 0.02408 0 cm
<<
   /ImageType 1
   /Width 64
   /Height 37
   /ImageMatrix [64 0 0 -37 0 37]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   03 f0 0f f0 00 1f e0 00 
   ff f0 3f fc 00 7f f8 00 
   ff f0 f0 3f 01 e0 7e 00 
   ff f1 c0 1f 83 80 3f 00 
   0f f3 80 0f c7 00 1f 80 
   03 f7 00 0f ce 00 1f 80 
   03 fe 00 0f dc 00 1f 80 
   03 fc 00 07 f8 00 0f c0 
   03 fc 00 07 f8 00 0f c0 
   03 f8 00 07 f0 00 0f c0 
   03 f8 00 07 f0 00 0f c0 
   03 f8 00 07 f0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   03 f0 00 07 e0 00 0f c0 
   07 f8 00 0f f0 00 1f e0 
   ff ff c1 ff ff 83 ff ff 
   ff ff c1 ff ff 83 ff ff 
   ff ff c1 ff ff 83 ff ff 
   >}
>>
imagemask
Q
Q
    }
    { % 18
0.388772 0 0.0117188 -0.0117188 0.335938 0.613281 d1
q
q 0.31304 0 0 0.62608 0.01204 -0.01204 cm
<<
   /ImageType 1
   /Width 26
   /Height 52
   /ImageMatrix [26 0 0 -52 0 52]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 18 00 00 
   00 18 00 00 
   00 18 00 00 
   00 18 00 00 
   00 18 00 00 
   00 38 00 00 
   00 38 00 00 
   00 38 00 00 
   00 78 00 00 
   00 78 00 00 
   00 78 00 00 
   00 f8 00 00 
   01 f8 00 00 
   03 f8 00 00 
   07 f8 00 00 
   1f ff ff 00 
   ff ff ff 00 
   ff ff ff 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 c0 
   01 f8 00 c0 
   01 f8 00 c0 
   01 f8 00 c0 
   01 f8 00 c0 
   01 f8 00 c0 
   01 f8 00 c0 
   01 f8 00 c0 
   01 f8 00 c0 
   00 fc 01 c0 
   00 fc 01 80 
   00 7c 03 80 
   00 7e 03 00 
   00 3f 07 00 
   00 0f fe 00 
   00 01 f8 00 
   >}
>>
imagemask
Q
Q
    }
    { % 19
0.555405 0 0.0234375 -0.0117188 0.519531 0.699219 d1
q
q 0.4816 0 0 0.71036 0.02408 -0.01204 cm
<<
   /ImageType 1
   /Width 40
   /Height 59
   /ImageMatrix [40 0 0 -59 0 59]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   03 f0 00 00 00 
   ff f0 00 00 00 
   ff f0 00 00 00 
   ff f0 00 00 00 
   0f f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 00 00 00 
   03 f0 1f e0 00 
   03 f0 7f f8 00 
   03 f1 e0 3e 00 
   03 f3 80 1f 80 
   03 f7 00 0f c0 
   03 fe 00 07 e0 
   03 fc 00 03 f0 
   03 f8 00 01 f8 
   03 f0 00 01 f8 
   03 f0 00 00 fc 
   03 f0 00 00 fc 
   03 f0 00 00 fe 
   03 f0 00 00 fe 
   03 f0 00 00 7e 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7f 
   03 f0 00 00 7e 
   03 f0 00 00 fe 
   03 f0 00 00 fe 
   03 f0 00 00 fc 
   03 f0 00 01 fc 
   03 f8 00 01 f8 
   03 f8 00 03 f0 
   03 fc 00 03 f0 
   03 ee 00 07 e0 
   03 c6 00 0f c0 
   03 c7 80 1f 00 
   03 81 e0 7e 00 
   03 00 ff f8 00 
   00 00 1f c0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 20
0.305455 0 0.0117188 0 0.363281 0.710938 d1
q
q 0.33712 0 0 0.71036 0.01204 0.000000000000000111 cm
<<
   /ImageType 1
   /Width 28
   /Height 59
   /ImageMatrix [28 0 0 -59 0 59]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 7e 00 
   00 03 ff 80 
   00 0f c1 e0 
   00 1f 87 e0 
   00 3f 0f f0 
   00 7e 0f f0 
   00 7e 0f f0 
   00 fc 0f f0 
   00 fc 0f f0 
   01 f8 03 c0 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   ff ff fc 00 
   ff ff fc 00 
   ff ff fc 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   01 f8 00 00 
   03 fc 00 00 
   7f ff f8 00 
   7f ff f8 00 
   7f ff f8 00 
   >}
>>
imagemask
Q
Q
    }
    { % 21
0.555405 0 0.0234375 0 0.53125 0.699219 d1
q
q 0.49364 0 0 0.69832 0.02408 -0.000000000000000111 cm
<<
   /ImageType 1
   /Width 41
   /Height 58
   /ImageMatrix [41 0 0 -58 0 58]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   03 f0 00 00 00 00 
   ff f0 00 00 00 00 
   ff f0 00 00 00 00 
   ff f0 00 00 00 00 
   0f f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 00 00 00 00 
   03 f0 0f f0 00 00 
   03 f0 3f fc 00 00 
   03 f0 f0 3f 00 00 
   03 f1 c0 1f 80 00 
   03 f3 80 0f c0 00 
   03 f7 00 0f c0 00 
   03 fe 00 0f c0 00 
   03 fc 00 07 e0 00 
   03 fc 00 07 e0 00 
   03 f8 00 07 e0 00 
   03 f8 00 07 e0 00 
   03 f8 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   03 f0 00 07 e0 00 
   07 f8 00 0f f0 00 
   ff ff c1 ff ff 80 
   ff ff c1 ff ff 80 
   ff ff c1 ff ff 80 
   >}
>>
imagemask
Q
Q
    }
    { % 22
0.624876 0 0.0351562 0 0.589844 0.6875 d1
q
q 0.5418 0 0 0.68628 0.03612 0 cm
<<
   /ImageType 1
   /Width 45
   /Height 57
   /ImageMatrix [45 0 0 -57 0 57]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff ff e0 00 00 
   ff ff ff e0 00 00 
   ff ff ff e0 00 00 
   01 ff c0 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 18 
   00 ff 00 00 00 18 
   00 ff 00 00 00 18 
   00 ff 00 00 00 18 
   00 ff 00 00 00 18 
   00 ff 00 00 00 38 
   00 ff 00 00 00 30 
   00 ff 00 00 00 30 
   00 ff 00 00 00 30 
   00 ff 00 00 00 70 
   00 ff 00 00 00 70 
   00 ff 00 00 00 70 
   00 ff 00 00 00 f0 
   00 ff 00 00 00 f0 
   00 ff 00 00 01 f0 
   00 ff 00 00 03 f0 
   00 ff 00 00 0f f0 
   00 ff 00 00 1f e0 
   01 ff 80 00 ff e0 
   ff ff ff ff ff e0 
   ff ff ff ff ff e0 
   ff ff ff ff ff e0 
   >}
>>
imagemask
Q
Q
    }
    { % 23
0.722039 0 0.0351562 0 0.6875 0.6875 d1
q
q 0.63812 0 0 0.68628 0.03612 0 cm
<<
   /ImageType 1
   /Width 53
   /Height 57
   /ImageMatrix [53 0 0 -57 0 57]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   3f ff ff ff ff ff e0 
   3f ff ff ff ff ff e0 
   3f ff ff ff ff ff e0 
   3f c0 03 ff 00 1f e0 
   3e 00 01 fe 00 03 e0 
   7c 00 01 fe 00 01 f0 
   78 00 01 fe 00 00 f0 
   70 00 01 fe 00 00 70 
   70 00 01 fe 00 00 70 
   70 00 01 fe 00 00 70 
   60 00 01 fe 00 00 30 
   60 00 01 fe 00 00 30 
   60 00 01 fe 00 00 30 
   60 00 01 fe 00 00 30 
   e0 00 01 fe 00 00 38 
   c0 00 01 fe 00 00 18 
   c0 00 01 fe 00 00 18 
   c0 00 01 fe 00 00 18 
   c0 00 01 fe 00 00 18 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 01 fe 00 00 00 
   00 00 07 ff 80 00 00 
   00 1f ff ff ff e0 00 
   00 1f ff ff ff e0 00 
   00 1f ff ff ff e0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 24
0.749851 0 0.0234375 0 0.722656 0.6875 d1
q
q 0.68628 0 0 0.68628 0.02408 0 cm
<<
   /ImageType 1
   /Width 57
   /Height 57
   /ImageMatrix [57 0 0 -57 0 57]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   7f ff ff 00 3f ff fc 00 
   7f ff ff 00 3f ff fc 00 
   7f ff ff 00 3f ff fc 00 
   00 ff f8 00 07 ff 80 00 
   00 7f e0 00 03 fc 00 00 
   00 3f e0 00 01 f0 00 00 
   00 1f f0 00 01 e0 00 00 
   00 1f f0 00 01 c0 00 00 
   00 0f f8 00 01 80 00 00 
   00 07 fc 00 03 80 00 00 
   00 07 fc 00 07 00 00 00 
   00 03 fe 00 06 00 00 00 
   00 03 fe 00 0e 00 00 00 
   00 01 ff 00 1c 00 00 00 
   00 00 ff 80 18 00 00 00 
   00 00 ff 80 38 00 00 00 
   00 00 7f c0 30 00 00 00 
   00 00 3f e0 60 00 00 00 
   00 00 3f e0 e0 00 00 00 
   00 00 1f f0 c0 00 00 00 
   00 00 0f f1 80 00 00 00 
   00 00 0f fb 80 00 00 00 
   00 00 07 ff 00 00 00 00 
   00 00 07 fe 00 00 00 00 
   00 00 03 fe 00 00 00 00 
   00 00 01 ff 00 00 00 00 
   00 00 01 ff 00 00 00 00 
   00 00 00 ff 80 00 00 00 
   00 00 00 7f c0 00 00 00 
   00 00 00 7f c0 00 00 00 
   00 00 00 ff e0 00 00 00 
   00 00 00 df e0 00 00 00 
   00 00 01 9f f0 00 00 00 
   00 00 03 8f f8 00 00 00 
   00 00 03 0f f8 00 00 00 
   00 00 06 07 fc 00 00 00 
   00 00 0e 03 fe 00 00 00 
   00 00 0c 03 fe 00 00 00 
   00 00 18 01 ff 00 00 00 
   00 00 38 00 ff 00 00 00 
   00 00 30 00 ff 80 00 00 
   00 00 60 00 7f c0 00 00 
   00 00 e0 00 7f c0 00 00 
   00 00 c0 00 3f e0 00 00 
   00 01 80 00 1f f0 00 00 
   00 03 80 00 1f f0 00 00 
   00 03 00 00 0f f8 00 00 
   00 06 00 00 07 fc 00 00 
   00 0e 00 00 07 fc 00 00 
   00 0c 00 00 03 fe 00 00 
   00 1c 00 00 01 fe 00 00 
   00 3c 00 00 01 ff 00 00 
   00 fe 00 00 01 ff 80 00 
   07 ff 80 00 07 ff e0 00 
   ff ff e0 00 3f ff ff 80 
   ff ff e0 00 3f ff ff 80 
   ff ff e0 00 3f ff ff 80 
   >}
>>
imagemask
Q
Q
    }
    { % 25
0.527593 0 0.0234375 -0.203125 0.503906 0.433594 d1
q
q 0.46956 0 0 0.63812 0.02408 -0.20468 cm
<<
   /ImageType 1
   /Width 39
   /Height 53
   /ImageMatrix [39 0 0 -53 0 53]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff 80 3f fe 
   ff ff 80 3f fe 
   ff ff 80 3f fe 
   0f f8 00 0f f0 
   07 f0 00 07 c0 
   03 f0 00 03 80 
   01 f8 00 03 80 
   01 f8 00 03 00 
   01 fc 00 03 00 
   00 fc 00 06 00 
   00 fc 00 06 00 
   00 7e 00 0c 00 
   00 7e 00 0c 00 
   00 7f 00 0c 00 
   00 3f 00 18 00 
   00 3f 00 18 00 
   00 1f 80 30 00 
   00 1f 80 30 00 
   00 1f c0 70 00 
   00 0f c0 60 00 
   00 0f c0 60 00 
   00 07 e0 c0 00 
   00 07 e0 c0 00 
   00 07 f1 c0 00 
   00 03 f1 80 00 
   00 03 f1 80 00 
   00 01 fb 00 00 
   00 01 fb 00 00 
   00 01 ff 00 00 
   00 00 fe 00 00 
   00 00 fe 00 00 
   00 00 7c 00 00 
   00 00 7c 00 00 
   00 00 7c 00 00 
   00 00 38 00 00 
   00 00 38 00 00 
   00 00 30 00 00 
   00 00 30 00 00 
   00 00 70 00 00 
   00 00 60 00 00 
   00 00 60 00 00 
   00 00 c0 00 00 
   00 00 c0 00 00 
   7c 01 c0 00 00 
   fe 01 80 00 00 
   fe 03 80 00 00 
   fe 03 00 00 00 
   fe 06 00 00 00 
   fc 0e 00 00 00 
   70 1c 00 00 00 
   38 38 00 00 00 
   1f f0 00 00 00 
   0f c0 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 26
0.277763 0 0.0859375 0 0.203125 0.109375 d1
q
q 0.10836 0 0 0.10836 0.08428 0.000000000000000014 cm
<<
   /ImageType 1
   /Width 9
   /Height 9
   /ImageMatrix [9 0 0 -9 0 9]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   1c 00 
   7f 00 
   ff 80 
   ff 80 
   ff 80 
   ff 80 
   ff 80 
   7f 00 
   1c 00 
   >}
>>
imagemask
Q
Q
    }
    { % 27
0.36108 0 0.0234375 0 0.347656 0.6875 d1
q
q 0.31304 0 0 0.68628 0.02408 0 cm
<<
   /ImageType 1
   /Width 26
   /Height 57
   /ImageMatrix [26 0 0 -57 0 57]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff ff c0 
   ff ff ff c0 
   ff ff ff c0 
   00 ff c0 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 7f 80 00 
   00 ff c0 00 
   ff ff ff c0 
   ff ff ff c0 
   ff ff ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 28
0.277763 0 0.0859375 0.398438 0.214844 0.699219 d1
q
q 0.1204 0 0 0.301 0.08428 0.39732 cm
<<
   /ImageType 1
   /Width 10
   /Height 25
   /ImageMatrix [10 0 0 -25 0 25]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   1c 00 
   7f 00 
   ff 80 
   ff 80 
   ff c0 
   ff c0 
   ff c0 
   7f c0 
   1c c0 
   00 c0 
   00 c0 
   00 c0 
   00 c0 
   01 c0 
   01 80 
   01 80 
   03 80 
   03 00 
   07 00 
   06 00 
   0e 00 
   1c 00 
   38 00 
   70 00 
   60 00 
   >}
>>
imagemask
Q
Q
    }
    { % 29
1.027494 0 0.0234375 -0.0234375 1 0.6875 d1
q
q 0.9632 0 0 0.71036 0.02408 -0.02408 cm
<<
   /ImageType 1
   /Width 80
   /Height 59
   /ImageMatrix [80 0 0 -59 0 59]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff fc 07 ff ff f0 01 ff ff 
   ff ff fc 07 ff ff f0 01 ff ff 
   ff ff fc 07 ff ff f0 01 ff ff 
   07 ff 80 00 1f fe 00 00 1f f8 
   03 fe 00 00 0f f8 00 00 07 e0 
   01 fe 00 00 07 f8 00 00 03 c0 
   01 fe 00 00 07 f8 00 00 03 80 
   01 ff 00 00 07 f8 00 00 03 80 
   00 ff 00 00 03 fc 00 00 03 00 
   00 ff 00 00 03 fc 00 00 03 00 
   00 ff 80 00 03 fc 00 00 07 00 
   00 7f 80 00 01 fe 00 00 06 00 
   00 7f 80 00 01 fe 00 00 06 00 
   00 7f c0 00 01 fe 00 00 06 00 
   00 3f c0 00 03 ff 00 00 0c 00 
   00 3f c0 00 03 ff 00 00 0c 00 
   00 3f e0 00 03 ff 00 00 0c 00 
   00 1f e0 00 07 ff 80 00 18 00 
   00 1f e0 00 06 7f 80 00 18 00 
   00 1f e0 00 06 7f 80 00 18 00 
   00 0f f0 00 0e 7f c0 00 30 00 
   00 0f f0 00 0c 3f c0 00 30 00 
   00 0f f0 00 0c 3f c0 00 30 00 
   00 07 f8 00 1c 3f e0 00 60 00 
   00 07 f8 00 18 1f e0 00 60 00 
   00 07 f8 00 18 1f e0 00 60 00 
   00 03 fc 00 18 1f f0 00 c0 00 
   00 03 fc 00 30 0f f0 00 c0 00 
   00 03 fc 00 30 0f f0 00 c0 00 
   00 01 fe 00 30 0f f8 01 80 00 
   00 01 fe 00 60 07 f8 01 80 00 
   00 01 fe 00 60 07 f8 01 80 00 
   00 00 ff 00 60 07 f8 03 00 00 
   00 00 ff 00 c0 03 fc 03 00 00 
   00 00 ff 00 c0 03 fc 03 00 00 
   00 00 ff 80 c0 03 fc 07 00 00 
   00 00 7f 81 80 01 fe 06 00 00 
   00 00 7f 81 80 01 fe 06 00 00 
   00 00 7f c1 80 01 fe 0e 00 00 
   00 00 3f c3 00 00 ff 0c 00 00 
   00 00 3f c3 00 00 ff 0c 00 00 
   00 00 3f e3 00 00 ff 1c 00 00 
   00 00 1f e6 00 00 7f 98 00 00 
   00 00 1f e6 00 00 7f 98 00 00 
   00 00 1f f6 00 00 7f 98 00 00 
   00 00 0f fc 00 00 3f f0 00 00 
   00 00 0f fc 00 00 3f f0 00 00 
   00 00 0f fc 00 00 3f f0 00 00 
   00 00 07 fc 00 00 3f e0 00 00 
   00 00 07 f8 00 00 1f e0 00 00 
   00 00 07 f8 00 00 1f e0 00 00 
   00 00 03 f8 00 00 1f c0 00 00 
   00 00 03 f0 00 00 0f c0 00 00 
   00 00 03 f0 00 00 0f c0 00 00 
   00 00 01 f0 00 00 0f 80 00 00 
   00 00 01 e0 00 00 07 80 00 00 
   00 00 01 e0 00 00 07 80 00 00 
   00 00 00 e0 00 00 07 00 00 00 
   00 00 00 c0 00 00 03 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 30
0.749851 0 0.0117188 0 0.734375 0.6875 d1
q
q 0.71036 0 0 0.68628 0.01204 0 cm
<<
   /ImageType 1
   /Width 59
   /Height 57
   /ImageMatrix [59 0 0 -57 0 57]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff fe 00 00 3f ff e0 
   ff ff fe 00 00 3f ff e0 
   ff ff fe 00 00 3f ff e0 
   03 ff e0 00 00 07 fe 00 
   00 ff c0 00 00 03 f0 00 
   00 7f c0 00 00 01 e0 00 
   00 7f c0 00 00 01 c0 00 
   00 3f e0 00 00 01 80 00 
   00 1f f0 00 00 03 80 00 
   00 1f f0 00 00 03 00 00 
   00 0f f8 00 00 06 00 00 
   00 0f f8 00 00 06 00 00 
   00 07 fc 00 00 0c 00 00 
   00 03 fe 00 00 1c 00 00 
   00 03 fe 00 00 18 00 00 
   00 01 ff 00 00 38 00 00 
   00 01 ff 00 00 30 00 00 
   00 00 ff 80 00 60 00 00 
   00 00 7f c0 00 e0 00 00 
   00 00 7f c0 00 c0 00 00 
   00 00 3f e0 01 c0 00 00 
   00 00 3f e0 01 80 00 00 
   00 00 1f f0 03 80 00 00 
   00 00 0f f8 03 00 00 00 
   00 00 0f f8 06 00 00 00 
   00 00 07 fc 0e 00 00 00 
   00 00 07 fc 0c 00 00 00 
   00 00 03 fe 1c 00 00 00 
   00 00 01 ff 18 00 00 00 
   00 00 01 ff 30 00 00 00 
   00 00 00 ff b0 00 00 00 
   00 00 00 ff e0 00 00 00 
   00 00 00 7f e0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 3f c0 00 00 00 
   00 00 00 7f e0 00 00 00 
   00 00 3f ff ff c0 00 00 
   00 00 3f ff ff c0 00 00 
   00 00 3f ff ff c0 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 31
0.555405 0 0.046875 -0.0234375 0.503906 0.710938 d1
q
q 0.44548 0 0 0.73444 0.04816 -0.02408 cm
<<
   /ImageType 1
   /Width 37
   /Height 61
   /ImageMatrix [37 0 0 -61 0 61]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 0f f8 00 c0 
   00 3f fe 01 c0 
   00 ff ff 81 c0 
   03 f8 07 e3 c0 
   07 e0 00 f7 c0 
   0f c0 00 7f c0 
   1f 80 00 3f c0 
   3f 00 00 1f c0 
   3e 00 00 0f c0 
   7e 00 00 07 c0 
   7e 00 00 07 c0 
   7c 00 00 03 c0 
   fc 00 00 03 c0 
   fc 00 00 01 c0 
   fc 00 00 01 c0 
   fc 00 00 01 c0 
   fe 00 00 00 c0 
   fe 00 00 00 c0 
   fe 00 00 00 c0 
   ff 00 00 00 c0 
   ff 80 00 00 00 
   7f c0 00 00 00 
   7f e0 00 00 00 
   7f f8 00 00 00 
   3f ff 80 00 00 
   1f ff f8 00 00 
   1f ff ff 80 00 
   0f ff ff e0 00 
   07 ff ff f8 00 
   03 ff ff fe 00 
   00 ff ff ff 00 
   00 3f ff ff 80 
   00 07 ff ff c0 
   00 00 7f ff c0 
   00 00 07 ff e0 
   00 00 00 7f e0 
   00 00 00 3f f0 
   00 00 00 1f f0 
   00 00 00 0f f0 
   00 00 00 07 f8 
   00 00 00 07 f8 
   c0 00 00 03 f8 
   c0 00 00 03 f8 
   c0 00 00 01 f8 
   c0 00 00 01 f8 
   c0 00 00 01 f8 
   e0 00 00 01 f8 
   e0 00 00 01 f8 
   e0 00 00 01 f0 
   f0 00 00 01 f0 
   f0 00 00 03 f0 
   f8 00 00 03 e0 
   fc 00 00 07 e0 
   fe 00 00 07 c0 
   ff 00 00 0f c0 
   ff 80 00 1f 80 
   fb f0 00 3f 00 
   f0 fe 00 fe 00 
   e0 3f ff f8 00 
   e0 0f ff e0 00 
   c0 01 ff 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 32
0.784526 0 0.046875 -0.0234375 0.734375 0.710938 d1
q
q 0.67424 0 0 0.73444 0.04816 -0.02408 cm
<<
   /ImageType 1
   /Width 56
   /Height 61
   /ImageMatrix [56 0 0 -61 0 61]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 00 ff 80 00 c0 
   00 00 0f ff f0 01 c0 
   00 00 3f ff fc 01 c0 
   00 00 ff 80 3f 03 c0 
   00 03 fc 00 07 87 c0 
   00 0f f0 00 03 cf c0 
   00 1f e0 00 00 ef c0 
   00 3f c0 00 00 7f c0 
   00 7f 80 00 00 3f c0 
   00 ff 00 00 00 1f c0 
   01 fe 00 00 00 1f c0 
   03 fc 00 00 00 0f c0 
   07 f8 00 00 00 07 c0 
   07 f8 00 00 00 07 c0 
   0f f0 00 00 00 03 c0 
   0f f0 00 00 00 03 c0 
   1f e0 00 00 00 03 c0 
   1f e0 00 00 00 01 c0 
   3f e0 00 00 00 01 c0 
   3f c0 00 00 00 01 c0 
   7f c0 00 00 00 00 c0 
   7f c0 00 00 00 00 c0 
   7f c0 00 00 00 00 c0 
   7f c0 00 00 00 00 c0 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 00 00 00 
   ff 80 00 00 ff ff ff 
   ff 80 00 00 ff ff ff 
   7f c0 00 00 ff ff ff 
   7f c0 00 00 00 7f e0 
   7f c0 00 00 00 3f c0 
   7f c0 00 00 00 3f c0 
   3f c0 00 00 00 3f c0 
   3f e0 00 00 00 3f c0 
   1f e0 00 00 00 3f c0 
   1f e0 00 00 00 3f c0 
   0f f0 00 00 00 3f c0 
   0f f0 00 00 00 3f c0 
   07 f8 00 00 00 3f c0 
   07 f8 00 00 00 3f c0 
   03 fc 00 00 00 3f c0 
   01 fe 00 00 00 3f c0 
   00 ff 00 00 00 7f c0 
   00 7f 80 00 00 7f c0 
   00 3f c0 00 00 ff c0 
   00 1f e0 00 00 ef c0 
   00 0f f8 00 03 c7 c0 
   00 03 fe 00 07 83 c0 
   00 00 ff c0 3f 01 c0 
   00 00 3f ff fc 00 c0 
   00 00 0f ff f0 00 00 
   00 00 00 ff 80 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 33
0.277763 0 0.0859375 -0.191406 0.214844 0.109375 d1
q
q 0.1204 0 0 0.301 0.08428 -0.19264 cm
<<
   /ImageType 1
   /Width 10
   /Height 25
   /ImageMatrix [10 0 0 -25 0 25]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   1c 00 
   7f 00 
   ff 80 
   ff 80 
   ff c0 
   ff c0 
   ff c0 
   7f c0 
   1c c0 
   00 c0 
   00 c0 
   00 c0 
   00 c0 
   01 c0 
   01 80 
   01 80 
   03 80 
   03 00 
   07 00 
   06 00 
   0e 00 
   1c 00 
   38 00 
   70 00 
   60 00 
   >}
>>
imagemask
Q
Q
    }
    { % 34
0.777543 0 0.0351562 -0.0234375 0.734375 0.722656 d1
q
q 0.68628 0 0 0.74648 0.03612 -0.02408 cm
<<
   /ImageType 1
   /Width 57
   /Height 62
   /ImageMatrix [57 0 0 -62 0 62]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 1f 00 00 00 00 00 
   00 00 7f c0 00 00 00 00 
   00 01 f0 e0 00 00 00 00 
   00 03 c0 60 00 00 00 00 
   00 07 c0 70 00 00 00 00 
   00 0f 80 30 00 00 00 00 
   00 1f 00 38 00 00 00 00 
   00 1f 00 18 00 00 00 00 
   00 1f 00 18 00 00 00 00 
   00 3f 00 18 00 00 00 00 
   00 3f 00 18 00 00 00 00 
   00 3e 00 18 00 00 00 00 
   00 3f 00 18 00 00 00 00 
   00 3f 00 38 00 00 00 00 
   00 3f 00 30 00 00 00 00 
   00 3f 00 30 00 00 00 00 
   00 3f 00 70 00 00 00 00 
   00 3f 00 e0 00 00 00 00 
   00 3f 00 c0 00 00 00 00 
   00 3f 01 c0 00 00 00 00 
   00 1f 83 80 00 00 00 00 
   00 1f 83 00 00 00 00 00 
   00 1f 87 00 00 00 00 00 
   00 1f 8e 00 00 00 00 00 
   00 1f dc 00 01 ff ff 80 
   00 0f f8 00 01 ff ff 80 
   00 0f f0 00 01 ff ff 80 
   00 0f e0 00 00 3f f8 00 
   00 07 e0 00 00 0f c0 00 
   00 07 f0 00 00 0f 80 00 
   00 07 f0 00 00 07 00 00 
   00 07 f8 00 00 0e 00 00 
   00 0f f8 00 00 0c 00 00 
   00 1d fc 00 00 1c 00 00 
   00 39 fc 00 00 18 00 00 
   00 70 fe 00 00 38 00 00 
   00 e0 fe 00 00 30 00 00 
   01 c0 7f 00 00 70 00 00 
   03 80 7f 00 00 e0 00 00 
   07 80 3f 80 00 c0 00 00 
   0f 00 3f c0 01 c0 00 00 
   1f 00 1f c0 01 80 00 00 
   3f 00 0f e0 03 80 00 00 
   3e 00 0f f0 07 00 00 00 
   7e 00 07 f8 06 00 00 00 
   7e 00 03 f8 0e 00 00 00 
   fe 00 03 fc 1c 00 00 00 
   fe 00 01 fe 38 00 00 00 
   fe 00 00 fe 38 00 00 00 
   fe 00 00 7f 70 00 00 00 
   ff 00 00 7f e0 00 03 00 
   ff 00 00 3f c0 00 03 00 
   ff 00 00 1f e0 00 03 00 
   7f 80 00 0f f0 00 07 00 
   7f 80 00 0f f8 00 06 00 
   3f c0 00 1f fc 00 0e 00 
   3f e0 00 79 fe 00 1c 00 
   1f f0 01 f0 7f 00 3c 00 
   07 f8 0f e0 3f c0 f8 00 
   03 ff ff 80 0f ff f0 00 
   00 ff fe 00 03 ff c0 00 
   00 1f f0 00 00 7f 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 35
0.652568 0 0.0351562 0 0.613281 0.6875 d1
q
q 0.56588 0 0 0.68628 0.03612 0 cm
<<
   /ImageType 1
   /Width 47
   /Height 57
   /ImageMatrix [47 0 0 -57 0 57]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff ff ff ff f8 
   ff ff ff ff ff f8 
   ff ff ff ff ff f8 
   01 ff 80 00 1f f8 
   00 ff 00 00 01 f8 
   00 ff 00 00 00 fc 
   00 ff 00 00 00 7c 
   00 ff 00 00 00 3c 
   00 ff 00 00 00 1c 
   00 ff 00 00 00 1c 
   00 ff 00 00 00 0c 
   00 ff 00 00 00 0c 
   00 ff 00 00 00 0c 
   00 ff 00 00 00 0c 
   00 ff 00 00 00 0e 
   00 ff 00 00 00 06 
   00 ff 00 00 00 06 
   00 ff 00 01 80 06 
   00 ff 00 01 80 06 
   00 ff 00 01 80 00 
   00 ff 00 01 80 00 
   00 ff 00 01 80 00 
   00 ff 00 01 80 00 
   00 ff 00 03 80 00 
   00 ff 00 03 80 00 
   00 ff 00 07 80 00 
   00 ff 00 1f 80 00 
   00 ff ff ff 80 00 
   00 ff ff ff 80 00 
   00 ff ff ff 80 00 
   00 ff 00 1f 80 00 
   00 ff 00 07 80 00 
   00 ff 00 03 80 00 
   00 ff 00 03 80 00 
   00 ff 00 01 80 00 
   00 ff 00 01 80 00 
   00 ff 00 01 80 00 
   00 ff 00 01 80 00 
   00 ff 00 01 80 00 
   00 ff 00 01 80 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   00 ff 00 00 00 00 
   01 ff c0 00 00 00 
   ff ff ff c0 00 00 
   ff ff ff c0 00 00 
   ff ff ff c0 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 36
0.527593 0 0.0117188 0 0.519531 0.433594 d1
q
q 0.49364 0 0 0.43344 0.01204 0.000000000000000056 cm
<<
   /ImageType 1
   /Width 41
   /Height 36
   /ImageMatrix [41 0 0 -36 0 36]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff 80 7f ff 00 
   ff ff 80 7f ff 00 
   ff ff 80 7f ff 00 
   03 fe 00 3f f0 00 
   01 fe 00 1f 80 00 
   00 fe 00 1f 00 00 
   00 7e 00 1c 00 00 
   00 3f 00 18 00 00 
   00 1f 80 30 00 00 
   00 1f c0 70 00 00 
   00 0f c0 e0 00 00 
   00 07 e0 c0 00 00 
   00 07 f1 80 00 00 
   00 03 fb 80 00 00 
   00 01 ff 00 00 00 
   00 00 fe 00 00 00 
   00 00 fe 00 00 00 
   00 00 7f 00 00 00 
   00 00 3f 00 00 00 
   00 00 7f 80 00 00 
   00 00 7f c0 00 00 
   00 00 cf c0 00 00 
   00 01 c7 e0 00 00 
   00 03 83 f0 00 00 
   00 07 03 f8 00 00 
   00 06 01 f8 00 00 
   00 0c 00 fc 00 00 
   00 1c 00 7e 00 00 
   00 38 00 7f 00 00 
   00 78 00 3f 00 00 
   00 f0 00 1f 80 00 
   01 f8 00 1f c0 00 
   0f f8 00 3f f0 00 
   ff fe 00 ff ff 80 
   ff fe 00 ff ff 80 
   ff fe 00 ff ff 80 
   >}
>>
imagemask
Q
Q
    }
    { % 37
0.499901 0 0.0234375 -0.214844 0.492188 0.457031 d1
q
q 0.45752 0 0 0.67424 0.02408 -0.21672 cm
<<
   /ImageType 1
   /Width 38
   /Height 56
   /ImageMatrix [38 0 0 -56 0 56]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 00 03 f0 
   00 0f f0 0f f8 
   00 3f fc 3c 3c 
   00 f8 1f 70 7c 
   01 f0 0f e0 7c 
   03 e0 07 c0 7c 
   07 c0 03 e0 10 
   0f c0 03 f0 00 
   0f c0 03 f0 00 
   1f 80 01 f8 00 
   1f 80 01 f8 00 
   1f 80 01 f8 00 
   1f 80 01 f8 00 
   1f 80 01 f8 00 
   1f 80 01 f8 00 
   1f 80 01 f8 00 
   1f 80 01 f8 00 
   0f c0 03 f0 00 
   0f c0 03 f0 00 
   07 c0 03 e0 00 
   03 e0 07 c0 00 
   03 f0 0f 80 00 
   03 f8 1f 00 00 
   07 3f fc 00 00 
   06 0f f0 00 00 
   0e 00 00 00 00 
   0e 00 00 00 00 
   0e 00 00 00 00 
   0e 00 00 00 00 
   0f 00 00 00 00 
   0f 00 00 00 00 
   0f c0 00 00 00 
   07 ff ff c0 00 
   07 ff ff f8 00 
   03 ff ff fe 00 
   01 ff ff ff 80 
   03 ff ff ff c0 
   0f 80 00 7f e0 
   1f 00 00 0f f0 
   3e 00 00 03 f0 
   7c 00 00 01 f0 
   7c 00 00 01 f8 
   f8 00 00 00 f8 
   f8 00 00 00 f8 
   f8 00 00 00 f8 
   f8 00 00 00 f8 
   f8 00 00 00 f8 
   fc 00 00 01 f8 
   7c 00 00 01 f0 
   3e 00 00 03 e0 
   3f 00 00 07 e0 
   0f 80 00 0f 80 
   07 e0 00 3f 00 
   01 fc 01 fc 00 
   00 7f ff f0 00 
   00 07 ff 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 38
0.277763 0 0.0859375 0 0.203125 0.433594 d1
q
q 0.10836 0 0 0.43344 0.08428 0.000000000000000056 cm
<<
   /ImageType 1
   /Width 9
   /Height 36
   /ImageMatrix [9 0 0 -36 0 36]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   1c 00 
   7f 00 
   ff 80 
   ff 80 
   ff 80 
   ff 80 
   ff 80 
   7f 00 
   1c 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   1c 00 
   7f 00 
   ff 80 
   ff 80 
   ff 80 
   ff 80 
   ff 80 
   7f 00 
   1c 00 
   >}
>>
imagemask
Q
Q
    }
    { % 39
0.499901 0 0.0859375 0 0.433594 0.664062 d1
q
q 0.33712 0 0 0.6622 0.08428 0 cm
<<
   /ImageType 1
   /Width 28
   /Height 55
   /ImageMatrix [28 0 0 -55 0 55]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 01 c0 00 
   00 03 c0 00 
   00 07 c0 00 
   00 1f c0 00 
   00 ff c0 00 
   ff ff c0 00 
   ff ff c0 00 
   ff 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 1f c0 00 
   00 3f e0 00 
   7f ff ff f0 
   7f ff ff f0 
   7f ff ff f0 
   >}
>>
imagemask
Q
Q
    }
    { % 40
0.527593 0 0.0351562 -0.191406 0.53125 0.445312 d1
q
q 0.4816 0 0 0.63812 0.03612 -0.19264 cm
<<
   /ImageType 1
   /Width 40
   /Height 53
   /ImageMatrix [40 0 0 -53 0 53]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 03 f8 00 c0 
   00 1f fe 01 c0 
   00 7e 07 81 c0 
   00 fc 01 c3 c0 
   03 f0 00 e3 c0 
   07 f0 00 77 c0 
   0f e0 00 37 c0 
   0f c0 00 3f c0 
   1f c0 00 1f c0 
   3f 80 00 1f c0 
   3f 80 00 0f c0 
   7f 00 00 0f c0 
   7f 00 00 0f c0 
   7f 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   fe 00 00 0f c0 
   7f 00 00 0f c0 
   7f 00 00 0f c0 
   7f 00 00 0f c0 
   3f 00 00 0f c0 
   3f 80 00 1f c0 
   1f 80 00 1f c0 
   1f c0 00 3f c0 
   0f c0 00 3f c0 
   07 e0 00 7f c0 
   03 f0 00 ef c0 
   01 f8 01 cf c0 
   00 7e 07 8f c0 
   00 1f fe 0f c0 
   00 07 f8 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 0f c0 
   00 00 00 1f e0 
   00 00 03 ff ff 
   00 00 03 ff ff 
   00 00 03 ff ff 
   >}
>>
imagemask
Q
Q
    }
    { % 41
0.499901 0 0.046875 0 0.457031 0.664062 d1
q
q 0.39732 0 0 0.6622 0.04816 0 cm
<<
   /ImageType 1
   /Width 33
   /Height 55
   /ImageMatrix [33 0 0 -55 0 55]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 0f f0 00 00 
   00 7f fe 00 00 
   01 ff ff 80 00 
   03 e0 3f e0 00 
   0f 00 0f f0 00 
   1e 00 07 f8 00 
   1c 00 03 fc 00 
   38 00 01 fe 00 
   70 00 01 fe 00 
   70 00 00 ff 00 
   60 00 00 ff 00 
   fe 00 00 ff 00 
   ff 00 00 7f 80 
   ff 80 00 7f 80 
   ff 80 00 7f 80 
   ff 80 00 7f 80 
   ff 80 00 7f 80 
   ff 80 00 7f 80 
   7f 00 00 7f 80 
   1c 00 00 7f 80 
   00 00 00 7f 80 
   00 00 00 ff 00 
   00 00 00 ff 00 
   00 00 00 fe 00 
   00 00 01 fe 00 
   00 00 01 fc 00 
   00 00 03 fc 00 
   00 00 03 f8 00 
   00 00 07 f0 00 
   00 00 0f e0 00 
   00 00 0f c0 00 
   00 00 1f 80 00 
   00 00 3f 00 00 
   00 00 7e 00 00 
   00 00 fc 00 00 
   00 01 f8 00 00 
   00 01 e0 00 00 
   00 03 c0 00 00 
   00 07 80 00 00 
   00 0f 00 00 00 
   00 1e 00 01 80 
   00 3c 00 01 80 
   00 78 00 01 80 
   00 f0 00 03 80 
   01 e0 00 03 00 
   03 c0 00 03 00 
   07 80 00 03 00 
   07 00 00 07 00 
   0f ff ff ff 00 
   1f ff ff ff 00 
   3f ff ff ff 00 
   7f ff ff fe 00 
   ff ff ff fe 00 
   ff ff ff fe 00 
   ff ff ff fe 00 
   >}
>>
imagemask
Q
Q
    }
    { % 42
0.777543 0 0.0585938 -0.0234375 0.722656 0.710938 d1
q
q 0.65016 0 0 0.73444 0.0602 -0.02408 cm
<<
   /ImageType 1
   /Width 54
   /Height 61
   /ImageMatrix [54 0 0 -61 0 61]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 03 ff 00 00 00 
   00 00 1f ff e0 00 00 
   00 00 fe 01 fc 00 00 
   00 01 f8 00 7e 00 00 
   00 07 e0 00 1f 80 00 
   00 0f c0 00 0f c0 00 
   00 3f 80 00 07 f0 00 
   00 7f 00 00 03 f8 00 
   00 fe 00 00 01 fc 00 
   01 fc 00 00 00 fe 00 
   01 f8 00 00 00 7e 00 
   03 f8 00 00 00 7f 00 
   07 f0 00 00 00 3f 80 
   07 f0 00 00 00 3f 80 
   0f e0 00 00 00 1f c0 
   0f e0 00 00 00 1f c0 
   1f e0 00 00 00 1f e0 
   1f c0 00 00 00 0f e0 
   3f c0 00 00 00 0f f0 
   3f c0 00 00 00 0f f0 
   3f c0 00 00 00 0f f0 
   7f c0 00 00 00 0f f8 
   7f 80 00 00 00 07 f8 
   7f 80 00 00 00 07 f8 
   7f 80 00 00 00 07 f8 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   ff 80 00 00 00 07 fc 
   7f 80 00 00 00 07 f8 
   7f c0 00 00 00 0f f8 
   7f c0 00 00 00 0f f8 
   7f c0 00 00 00 0f f8 
   3f c0 00 00 00 0f f0 
   3f c0 00 00 00 0f f0 
   1f e0 00 00 00 1f e0 
   1f e0 00 00 00 1f e0 
   1f e0 00 00 00 1f e0 
   0f f0 00 00 00 3f c0 
   07 f0 00 00 00 3f 80 
   07 f8 00 00 00 7f 80 
   03 f8 00 00 00 7f 00 
   01 fc 00 00 00 fe 00 
   01 fc 00 00 00 fe 00 
   00 fe 00 00 01 fc 00 
   00 7f 00 00 03 f8 00 
   00 3f 80 00 07 f0 00 
   00 1f c0 00 0f e0 00 
   00 07 e0 00 1f 80 00 
   00 03 f8 00 7f 00 00 
   00 00 fe 01 fc 00 00 
   00 00 1f ff e0 00 00 
   00 00 03 ff 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 43
0.499901 0 0.0351562 -0.0234375 0.46875 0.664062 d1
q
q 0.4214 0 0 0.68628 0.03612 -0.02408 cm
<<
   /ImageType 1
   /Width 35
   /Height 57
   /ImageMatrix [35 0 0 -57 0 57]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 07 f8 00 00 
   00 3f ff 00 00 
   00 ff ff c0 00 
   01 f8 0f f0 00 
   03 c0 07 f8 00 
   07 80 03 fc 00 
   0e 00 01 fe 00 
   0f 80 01 fe 00 
   1f e0 00 ff 00 
   1f f0 00 ff 00 
   1f f0 00 ff 00 
   1f f0 00 ff 00 
   1f f0 00 ff 00 
   1f f0 00 ff 00 
   0f e0 00 ff 00 
   07 c0 00 ff 00 
   00 00 01 fe 00 
   00 00 01 fe 00 
   00 00 01 fc 00 
   00 00 03 fc 00 
   00 00 03 f8 00 
   00 00 07 f0 00 
   00 00 07 e0 00 
   00 00 0f 80 00 
   00 00 7f 00 00 
   00 1f fc 00 00 
   00 1f ff 80 00 
   00 00 0f e0 00 
   00 00 07 f0 00 
   00 00 01 fc 00 
   00 00 01 fe 00 
   00 00 00 ff 00 
   00 00 00 7f 80 
   00 00 00 7f 80 
   00 00 00 7f c0 
   00 00 00 7f c0 
   00 00 00 3f c0 
   00 00 00 3f e0 
   00 00 00 3f e0 
   1e 00 00 3f e0 
   7f 80 00 3f e0 
   7f 80 00 3f e0 
   ff c0 00 3f e0 
   ff c0 00 3f e0 
   ff c0 00 3f e0 
   ff c0 00 3f c0 
   ff c0 00 7f c0 
   ff 80 00 7f 80 
   7e 00 00 7f 80 
   70 00 00 ff 00 
   38 00 01 fe 00 
   1e 00 01 fe 00 
   0f 80 03 f8 00 
   07 f0 0f f0 00 
   01 ff ff c0 00 
   00 7f ff 00 00 
   00 0f f8 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 44
0.749851 0 0.0351562 0 0.710938 0.722656 d1
q
q 0.6622 0 0 0.7224 0.03612 0 cm
<<
   /ImageType 1
   /Width 55
   /Height 60
   /ImageMatrix [55 0 0 -60 0 60]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 00 38 00 00 00 
   00 00 00 38 00 00 00 
   00 00 00 38 00 00 00 
   00 00 00 7c 00 00 00 
   00 00 00 7c 00 00 00 
   00 00 00 7c 00 00 00 
   00 00 00 fe 00 00 00 
   00 00 00 fe 00 00 00 
   00 00 00 fe 00 00 00 
   00 00 01 ff 00 00 00 
   00 00 01 ff 00 00 00 
   00 00 01 ff 00 00 00 
   00 00 03 7f 80 00 00 
   00 00 03 7f 80 00 00 
   00 00 07 7f c0 00 00 
   00 00 06 3f c0 00 00 
   00 00 06 3f c0 00 00 
   00 00 0e 3f e0 00 00 
   00 00 0c 1f e0 00 00 
   00 00 0c 1f e0 00 00 
   00 00 1c 1f f0 00 00 
   00 00 18 0f f0 00 00 
   00 00 18 0f f0 00 00 
   00 00 38 0f f8 00 00 
   00 00 30 07 f8 00 00 
   00 00 30 07 f8 00 00 
   00 00 70 07 fc 00 00 
   00 00 60 03 fc 00 00 
   00 00 60 03 fc 00 00 
   00 00 c0 03 fe 00 00 
   00 00 c0 01 fe 00 00 
   00 00 c0 01 fe 00 00 
   00 01 80 01 ff 00 00 
   00 01 80 00 ff 00 00 
   00 01 80 00 ff 00 00 
   00 03 00 00 ff 80 00 
   00 03 00 00 7f 80 00 
   00 03 00 00 7f 80 00 
   00 06 00 00 7f c0 00 
   00 07 ff ff ff c0 00 
   00 07 ff ff ff c0 00 
   00 0f ff ff ff e0 00 
   00 0c 00 00 1f e0 00 
   00 0c 00 00 1f e0 00 
   00 18 00 00 0f f0 00 
   00 18 00 00 0f f0 00 
   00 18 00 00 0f f0 00 
   00 30 00 00 07 f8 00 
   00 30 00 00 07 f8 00 
   00 30 00 00 07 f8 00 
   00 60 00 00 03 fc 00 
   00 60 00 00 03 fc 00 
   00 e0 00 00 03 fc 00 
   00 e0 00 00 01 fe 00 
   01 e0 00 00 01 fe 00 
   03 f0 00 00 01 ff 00 
   0f fc 00 00 07 ff 80 
   ff ff 80 00 ff ff fe 
   ff ff 80 00 ff ff fe 
   ff ff 80 00 ff ff fe 
   >}
>>
imagemask
Q
Q
    }
    { % 45
0.555405 0 0.0117188 0 0.53125 0.710938 d1
q
q 0.50568 0 0 0.71036 0.01204 0.000000000000000111 cm
<<
   /ImageType 1
   /Width 42
   /Height 59
   /ImageMatrix [42 0 0 -59 0 59]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 0f f8 00 00 
   00 00 7f fe 00 00 
   00 01 f8 07 80 00 
   00 07 e0 01 c0 00 
   00 1f 80 00 e0 00 
   00 3f 00 07 e0 00 
   00 7e 00 0f f0 00 
   00 7e 00 0f f0 00 
   00 fc 00 0f f0 00 
   00 fc 00 0f f0 00 
   01 f8 00 0f f0 00 
   01 f8 00 07 e0 00 
   01 f8 00 01 80 00 
   01 f8 00 00 00 00 
   01 f8 00 00 00 00 
   01 f8 00 00 00 00 
   01 f8 00 00 00 00 
   01 f8 00 00 00 00 
   01 f8 00 00 00 00 
   01 f8 00 00 00 00 
   01 f8 00 00 00 00 
   01 f8 00 00 00 00 
   01 f8 00 03 f0 00 
   ff ff ff ff f0 00 
   ff ff ff ff f0 00 
   ff ff ff ff f0 00 
   01 f8 00 0f f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   01 f8 00 03 f0 00 
   03 fc 00 07 f8 00 
   7f ff e0 ff ff c0 
   7f ff e0 ff ff c0 
   7f ff e0 ff ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 46
0.333267 0 0.0117188 0.191406 0.289062 0.253906 d1
q
Q
    }
    { % 47
0.763697 0 0.0351562 0 0.699219 0.6875 d1
q
q 0.65016 0 0 0.68628 0.03612 0 cm
<<
   /ImageType 1
   /Width 54
   /Height 57
   /ImageMatrix [54 0 0 -57 0 57]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff ff ff c0 00 00 
   ff ff ff ff f8 00 00 
   ff ff ff ff fe 00 00 
   01 ff 80 01 ff 80 00 
   00 ff 00 00 3f e0 00 
   00 ff 00 00 0f f0 00 
   00 ff 00 00 03 f8 00 
   00 ff 00 00 01 fc 00 
   00 ff 00 00 00 fe 00 
   00 ff 00 00 00 7f 00 
   00 ff 00 00 00 7f 00 
   00 ff 00 00 00 3f 80 
   00 ff 00 00 00 3f c0 
   00 ff 00 00 00 1f c0 
   00 ff 00 00 00 1f e0 
   00 ff 00 00 00 0f e0 
   00 ff 00 00 00 0f f0 
   00 ff 00 00 00 0f f0 
   00 ff 00 00 00 0f f0 
   00 ff 00 00 00 07 f8 
   00 ff 00 00 00 07 f8 
   00 ff 00 00 00 07 f8 
   00 ff 00 00 00 07 f8 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 fc 
   00 ff 00 00 00 07 f8 
   00 ff 00 00 00 07 f8 
   00 ff 00 00 00 07 f8 
   00 ff 00 00 00 07 f8 
   00 ff 00 00 00 0f f0 
   00 ff 00 00 00 0f f0 
   00 ff 00 00 00 0f e0 
   00 ff 00 00 00 0f e0 
   00 ff 00 00 00 1f e0 
   00 ff 00 00 00 1f c0 
   00 ff 00 00 00 3f 80 
   00 ff 00 00 00 3f 80 
   00 ff 00 00 00 7f 00 
   00 ff 00 00 00 fe 00 
   00 ff 00 00 01 fc 00 
   00 ff 00 00 03 f8 00 
   00 ff 00 00 0f f0 00 
   00 ff 00 00 3f e0 00 
   01 ff 80 00 ff 80 00 
   ff ff ff ff ff 00 00 
   ff ff ff ff f8 00 00 
   ff ff ff ff c0 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 48
0.749851 0 0.0351562 0 0.710938 0.6875 d1
q
q 0.6622 0 0 0.68628 0.03612 0 cm
<<
   /ImageType 1
   /Width 55
   /Height 57
   /ImageMatrix [55 0 0 -57 0 57]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff 00 00 07 ff fe 
   ff ff 80 00 07 ff fe 
   ff ff c0 00 07 ff fe 
   00 ff c0 00 00 7f e0 
   00 ff e0 00 00 1f 80 
   00 df f0 00 00 0f 00 
   00 df f0 00 00 06 00 
   00 cf f8 00 00 06 00 
   00 c7 fc 00 00 06 00 
   00 c7 fc 00 00 06 00 
   00 c3 fe 00 00 06 00 
   00 c1 ff 00 00 06 00 
   00 c1 ff 00 00 06 00 
   00 c0 ff 80 00 06 00 
   00 c0 7f c0 00 06 00 
   00 c0 7f c0 00 06 00 
   00 c0 3f e0 00 06 00 
   00 c0 1f f0 00 06 00 
   00 c0 1f f8 00 06 00 
   00 c0 0f f8 00 06 00 
   00 c0 07 fc 00 06 00 
   00 c0 07 fe 00 06 00 
   00 c0 03 fe 00 06 00 
   00 c0 01 ff 00 06 00 
   00 c0 01 ff 80 06 00 
   00 c0 00 ff 80 06 00 
   00 c0 00 7f c0 06 00 
   00 c0 00 7f e0 06 00 
   00 c0 00 3f e0 06 00 
   00 c0 00 1f f0 06 00 
   00 c0 00 0f f8 06 00 
   00 c0 00 0f f8 06 00 
   00 c0 00 07 fc 06 00 
   00 c0 00 03 fe 06 00 
   00 c0 00 03 fe 06 00 
   00 c0 00 01 ff 06 00 
   00 c0 00 00 ff 86 00 
   00 c0 00 00 ff 86 00 
   00 c0 00 00 7f c6 00 
   00 c0 00 00 3f e6 00 
   00 c0 00 00 3f e6 00 
   00 c0 00 00 1f f6 00 
   00 c0 00 00 0f fe 00 
   00 c0 00 00 0f fe 00 
   00 c0 00 00 07 fe 00 
   00 c0 00 00 03 fe 00 
   00 c0 00 00 03 fe 00 
   00 c0 00 00 01 fe 00 
   00 c0 00 00 00 fe 00 
   00 c0 00 00 00 fe 00 
   00 c0 00 00 00 7e 00 
   01 e0 00 00 00 3e 00 
   03 f0 00 00 00 3e 00 
   0f fc 00 00 00 1e 00 
   ff ff c0 00 00 0e 00 
   ff ff c0 00 00 0e 00 
   ff ff c0 00 00 06 00 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0.0117188 -0.253906 1 0.746094] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-6-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
Encoding 1 /g1 put
Encoding 2 /g2 put
Encoding 3 /g3 put
Encoding 4 /g4 put
Encoding 5 /g5 put
Encoding 6 /g6 put
Encoding 7 /g7 put
/Glyphs [
    { % 0
0.332184 0 0.0859375 -0.0117188 0.386719 0.625 d1
q
q 0.28896 0 0 0.63812 0.08428 -0.01204 cm
<<
   /ImageType 1
   /Width 24
   /Height 53
   /ImageMatrix [24 0 0 -53 0 53]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 03 80 
   00 07 c0 
   00 0f c0 
   00 0f c0 
   00 0f c0 
   00 0f c0 
   00 1f c0 
   00 1f 80 
   00 1f 80 
   00 1f 80 
   00 3f 80 
   00 3f 00 
   00 3f 00 
   00 3f 00 
   00 7f 00 
   00 7e 00 
   7f ff ff 
   7f ff ff 
   ff ff ff 
   00 fc 00 
   00 fc 00 
   00 fc 00 
   01 fc 00 
   01 f8 00 
   01 f8 00 
   01 f8 00 
   03 f8 00 
   03 f0 00 
   03 f0 00 
   03 f0 00 
   07 f0 00 
   07 e0 00 
   07 e0 00 
   07 e0 00 
   0f e0 00 
   0f c0 00 
   0f c0 00 
   0f c0 00 
   1f c0 00 
   1f 80 1c 
   1f 80 1c 
   1f 80 3c 
   3f 80 38 
   3f 00 78 
   3f 00 70 
   3f 00 f0 
   3f 00 e0 
   3f 01 c0 
   3e 03 c0 
   1f 07 80 
   0f 0f 00 
   07 fc 00 
   01 f0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 1
0.485453 0 0.0859375 -0.203125 0.519531 0.445312 d1
q
q 0.4214 0 0 0.65016 0.08428 -0.20468 cm
<<
   /ImageType 1
   /Width 35
   /Height 54
   /ImageMatrix [35 0 0 -54 0 54]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 f0 00 00 00 
   03 fc 00 01 c0 
   07 1e 00 03 e0 
   0e 1f 00 07 e0 
   1c 1f 00 07 e0 
   3c 1f 00 07 e0 
   38 1f 00 0f e0 
   38 3f 00 0f c0 
   70 3f 00 0f c0 
   70 3f 00 0f c0 
   70 7f 00 1f c0 
   f0 7e 00 1f 80 
   e0 7e 00 1f 80 
   e0 fe 00 1f 80 
   00 fc 00 3f 80 
   00 fc 00 3f 00 
   01 fc 00 3f 00 
   01 f8 00 3f 00 
   01 f8 00 7f 00 
   03 f8 00 7e 00 
   03 f0 00 7e 00 
   03 f0 00 7e 00 
   03 f0 00 fe 00 
   07 f0 00 fc 00 
   07 e0 00 fc 00 
   07 e0 00 fc 00 
   07 e0 01 fc 00 
   07 e0 01 f8 00 
   07 e0 01 f8 00 
   07 e0 01 f8 00 
   07 e0 03 f8 00 
   07 e0 03 f0 00 
   07 e0 07 f0 00 
   03 e0 0f f0 00 
   03 f0 1f f0 00 
   01 f8 7f e0 00 
   00 7f f7 e0 00 
   00 1f c7 e0 00 
   00 00 0f e0 00 
   00 00 0f c0 00 
   00 00 0f c0 00 
   00 00 1f c0 00 
   3f 00 1f 80 00 
   7f 00 3f 80 00 
   7f 00 3f 00 00 
   7f 00 7e 00 00 
   7f 00 7c 00 00 
   7e 00 fc 00 00 
   70 01 f8 00 00 
   70 03 e0 00 00 
   38 07 c0 00 00 
   3c 1f 80 00 00 
   0f fe 00 00 00 
   03 f0 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 2
0.510978 0 0 -0.191406 0.503906 0.445312 d1
q
q 0.49364 0 0 0.63812 0 -0.19264 cm
<<
   /ImageType 1
   /Width 41
   /Height 53
   /ImageMatrix [41 0 0 -53 0 53]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 07 80 07 c0 00 
   00 1f e0 3f f0 00 
   00 3c f0 78 7c 00 
   00 38 f8 e0 3e 00 
   00 78 7f c0 3e 00 
   00 70 7f 80 1f 00 
   00 70 ff 00 1f 00 
   00 f0 fe 00 1f 80 
   00 e0 fe 00 1f 80 
   00 e0 fc 00 1f 80 
   01 e1 fc 00 1f 80 
   01 c1 fc 00 1f 80 
   01 c1 f8 00 1f 80 
   01 c1 f8 00 1f 80 
   00 03 f8 00 3f 80 
   00 03 f8 00 3f 80 
   00 03 f0 00 3f 80 
   00 03 f0 00 3f 80 
   00 07 f0 00 7f 80 
   00 07 f0 00 7f 80 
   00 07 e0 00 7f 00 
   00 07 e0 00 7f 00 
   00 0f e0 00 ff 00 
   00 0f e0 00 fe 00 
   00 0f c0 00 fe 00 
   00 0f c0 01 fc 00 
   00 1f c0 01 fc 00 
   00 1f c0 01 f8 00 
   00 1f 80 03 f8 00 
   00 1f 80 03 f0 00 
   00 3f 80 07 e0 00 
   00 3f c0 0f c0 00 
   00 3f c0 0f 80 00 
   00 3f e0 1f 00 00 
   00 7f e0 3e 00 00 
   00 7f 70 fc 00 00 
   00 7e 3f f0 00 00 
   00 7e 0f 80 00 00 
   00 fe 00 00 00 00 
   00 fe 00 00 00 00 
   00 fc 00 00 00 00 
   00 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 fc 00 00 00 00 
   01 f8 00 00 00 00 
   01 f8 00 00 00 00 
   03 f8 00 00 00 00 
   03 f8 00 00 00 00 
   03 f0 00 00 00 00 
   07 f0 00 00 00 00 
   ff ff c0 00 00 00 
   ff ff c0 00 00 00 
   ff ff c0 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 3
0.459928 0 0.109375 -0.0117188 0.46875 0.445312 d1
q
q 0.34916 0 0 0.45752 0.10836 -0.01204 cm
<<
   /ImageType 1
   /Width 29
   /Height 38
   /ImageMatrix [29 0 0 -38 0 38]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 7f 00 
   00 03 ff c0 
   00 0f c1 e0 
   00 3f 00 f0 
   00 7e 00 78 
   00 fc 00 78 
   01 f8 00 78 
   03 f0 00 78 
   07 e0 00 78 
   0f e0 00 78 
   0f c0 00 f8 
   1f c0 00 f0 
   3f 80 01 f0 
   3f 80 07 e0 
   3f 80 1f 80 
   7f 81 ff 00 
   7f ff f8 00 
   7f ff 80 00 
   7f 00 00 00 
   ff 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fe 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 30 
   7c 00 00 38 
   7c 00 00 78 
   7e 00 00 f0 
   3e 00 01 e0 
   3e 00 03 c0 
   1f 00 0f 80 
   0f 00 3e 00 
   07 81 f8 00 
   03 ff e0 00 
   00 ff 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 4
0.408758 0 0.0703125 -0.0117188 0.421875 0.445312 d1
q
q 0.33712 0 0 0.45752 0.07224 -0.01204 cm
<<
   /ImageType 1
   /Width 28
   /Height 38
   /ImageMatrix [28 0 0 -38 0 38]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 fe 00 
   00 07 ff 80 
   00 0f 83 c0 
   00 3e 00 e0 
   00 7c 00 f0 
   00 78 00 70 
   00 f8 00 f0 
   01 f8 03 f0 
   01 f0 03 f0 
   01 f0 03 f0 
   01 f0 03 e0 
   03 f0 01 c0 
   03 f8 00 00 
   03 fc 00 00 
   03 ff c0 00 
   01 ff f8 00 
   01 ff fe 00 
   00 ff ff 00 
   00 7f ff 80 
   00 3f ff 80 
   00 0f ff c0 
   00 00 ff c0 
   00 00 3f c0 
   00 00 1f c0 
   00 00 0f c0 
   3e 00 0f c0 
   7e 00 0f c0 
   fe 00 0f 80 
   fe 00 0f 80 
   fe 00 0f 80 
   fc 00 1f 00 
   e0 00 1f 00 
   f0 00 3e 00 
   70 00 7c 00 
   38 00 f8 00 
   1e 03 e0 00 
   0f ff c0 00 
   01 fe 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 5
0.306538 0 0.0859375 -0.0117188 0.335938 0.664062 d1
q
q 0.2408 0 0 0.67424 0.08428 -0.01204 cm
<<
   /ImageType 1
   /Width 20
   /Height 56
   /ImageMatrix [20 0 0 -56 0 56]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 01 c0 
   00 07 e0 
   00 07 f0 
   00 0f f0 
   00 0f e0 
   00 07 e0 
   00 03 80 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 f0 00 
   03 fc 00 
   07 1e 00 
   0e 1f 00 
   1c 1f 00 
   1c 1f 00 
   38 1f 00 
   38 3f 00 
   70 3f 00 
   70 3f 00 
   70 7f 00 
   f0 7e 00 
   e0 7e 00 
   e0 fe 00 
   00 fc 00 
   00 fc 00 
   01 fc 00 
   01 f8 00 
   03 f8 00 
   03 f8 00 
   03 f0 00 
   07 f0 00 
   07 e0 00 
   07 e0 00 
   0f e0 e0 
   0f c0 e0 
   0f c1 e0 
   1f c1 c0 
   1f 81 c0 
   1f 81 c0 
   1f 83 80 
   1f 03 80 
   1f 07 00 
   1f 07 00 
   1f 0e 00 
   0f 1c 00 
   07 f8 00 
   01 e0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 6
0.562027 0 0.0859375 -0.0117188 0.589844 0.445312 d1
q
q 0.49364 0 0 0.45752 0.08428 -0.01204 cm
<<
   /ImageType 1
   /Width 41
   /Height 38
   /ImageMatrix [41 0 0 -38 0 38]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   01 e0 00 fe 00 00 
   07 f8 03 ff 80 00 
   0e 3c 0f 07 c0 00 
   1e 3e 3c 03 e0 00 
   1c 1f 78 03 f0 00 
   38 3f f0 01 f0 00 
   38 3f e0 01 f0 00 
   78 3f c0 01 f0 00 
   70 3f c0 01 f8 00 
   70 3f 80 01 f8 00 
   70 3f 00 03 f0 00 
   f0 7f 00 03 f0 00 
   e0 7e 00 03 f0 00 
   e0 7e 00 03 f0 00 
   00 7e 00 07 f0 00 
   00 fe 00 07 e0 00 
   00 fc 00 07 e0 00 
   00 fc 00 07 e0 00 
   00 fc 00 0f e0 00 
   01 fc 00 0f c0 00 
   01 f8 00 0f c0 00 
   01 f8 00 1f c0 00 
   01 f8 00 1f 80 00 
   03 f8 00 1f 80 00 
   03 f0 00 3f 83 80 
   03 f0 00 3f 03 80 
   03 f0 00 3f 07 80 
   07 f0 00 7f 07 00 
   07 e0 00 7e 07 00 
   07 e0 00 7e 07 00 
   07 e0 00 7e 0e 00 
   0f e0 00 7c 0e 00 
   0f c0 00 7c 1e 00 
   0f c0 00 7c 1c 00 
   0f c0 00 7c 38 00 
   1f c0 00 3c 78 00 
   1f 80 00 1f e0 00 
   07 00 00 07 80 00 
   >}
>>
imagemask
Q
Q
    }
    { % 7
0.459928 0 0.046875 -0.203125 0.492188 0.445312 d1
q
q 0.43344 0 0 0.65016 0.04816 -0.20468 cm
<<
   /ImageType 1
   /Width 36
   /Height 54
   /ImageMatrix [36 0 0 -54 0 54]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 07 c0 00 
   00 00 3f f0 00 
   00 00 fc 38 e0 
   00 01 f0 1f f0 
   00 03 e0 1f f0 
   00 07 c0 0f f0 
   00 0f 80 0f f0 
   00 1f 80 07 f0 
   00 3f 00 07 e0 
   00 7f 00 07 e0 
   00 7e 00 0f e0 
   00 fe 00 0f e0 
   00 fc 00 0f c0 
   01 fc 00 0f c0 
   01 fc 00 1f c0 
   03 fc 00 1f c0 
   03 f8 00 1f 80 
   03 f8 00 1f 80 
   03 f8 00 3f 80 
   07 f8 00 3f 80 
   07 f0 00 3f 00 
   07 f0 00 3f 00 
   07 f0 00 7f 00 
   07 f0 00 7f 00 
   07 e0 00 7e 00 
   07 e0 00 7e 00 
   07 e0 00 fe 00 
   07 e0 00 fe 00 
   07 e0 00 fc 00 
   03 e0 01 fc 00 
   03 e0 03 fc 00 
   03 e0 07 fc 00 
   01 f0 0f f8 00 
   00 f0 1f f8 00 
   00 78 7b f8 00 
   00 3f f3 f8 00 
   00 0f c3 f0 00 
   00 00 03 f0 00 
   00 00 07 f0 00 
   00 00 07 f0 00 
   00 00 07 e0 00 
   00 00 07 e0 00 
   00 00 0f e0 00 
   00 00 0f c0 00 
   1c 00 0f c0 00 
   7e 00 1f c0 00 
   7e 00 1f 80 00 
   fe 00 3f 00 00 
   fe 00 7e 00 00 
   fe 00 fc 00 00 
   78 01 f8 00 00 
   7c 07 e0 00 00 
   1f ff 80 00 00 
   03 fe 00 00 00 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0 -0.203125 0.589844 0.664062] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-8-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
/Glyphs [
    { % 0
0.569307 0 0.0859375 0 0.464844 0.652344 d1
q
q 0.36141 0 0 0.65398 0.08605 0.000000000000000111 cm
<<
   /ImageType 1
   /Width 21
   /Height 38
   /ImageMatrix [21 0 0 -38 0 38]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 38 00 
   00 78 00 
   01 f8 00 
   1f f8 00 
   fe f8 00 
   e0 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   00 f8 00 
   01 fc 00 
   ff ff f8 
   ff ff f8 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0.0859375 0 0.464844 0.652344] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-9-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
Encoding 1 /g1 put
Encoding 2 /g2 put
Encoding 3 /g3 put
Encoding 4 /g4 put
Encoding 5 /g5 put
Encoding 6 /g6 put
Encoding 7 /g7 put
Encoding 8 /g8 put
Encoding 9 /g9 put
Encoding 10 /g10 put
Encoding 11 /g11 put
Encoding 12 /g12 put
Encoding 13 /g13 put
Encoding 14 /g14 put
Encoding 15 /g15 put
/Glyphs [
    { % 0
0.56234 0 0.0898438 0 0.480469 0.652344 d1
q
q 0.38152 0 0 0.6526 0.09036 0 cm
<<
   /ImageType 1
   /Width 38
   /Height 65
   /ImageMatrix [38 0 0 -65 0 65]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 03 c0 00 
   00 00 07 c0 00 
   00 00 1f c0 00 
   00 00 7f c0 00 
   00 03 ff c0 00 
   00 3f ff c0 00 
   ff ff ff c0 00 
   ff ff ff c0 00 
   ff ff ff c0 00 
   ff ff ff c0 00 
   ff c3 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   00 03 ff c0 00 
   ff ff ff ff fc 
   ff ff ff ff fc 
   ff ff ff ff fc 
   ff ff ff ff fc 
   ff ff ff ff fc 
   >}
>>
imagemask
Q
Q
    }
    { % 1
0.312445 0 0.0820312 0 0.242188 0.152344 d1
q
q 0.1506 0 0 0.1506 0.08032 0 cm
<<
   /ImageType 1
   /Width 15
   /Height 15
   /ImageMatrix [15 0 0 -15 0 15]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 c0 
   1f f0 
   3f f8 
   7f fc 
   ff fe 
   ff fe 
   ff fe 
   ff fe 
   ff fe 
   ff fe 
   ff fe 
   7f fc 
   3f f8 
   1f f0 
   07 c0 
   >}
>>
imagemask
Q
Q
    }
    { % 2
0.707017 0 0.0390625 0 0.652344 0.683594 d1
q
q 0.6024 0 0 0.68272 0.04016 0 cm
<<
   /ImageType 1
   /Width 60
   /Height 68
   /ImageMatrix [60 0 0 -68 0 68]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff ff ff ff ff ff 80 
   ff ff ff ff ff ff ff 80 
   ff ff ff ff ff ff ff 80 
   ff ff ff ff ff ff ff 80 
   ff ff ff ff ff ff ff c0 
   00 3f fe 00 00 1f ff c0 
   00 3f fe 00 00 01 ff c0 
   00 3f fe 00 00 00 7f c0 
   00 3f fe 00 00 00 3f c0 
   00 3f fe 00 00 00 1f c0 
   00 3f fe 00 00 00 0f c0 
   00 3f fe 00 00 00 07 c0 
   00 3f fe 00 00 00 07 e0 
   00 3f fe 00 00 00 03 e0 
   00 3f fe 00 00 00 03 e0 
   00 3f fe 00 00 00 03 e0 
   00 3f fe 00 00 00 01 e0 
   00 3f fe 00 00 00 01 e0 
   00 3f fe 00 00 00 01 e0 
   00 3f fe 00 01 e0 01 e0 
   00 3f fe 00 01 e0 00 f0 
   00 3f fe 00 01 e0 00 f0 
   00 3f fe 00 01 e0 00 f0 
   00 3f fe 00 01 e0 00 f0 
   00 3f fe 00 01 e0 00 00 
   00 3f fe 00 03 e0 00 00 
   00 3f fe 00 03 e0 00 00 
   00 3f fe 00 03 e0 00 00 
   00 3f fe 00 07 e0 00 00 
   00 3f fe 00 0f e0 00 00 
   00 3f fe 00 7f e0 00 00 
   00 3f ff ff ff e0 00 00 
   00 3f ff ff ff e0 00 00 
   00 3f ff ff ff e0 00 00 
   00 3f ff ff ff e0 00 00 
   00 3f ff ff ff e0 00 00 
   00 3f fe 00 7f e0 00 00 
   00 3f fe 00 0f e0 00 00 
   00 3f fe 00 07 e0 00 00 
   00 3f fe 00 03 e0 00 00 
   00 3f fe 00 03 e0 00 00 
   00 3f fe 00 03 e0 00 00 
   00 3f fe 00 01 e0 00 00 
   00 3f fe 00 01 e0 00 00 
   00 3f fe 00 01 e0 00 00 
   00 3f fe 00 01 e0 00 00 
   00 3f fe 00 01 e0 00 00 
   00 3f fe 00 01 e0 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   00 3f fe 00 00 00 00 00 
   ff ff ff ff f0 00 00 00 
   ff ff ff ff f0 00 00 00 
   ff ff ff ff f0 00 00 00 
   ff ff ff ff f0 00 00 00 
   ff ff ff ff f0 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 3
0.513144 0 0.03125 -0.0117188 0.480469 0.460938 d1
q
q 0.44176 0 0 0.47188 0.03012 -0.01004 cm
<<
   /ImageType 1
   /Width 44
   /Height 47
   /ImageMatrix [44 0 0 -47 0 47]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 3f f8 00 00 
   00 03 ff ff 80 00 
   00 0f ff ff e0 00 
   00 3f ff ff f0 00 
   00 7f f8 3f f8 00 
   00 ff c0 07 fc 00 
   01 ff 80 03 fe 00 
   03 ff 00 01 ff 00 
   07 fe 00 00 ff 80 
   0f fc 00 00 ff 80 
   1f fc 00 00 7f c0 
   1f f8 00 00 7f c0 
   3f f8 00 00 3f e0 
   3f f8 00 00 3f e0 
   7f f8 00 00 3f e0 
   7f f0 00 00 3f e0 
   7f f0 00 00 3f f0 
   7f f0 00 00 1f f0 
   ff f0 00 00 1f f0 
   ff f0 00 00 1f f0 
   ff ff ff ff ff f0 
   ff ff ff ff ff f0 
   ff ff ff ff ff f0 
   ff ff ff ff ff f0 
   ff f0 00 00 00 00 
   ff f0 00 00 00 00 
   ff f0 00 00 00 00 
   ff f0 00 00 00 00 
   ff f0 00 00 00 00 
   7f f0 00 00 00 00 
   7f f0 00 00 00 00 
   7f f8 00 00 00 00 
   7f f8 00 00 00 00 
   3f f8 00 00 00 00 
   3f f8 00 00 00 f0 
   1f fc 00 00 00 f0 
   1f fc 00 00 01 f0 
   0f fe 00 00 01 e0 
   07 ff 00 00 03 e0 
   03 ff 80 00 07 c0 
   01 ff c0 00 0f 80 
   00 ff f0 00 3f 00 
   00 7f fe 01 fe 00 
   00 1f ff ff fc 00 
   00 07 ff ff f0 00 
   00 01 ff ff c0 00 
   00 00 1f fe 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 4
0.546778 0 0.03125 -0.0117188 0.542969 0.460938 d1
q
q 0.502 0 0 0.47188 0.03012 -0.01004 cm
<<
   /ImageType 1
   /Width 50
   /Height 47
   /ImageMatrix [50 0 0 -47 0 47]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 01 ff e0 00 00 00 
   00 1f ff fe 00 00 00 
   00 7f ff ff 80 00 00 
   01 ff ff ff e0 00 00 
   03 fe 00 7f f8 00 00 
   07 fc 00 1f fc 00 00 
   07 fe 00 0f fe 00 00 
   0f ff 00 07 ff 00 00 
   0f ff 00 07 ff 00 00 
   0f ff 00 03 ff 80 00 
   0f ff 00 03 ff 80 00 
   0f ff 00 03 ff 80 00 
   0f ff 00 01 ff c0 00 
   07 fe 00 01 ff c0 00 
   03 fc 00 01 ff c0 00 
   00 f0 00 01 ff c0 00 
   00 00 00 01 ff c0 00 
   00 00 00 01 ff c0 00 
   00 00 00 01 ff c0 00 
   00 00 00 01 ff c0 00 
   00 00 03 ff ff c0 00 
   00 00 ff ff ff c0 00 
   00 07 ff ff ff c0 00 
   00 3f ff f1 ff c0 00 
   00 ff fc 01 ff c0 00 
   03 ff e0 01 ff c0 00 
   07 ff 80 01 ff c0 00 
   1f fe 00 01 ff c0 00 
   3f fc 00 01 ff c0 00 
   3f f8 00 01 ff c0 00 
   7f f8 00 01 ff c0 00 
   7f f0 00 01 ff c0 00 
   ff f0 00 01 ff c0 00 
   ff e0 00 01 ff c0 00 
   ff e0 00 01 ff c0 00 
   ff e0 00 01 ff c0 00 
   ff e0 00 03 ff c0 00 
   ff e0 00 03 ff c0 00 
   ff f0 00 07 ff c0 00 
   7f f8 00 0f ff c0 00 
   7f f8 00 1f ff f0 00 
   3f fe 00 3e ff ff c0 
   1f ff 80 fc 7f ff c0 
   07 ff ff f8 7f ff c0 
   03 ff ff e0 1f ff c0 
   00 7f ff 80 07 ff c0 
   00 0f fc 00 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 5
0.437342 0 0.0195312 -0.0117188 0.382812 0.632812 d1
q
q 0.3514 0 0 0.64256 0.02008 -0.01004 cm
<<
   /ImageType 1
   /Width 35
   /Height 64
   /ImageMatrix [35 0 0 -64 0 64]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 01 e0 00 00 
   00 01 e0 00 00 
   00 01 e0 00 00 
   00 01 e0 00 00 
   00 01 e0 00 00 
   00 03 e0 00 00 
   00 03 e0 00 00 
   00 03 e0 00 00 
   00 03 e0 00 00 
   00 07 e0 00 00 
   00 07 e0 00 00 
   00 0f e0 00 00 
   00 0f e0 00 00 
   00 1f e0 00 00 
   00 1f e0 00 00 
   00 3f e0 00 00 
   00 7f e0 00 00 
   00 ff e0 00 00 
   03 ff e0 00 00 
   0f ff ff ff 80 
   ff ff ff ff 80 
   ff ff ff ff 80 
   ff ff ff ff 80 
   ff ff ff ff 80 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 00 00 
   00 ff e0 01 e0 
   00 ff e0 01 e0 
   00 ff e0 01 e0 
   00 ff e0 01 e0 
   00 ff e0 01 e0 
   00 ff e0 01 e0 
   00 ff e0 01 e0 
   00 ff e0 01 e0 
   00 ff e0 01 e0 
   00 ff e0 03 e0 
   00 ff f0 03 c0 
   00 7f f0 03 c0 
   00 7f f0 07 c0 
   00 3f f8 0f 80 
   00 1f fc 1f 00 
   00 0f ff ff 00 
   00 07 ff fc 00 
   00 01 ff f8 00 
   00 00 3f e0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 6
0.62489 0 0.0390625 -0.0117188 0.601562 0.453125 d1
q
q 0.5522 0 0 0.46184 0.04016 -0.01004 cm
<<
   /ImageType 1
   /Width 55
   /Height 46
   /ImageMatrix [55 0 0 -46 0 46]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 7f c0 00 01 ff 00 
   ff ff c0 03 ff ff 00 
   ff ff c0 03 ff ff 00 
   ff ff c0 03 ff ff 00 
   ff ff c0 03 ff ff 00 
   ff ff c0 03 ff ff 00 
   03 ff c0 00 0f ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 0f ff 00 
   01 ff c0 00 0f ff 00 
   01 ff c0 00 1f ff 00 
   01 ff c0 00 1f ff 00 
   01 ff c0 00 3f ff 00 
   00 ff c0 00 3f ff 00 
   00 ff e0 00 7f ff 80 
   00 7f e0 01 f7 ff fe 
   00 7f f8 07 e7 ff fe 
   00 3f ff ff c7 ff fe 
   00 0f ff ff 07 ff fe 
   00 03 ff fe 07 ff fe 
   00 00 7f f0 07 fc 00 
   >}
>>
imagemask
Q
Q
    }
    { % 7
0.45933 0 0.03125 0 0.433594 0.453125 d1
q
q 0.39156 0 0 0.4518 0.03012 0 cm
<<
   /ImageType 1
   /Width 39
   /Height 45
   /ImageMatrix [39 0 0 -45 0 45]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 7f 80 7f 00 
   ff ff 81 ff e0 
   ff ff 83 ff f0 
   ff ff 8f ff f8 
   ff ff 8f 8f fc 
   ff ff 9f 1f fe 
   03 ff be 1f fe 
   01 ff bc 1f fe 
   01 ff f8 1f fe 
   01 ff f8 1f fe 
   01 ff f0 1f fe 
   01 ff f0 0f fc 
   01 ff e0 07 f8 
   01 ff e0 01 e0 
   01 ff e0 00 00 
   01 ff e0 00 00 
   01 ff e0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   01 ff c0 00 00 
   ff ff ff e0 00 
   ff ff ff e0 00 
   ff ff ff e0 00 
   ff ff ff e0 00 
   ff ff ff e0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 8
0.443668 0 0.0390625 -0.0117188 0.402344 0.460938 d1
q
q 0.3514 0 0 0.47188 0.04016 -0.01004 cm
<<
   /ImageType 1
   /Width 35
   /Height 47
   /ImageMatrix [35 0 0 -47 0 47]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 1f fc 03 80 
   00 ff ff 87 80 
   03 ff ff ff 80 
   0f ff ff ff 80 
   1f f0 03 ff 80 
   3f c0 00 ff 80 
   3f 80 00 3f 80 
   7f 00 00 1f 80 
   7e 00 00 1f 80 
   fe 00 00 0f 80 
   fe 00 00 0f 80 
   fe 00 00 07 80 
   ff 00 00 07 80 
   ff 00 00 07 80 
   ff 80 00 07 80 
   ff e0 00 00 00 
   ff fe 00 00 00 
   7f ff f0 00 00 
   7f ff ff 00 00 
   3f ff ff c0 00 
   3f ff ff f0 00 
   1f ff ff fc 00 
   0f ff ff fe 00 
   03 ff ff ff 00 
   01 ff ff ff 80 
   00 7f ff ff 80 
   00 0f ff ff c0 
   00 00 3f ff c0 
   00 00 03 ff e0 
   00 00 00 ff e0 
   f0 00 00 3f e0 
   f0 00 00 3f e0 
   f8 00 00 1f e0 
   f8 00 00 0f e0 
   f8 00 00 0f e0 
   fc 00 00 0f e0 
   fc 00 00 0f e0 
   fe 00 00 0f c0 
   ff 00 00 1f c0 
   ff 00 00 1f c0 
   ff 80 00 3f 80 
   ff e0 00 7f 00 
   ff f8 03 fe 00 
   ff ff ff fc 00 
   fc ff ff f8 00 
   f0 3f ff e0 00 
   e0 07 fe 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 9
1.161728 0 0.0195312 -0.0117188 1.144531 0.683594 d1
q
q 1.11444 0 0 0.69276 0.02008 -0.01004 cm
<<
   /ImageType 1
   /Width 111
   /Height 69
   /ImageMatrix [111 0 0 -69 0 69]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff ff fe 00 7f ff ff ff 00 00 ff ff fe 
   ff ff ff fe 00 7f ff ff ff 00 00 ff ff fe 
   ff ff ff fe 00 7f ff ff ff 00 00 ff ff fe 
   ff ff ff fe 00 7f ff ff ff 00 00 ff ff fe 
   ff ff ff fe 00 7f ff ff ff 00 00 ff ff fe 
   00 7f fc 00 00 00 3f fe 00 00 00 00 7c 00 
   00 7f fe 00 00 00 3f ff 00 00 00 00 7c 00 
   00 3f fe 00 00 00 1f ff 00 00 00 00 78 00 
   00 3f ff 00 00 00 1f ff 00 00 00 00 78 00 
   00 3f ff 00 00 00 1f ff 80 00 00 00 f8 00 
   00 1f ff 00 00 00 0f ff 80 00 00 00 f0 00 
   00 1f ff 80 00 00 0f ff c0 00 00 01 f0 00 
   00 0f ff 80 00 00 07 ff c0 00 00 01 e0 00 
   00 0f ff 80 00 00 07 ff c0 00 00 01 e0 00 
   00 0f ff c0 00 00 07 ff e0 00 00 03 e0 00 
   00 07 ff c0 00 00 07 ff e0 00 00 03 c0 00 
   00 07 ff e0 00 00 07 ff e0 00 00 03 c0 00 
   00 07 ff e0 00 00 0f ff f0 00 00 07 c0 00 
   00 03 ff e0 00 00 0f ff f0 00 00 07 80 00 
   00 03 ff f0 00 00 0f ff f8 00 00 0f 80 00 
   00 01 ff f0 00 00 1e ff f8 00 00 0f 00 00 
   00 01 ff f0 00 00 1e ff f8 00 00 0f 00 00 
   00 01 ff f8 00 00 3e ff fc 00 00 1f 00 00 
   00 00 ff f8 00 00 3c 7f fc 00 00 1e 00 00 
   00 00 ff fc 00 00 3c 7f fc 00 00 1e 00 00 
   00 00 7f fc 00 00 7c 7f fe 00 00 3c 00 00 
   00 00 7f fc 00 00 78 3f fe 00 00 3c 00 00 
   00 00 7f fe 00 00 78 3f ff 00 00 7c 00 00 
   00 00 3f fe 00 00 f0 1f ff 00 00 78 00 00 
   00 00 3f fe 00 00 f0 1f ff 00 00 78 00 00 
   00 00 3f ff 00 01 f0 1f ff 80 00 f8 00 00 
   00 00 1f ff 00 01 e0 0f ff 80 00 f0 00 00 
   00 00 1f ff 80 01 e0 0f ff 80 00 f0 00 00 
   00 00 0f ff 80 03 e0 0f ff c0 01 e0 00 00 
   00 00 0f ff 80 03 c0 07 ff c0 01 e0 00 00 
   00 00 0f ff c0 03 c0 07 ff e0 03 e0 00 00 
   00 00 07 ff c0 07 80 03 ff e0 03 c0 00 00 
   00 00 07 ff c0 07 80 03 ff e0 03 c0 00 00 
   00 00 07 ff e0 0f 80 03 ff f0 07 c0 00 00 
   00 00 03 ff e0 0f 00 01 ff f0 07 80 00 00 
   00 00 03 ff f0 0f 00 01 ff f0 07 80 00 00 
   00 00 01 ff f0 1f 00 01 ff f8 0f 00 00 00 
   00 00 01 ff f0 1e 00 00 ff f8 0f 00 00 00 
   00 00 01 ff f8 1e 00 00 ff fc 1f 00 00 00 
   00 00 00 ff f8 3c 00 00 7f fc 1e 00 00 00 
   00 00 00 ff f8 3c 00 00 7f fc 1e 00 00 00 
   00 00 00 ff fc 7c 00 00 7f fe 3e 00 00 00 
   00 00 00 7f fc 78 00 00 3f fe 3c 00 00 00 
   00 00 00 7f fe 78 00 00 3f ff 3c 00 00 00 
   00 00 00 3f fe f8 00 00 3f ff 78 00 00 00 
   00 00 00 3f fe f0 00 00 1f ff 78 00 00 00 
   00 00 00 3f ff f0 00 00 1f ff f8 00 00 00 
   00 00 00 1f ff e0 00 00 0f ff f0 00 00 00 
   00 00 00 1f ff e0 00 00 0f ff f0 00 00 00 
   00 00 00 1f ff e0 00 00 0f ff f0 00 00 00 
   00 00 00 0f ff c0 00 00 07 ff e0 00 00 00 
   00 00 00 0f ff c0 00 00 07 ff e0 00 00 00 
   00 00 00 07 ff c0 00 00 07 ff c0 00 00 00 
   00 00 00 07 ff 80 00 00 03 ff c0 00 00 00 
   00 00 00 07 ff 80 00 00 03 ff c0 00 00 00 
   00 00 00 03 ff 00 00 00 01 ff 80 00 00 00 
   00 00 00 03 ff 00 00 00 01 ff 80 00 00 00 
   00 00 00 03 ff 00 00 00 01 ff 80 00 00 00 
   00 00 00 01 fe 00 00 00 00 ff 00 00 00 00 
   00 00 00 01 fe 00 00 00 00 ff 00 00 00 00 
   00 00 00 00 fc 00 00 00 00 7e 00 00 00 00 
   00 00 00 00 fc 00 00 00 00 7e 00 00 00 00 
   00 00 00 00 fc 00 00 00 00 7e 00 00 00 00 
   00 00 00 00 78 00 00 00 00 3c 00 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 10
0.312445 0 0.0390625 0 0.292969 0.703125 d1
q
q 0.24096 0 0 0.7028 0.04016 0 cm
<<
   /ImageType 1
   /Width 24
   /Height 70
   /ImageMatrix [24 0 0 -70 0 70]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 7c 00 
   01 ff 00 
   03 ff 80 
   07 ff c0 
   07 ff c0 
   0f ff e0 
   0f ff e0 
   0f ff e0 
   0f ff e0 
   0f ff e0 
   07 ff c0 
   07 ff c0 
   03 ff 80 
   01 ff 00 
   00 7c 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 00 00 
   00 7f c0 
   7f ff c0 
   7f ff c0 
   7f ff c0 
   7f ff c0 
   7f ff c0 
   03 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   01 ff c0 
   ff ff ff 
   ff ff ff 
   ff ff ff 
   ff ff ff 
   ff ff ff 
   >}
>>
imagemask
Q
Q
    }
    { % 11
0.62489 0 0.0390625 0 0.601562 0.453125 d1
q
q 0.5522 0 0 0.4518 0.04016 0 cm
<<
   /ImageType 1
   /Width 55
   /Height 45
   /ImageMatrix [55 0 0 -45 0 45]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 7f 80 07 fe 00 00 
   ff ff 80 3f ff 80 00 
   ff ff 80 ff ff e0 00 
   ff ff 81 ff ff f8 00 
   ff ff 87 f0 3f fc 00 
   ff ff 8f 80 1f fc 00 
   03 ff 9f 00 0f fe 00 
   01 ff 9e 00 0f fe 00 
   01 ff bc 00 0f fe 00 
   01 ff f8 00 07 ff 00 
   01 ff f0 00 07 ff 00 
   01 ff f0 00 07 ff 00 
   01 ff e0 00 07 ff 00 
   01 ff e0 00 07 ff 00 
   01 ff e0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   01 ff c0 00 07 ff 00 
   ff ff ff 83 ff ff fe 
   ff ff ff 83 ff ff fe 
   ff ff ff 83 ff ff fe 
   ff ff ff 83 ff ff fe 
   ff ff ff 83 ff ff fe 
   >}
>>
imagemask
Q
Q
    }
    { % 12
0.56234 0 0.03125 -0.210938 0.542969 0.453125 d1
q
q 0.502 0 0 0.66264 0.03012 -0.21084 cm
<<
   /ImageType 1
   /Width 50
   /Height 66
   /ImageMatrix [50 0 0 -66 0 66]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 ff e0 00 7e 00 
   00 0f ff fe 03 ff 80 
   00 3f ff ff 8f ff 80 
   00 ff ff ff ff ff c0 
   01 ff c0 7f ff 3f c0 
   03 ff 00 1f f8 3f c0 
   07 fe 00 0f fc 3f c0 
   0f fc 00 07 fe 1f 80 
   1f fc 00 07 ff 0f 00 
   1f f8 00 03 ff 00 00 
   1f f8 00 03 ff 00 00 
   3f f8 00 03 ff 80 00 
   3f f8 00 03 ff 80 00 
   3f f8 00 03 ff 80 00 
   3f f8 00 03 ff 80 00 
   3f f8 00 03 ff 80 00 
   3f f8 00 03 ff 80 00 
   3f f8 00 03 ff 80 00 
   3f f8 00 03 ff 80 00 
   1f f8 00 03 ff 00 00 
   1f f8 00 03 ff 00 00 
   1f fc 00 07 ff 00 00 
   0f fc 00 07 fe 00 00 
   07 fe 00 0f fc 00 00 
   03 ff 00 1f f8 00 00 
   01 ff c0 7f f0 00 00 
   03 ff ff ff e0 00 00 
   03 ff ff ff 80 00 00 
   07 8f ff fe 00 00 00 
   07 80 ff e0 00 00 00 
   0f 80 00 00 00 00 00 
   0f 80 00 00 00 00 00 
   0f 80 00 00 00 00 00 
   0f 80 00 00 00 00 00 
   0f c0 00 00 00 00 00 
   0f e0 00 00 00 00 00 
   0f f0 00 00 00 00 00 
   0f ff ff ff c0 00 00 
   0f ff ff ff fc 00 00 
   07 ff ff ff ff 80 00 
   07 ff ff ff ff e0 00 
   03 ff ff ff ff f0 00 
   01 ff ff ff ff fc 00 
   00 ff ff ff ff fc 00 
   03 ff ff ff ff fe 00 
   0f ff ff ff ff ff 00 
   1f f0 00 00 7f ff 00 
   3f c0 00 00 07 ff 00 
   7f 80 00 00 01 ff 80 
   7f 80 00 00 00 ff 80 
   ff 00 00 00 00 ff 80 
   ff 00 00 00 00 7f 80 
   ff 00 00 00 00 7f 80 
   ff 00 00 00 00 7f 80 
   ff 00 00 00 00 7f 80 
   ff 80 00 00 00 ff 80 
   7f 80 00 00 00 ff 00 
   7f c0 00 00 01 ff 00 
   3f e0 00 00 03 fe 00 
   1f f0 00 00 07 fc 00 
   0f fe 00 00 3f f8 00 
   07 ff c0 01 ff f0 00 
   01 ff ff ff ff c0 00 
   00 7f ff ff ff 00 00 
   00 0f ff ff f8 00 00 
   00 00 7f ff 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 13
0.738241 0 0.03125 0 0.710938 0.683594 d1
q
q 0.67268 0 0 0.68272 0.03012 0 cm
<<
   /ImageType 1
   /Width 67
   /Height 68
   /ImageMatrix [67 0 0 -68 0 68]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff ff ff ff ff ff f8 00 
   ff ff ff ff ff ff ff f8 00 
   ff ff ff ff ff ff ff f8 00 
   ff ff ff ff ff ff ff f8 00 
   ff ff ff ff ff ff ff fc 00 
   00 1f ff 00 00 01 ff fc 00 
   00 1f ff 00 00 00 3f fc 00 
   00 1f ff 00 00 00 0f fc 00 
   00 1f ff 00 00 00 03 fc 00 
   00 1f ff 00 00 00 01 fc 00 
   00 1f ff 00 00 00 00 fc 00 
   00 1f ff 00 00 00 00 fc 00 
   00 1f ff 00 00 00 00 7e 00 
   00 1f ff 00 00 00 00 3e 00 
   00 1f ff 00 00 00 00 3e 00 
   00 1f ff 00 00 00 00 3e 00 
   00 1f ff 00 00 00 00 1e 00 
   00 1f ff 00 00 00 00 1e 00 
   00 1f ff 00 00 78 00 1e 00 
   00 1f ff 00 00 78 00 1e 00 
   00 1f ff 00 00 78 00 0f 00 
   00 1f ff 00 00 78 00 0f 00 
   00 1f ff 00 00 78 00 0f 00 
   00 1f ff 00 00 78 00 0f 00 
   00 1f ff 00 00 f8 00 00 00 
   00 1f ff 00 00 f8 00 00 00 
   00 1f ff 00 00 f8 00 00 00 
   00 1f ff 00 01 f8 00 00 00 
   00 1f ff 00 03 f8 00 00 00 
   00 1f ff 00 1f f8 00 00 00 
   00 1f ff ff ff f8 00 00 00 
   00 1f ff ff ff f8 00 00 00 
   00 1f ff ff ff f8 00 00 00 
   00 1f ff ff ff f8 00 00 00 
   00 1f ff ff ff f8 00 00 00 
   00 1f ff 00 1f f8 00 00 00 
   00 1f ff 00 03 f8 00 00 00 
   00 1f ff 00 01 f8 00 00 00 
   00 1f ff 00 00 f8 00 00 00 
   00 1f ff 00 00 f8 00 00 00 
   00 1f ff 00 00 f8 00 01 e0 
   00 1f ff 00 00 78 00 01 e0 
   00 1f ff 00 00 78 00 01 e0 
   00 1f ff 00 00 78 00 03 c0 
   00 1f ff 00 00 78 00 03 c0 
   00 1f ff 00 00 78 00 03 c0 
   00 1f ff 00 00 78 00 03 c0 
   00 1f ff 00 00 00 00 03 c0 
   00 1f ff 00 00 00 00 07 c0 
   00 1f ff 00 00 00 00 07 c0 
   00 1f ff 00 00 00 00 07 80 
   00 1f ff 00 00 00 00 07 80 
   00 1f ff 00 00 00 00 0f 80 
   00 1f ff 00 00 00 00 0f 80 
   00 1f ff 00 00 00 00 1f 80 
   00 1f ff 00 00 00 00 1f 80 
   00 1f ff 00 00 00 00 3f 80 
   00 1f ff 00 00 00 00 7f 00 
   00 1f ff 00 00 00 00 ff 00 
   00 1f ff 00 00 00 01 ff 00 
   00 1f ff 00 00 00 07 ff 00 
   00 1f ff 00 00 00 1f ff 00 
   00 1f ff 00 00 01 ff ff 00 
   ff ff ff ff ff ff ff ff 00 
   ff ff ff ff ff ff ff fe 00 
   ff ff ff ff ff ff ff fe 00 
   ff ff ff ff ff ff ff fe 00 
   ff ff ff ff ff ff ff fe 00 
   >}
>>
imagemask
Q
Q
    }
    { % 14
0.593565 0 0.0390625 -0.191406 0.59375 0.453125 d1
q
q 0.54216 0 0 0.64256 0.04016 -0.19076 cm
<<
   /ImageType 1
   /Width 54
   /Height 64
   /ImageMatrix [54 0 0 -64 0 64]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 3f e0 00 1e 00 
   00 03 ff fc 00 3e 00 
   00 0f ff ff 00 7e 00 
   00 3f ff ff 80 7e 00 
   00 ff f8 0f e0 fe 00 
   01 ff e0 03 f1 fe 00 
   03 ff c0 01 f1 fe 00 
   07 ff 80 00 fb fe 00 
   0f ff 00 00 7f fe 00 
   0f fe 00 00 3f fe 00 
   1f fe 00 00 1f fe 00 
   3f fc 00 00 1f fe 00 
   3f fc 00 00 0f fe 00 
   3f f8 00 00 0f fe 00 
   7f f8 00 00 0f fe 00 
   7f f8 00 00 0f fe 00 
   7f f8 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   ff f0 00 00 0f fe 00 
   7f f8 00 00 0f fe 00 
   7f f8 00 00 0f fe 00 
   7f f8 00 00 0f fe 00 
   7f f8 00 00 0f fe 00 
   3f fc 00 00 0f fe 00 
   3f fc 00 00 0f fe 00 
   1f fe 00 00 1f fe 00 
   1f fe 00 00 3f fe 00 
   0f ff 00 00 7f fe 00 
   07 ff 00 00 ff fe 00 
   03 ff 80 01 ff fe 00 
   01 ff e0 03 ef fe 00 
   00 ff f0 1f cf fe 00 
   00 7f ff ff 8f fe 00 
   00 1f ff fe 0f fe 00 
   00 03 ff f8 0f fe 00 
   00 00 7f c0 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 00 0f fe 00 
   00 00 00 07 ff ff fc 
   00 00 00 07 ff ff fc 
   00 00 00 07 ff ff fc 
   00 00 00 07 ff ff fc 
   00 00 00 07 ff ff fc 
   >}
>>
imagemask
Q
Q
    }
    { % 15
0.56234 0 0.03125 -0.0117188 0.53125 0.460938 d1
q
q 0.49196 0 0 0.47188 0.03012 -0.01004 cm
<<
   /ImageType 1
   /Width 49
   /Height 47
   /ImageMatrix [49 0 0 -47 0 47]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 1f fc 00 00 00 
   00 01 ff ff c0 00 00 
   00 07 ff ff f0 00 00 
   00 1f ff ff fc 00 00 
   00 7f f8 0f ff 00 00 
   00 ff c0 01 ff 80 00 
   01 ff 80 00 ff c0 00 
   03 fe 00 00 3f e0 00 
   07 fe 00 00 3f f0 00 
   0f fc 00 00 1f f8 00 
   0f f8 00 00 0f f8 00 
   1f f8 00 00 0f fc 00 
   1f f8 00 00 0f fc 00 
   3f f8 00 00 0f fe 00 
   3f f0 00 00 07 fe 00 
   7f f0 00 00 07 ff 00 
   7f f0 00 00 07 ff 00 
   7f f0 00 00 07 ff 00 
   7f f0 00 00 07 ff 00 
   ff f0 00 00 07 ff 80 
   ff f0 00 00 07 ff 80 
   ff f0 00 00 07 ff 80 
   ff f0 00 00 07 ff 80 
   ff f0 00 00 07 ff 80 
   ff f0 00 00 07 ff 80 
   ff f0 00 00 07 ff 80 
   ff f0 00 00 07 ff 80 
   ff f0 00 00 07 ff 80 
   ff f0 00 00 07 ff 80 
   7f f0 00 00 07 ff 00 
   7f f0 00 00 07 ff 00 
   7f f0 00 00 07 ff 00 
   7f f0 00 00 07 ff 00 
   3f f8 00 00 0f fe 00 
   3f f8 00 00 0f fe 00 
   1f f8 00 00 0f fc 00 
   1f fc 00 00 1f fc 00 
   0f fc 00 00 1f f8 00 
   07 fe 00 00 3f f0 00 
   07 fe 00 00 3f f0 00 
   03 ff 80 00 ff e0 00 
   01 ff c0 01 ff c0 00 
   00 7f f8 0f ff 00 00 
   00 3f ff ff fe 00 00 
   00 0f ff ff f8 00 00 
   00 01 ff ff c0 00 00 
   00 00 1f fc 00 00 00 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0.0195312 -0.210938 1.144531 0.703125] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-10-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
/Glyphs [
    { % 0
0.610931 0 0.121094 0 0.5 0.660156 d1
q
q 0.36126 0 0 0.66231 0.12042 -0.000000000000000111 cm
<<
   /ImageType 1
   /Width 18
   /Height 33
   /ImageMatrix [18 0 0 -33 0 33]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 e0 00 
   01 e0 00 
   07 e0 00 
   ff e0 00 
   f9 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   01 e0 00 
   03 f0 00 
   ff ff c0 
   ff ff c0 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0.121094 0 0.5 0.660156] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-15-0 exch definefont pop
%%EndResource
%%BeginResource: font
8 dict begin
/FontType 3 def
/FontMatrix [1 0 0 1 0 0] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 0 /g0 put
Encoding 1 /g1 put
Encoding 2 /g2 put
Encoding 3 /g3 put
Encoding 4 /g4 put
Encoding 5 /g5 put
Encoding 6 /g6 put
Encoding 7 /g7 put
Encoding 8 /g8 put
Encoding 9 /g9 put
Encoding 10 /g10 put
Encoding 11 /g11 put
Encoding 12 /g12 put
Encoding 13 /g13 put
Encoding 14 /g14 put
Encoding 15 /g15 put
Encoding 16 /g16 put
Encoding 17 /g17 put
Encoding 18 /g18 put
Encoding 19 /g19 put
Encoding 20 /g20 put
Encoding 21 /g21 put
Encoding 22 /g22 put
Encoding 23 /g23 put
Encoding 24 /g24 put
Encoding 25 /g25 put
Encoding 26 /g26 put
Encoding 27 /g27 put
/Glyphs [
    { % 0
0.767156 0 0.03125 0 0.738281 0.679688 d1
q
q 0.69276 0 0 0.6777 0.03012 0.000000000000000111 cm
<<
   /ImageType 1
   /Width 46
   /Height 45
   /ImageMatrix [46 0 0 -45 0 45]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   7f ff ff ff ff f8 
   7f ff ff ff ff f8 
   7f 00 0f c0 03 f8 
   7c 00 0f c0 00 f8 
   70 00 0f c0 00 38 
   70 00 0f c0 00 38 
   60 00 0f c0 00 18 
   60 00 0f c0 00 18 
   e0 00 0f c0 00 1c 
   e0 00 0f c0 00 1c 
   c0 00 0f c0 00 0c 
   c0 00 0f c0 00 0c 
   c0 00 0f c0 00 0c 
   c0 00 0f c0 00 0c 
   c0 00 0f c0 00 0c 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 0f c0 00 00 
   00 00 1f e0 00 00 
   00 1f ff ff e0 00 
   00 1f ff ff e0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 1
0.560684 0 0.015625 -0.210938 0.542969 0.4375 d1
q
q 0.51204 0 0 0.64758 0.01506 -0.21084 cm
<<
   /ImageType 1
   /Width 34
   /Height 43
   /ImageMatrix [34 0 0 -43 0 43]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff fc 01 ff c0 
   ff fc 01 ff c0 
   0f e0 00 7e 00 
   07 e0 00 7c 00 
   07 e0 00 38 00 
   03 e0 00 30 00 
   03 f0 00 70 00 
   01 f0 00 60 00 
   01 f0 00 60 00 
   00 f8 00 c0 00 
   00 f8 00 c0 00 
   00 fc 01 c0 00 
   00 7c 01 80 00 
   00 7e 03 80 00 
   00 3e 03 00 00 
   00 3e 03 00 00 
   00 1f 06 00 00 
   00 1f 06 00 00 
   00 1f 8e 00 00 
   00 0f 8c 00 00 
   00 0f 8c 00 00 
   00 07 d8 00 00 
   00 07 d8 00 00 
   00 03 f0 00 00 
   00 03 f0 00 00 
   00 03 f0 00 00 
   00 01 e0 00 00 
   00 01 e0 00 00 
   00 00 c0 00 00 
   00 00 c0 00 00 
   00 01 80 00 00 
   00 01 80 00 00 
   00 03 80 00 00 
   00 03 00 00 00 
   78 03 00 00 00 
   fc 06 00 00 00 
   fc 06 00 00 00 
   fc 0c 00 00 00 
   fc 1c 00 00 00 
   78 38 00 00 00 
   70 70 00 00 00 
   3f e0 00 00 00 
   0f 80 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 2
0.590201 0 0.03125 -0.195312 0.558594 0.453125 d1
q
q 0.51204 0 0 0.64758 0.03012 -0.19578 cm
<<
   /ImageType 1
   /Width 34
   /Height 43
   /ImageMatrix [34 0 0 -43 0 43]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 c0 fe 00 00 
   ff c7 ff 80 00 
   ff cf 03 e0 00 
   0f dc 01 f0 00 
   07 f8 00 fc 00 
   07 f0 00 7e 00 
   07 e0 00 3e 00 
   07 c0 00 3f 00 
   07 c0 00 1f 80 
   07 c0 00 1f 80 
   07 c0 00 1f 80 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 1f c0 
   07 c0 00 1f 80 
   07 c0 00 1f 80 
   07 c0 00 3f 00 
   07 c0 00 3f 00 
   07 e0 00 7e 00 
   07 f0 00 7c 00 
   07 f0 00 f8 00 
   07 fc 01 f0 00 
   07 ce 07 e0 00 
   07 c7 ff 80 00 
   07 c1 fc 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   0f e0 00 00 00 
   ff fe 00 00 00 
   ff fe 00 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 3
0.472131 0 0.03125 -0.015625 0.4375 0.46875 d1
q
q 0.39156 0 0 0.48192 0.03012 -0.01506 cm
<<
   /ImageType 1
   /Width 26
   /Height 32
   /ImageMatrix [26 0 0 -32 0 32]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 1f 80 00 
   00 ff f0 00 
   03 e0 78 00 
   07 c0 3e 00 
   0f 80 1e 00 
   1f 00 1f 00 
   1f 00 0f 80 
   3e 00 0f 80 
   7e 00 07 80 
   7e 00 07 c0 
   7c 00 07 c0 
   fc 00 07 c0 
   fc 00 07 c0 
   fc 00 07 c0 
   ff ff ff c0 
   ff ff ff c0 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   7e 00 00 00 
   7e 00 00 00 
   3e 00 00 c0 
   3f 00 00 c0 
   1f 00 01 c0 
   0f 80 03 80 
   0f c0 03 00 
   03 e0 0f 00 
   01 f0 3c 00 
   00 7f f8 00 
   00 1f c0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 4
0.418969 0 0.03125 -0.015625 0.390625 0.46875 d1
q
q 0.34638 0 0 0.48192 0.03012 -0.01506 cm
<<
   /ImageType 1
   /Width 23
   /Height 32
   /ImageMatrix [23 0 0 -32 0 32]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   01 fe 18 
   07 ff b8 
   1e 01 f8 
   3c 00 f8 
   78 00 78 
   f0 00 38 
   f0 00 38 
   f0 00 18 
   f0 00 18 
   f8 00 18 
   fc 00 18 
   ff 00 00 
   7f f0 00 
   3f ff 00 
   1f ff c0 
   0f ff f0 
   01 ff f8 
   00 1f fc 
   00 01 fc 
   c0 00 7e 
   c0 00 3e 
   c0 00 3e 
   e0 00 1e 
   e0 00 1e 
   f0 00 1e 
   f0 00 1e 
   f8 00 3c 
   f8 00 3c 
   fc 00 78 
   ff 01 f0 
   e3 ff c0 
   c0 ff 00 
   >}
>>
imagemask
Q
Q
    }
    { % 5
0.413096 0 0.015625 -0.015625 0.347656 0.617188 d1
q
q 0.31626 0 0 0.63252 0.01506 -0.01506 cm
<<
   /ImageType 1
   /Width 21
   /Height 42
   /ImageMatrix [21 0 0 -42 0 42]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 60 00 
   00 60 00 
   00 60 00 
   00 60 00 
   00 e0 00 
   00 e0 00 
   00 e0 00 
   01 e0 00 
   03 e0 00 
   03 e0 00 
   07 e0 00 
   1f e0 00 
   ff ff f0 
   ff ff f0 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 18 
   03 e0 18 
   03 e0 18 
   03 e0 18 
   03 e0 18 
   03 e0 18 
   03 e0 18 
   03 e0 38 
   01 f0 30 
   01 f0 70 
   00 f8 60 
   00 3f e0 
   00 0f 80 
   >}
>>
imagemask
Q
Q
    }
    { % 6
0.295025 0 0.03125 0 0.253906 0.691406 d1
q
q 0.21084 0 0 0.69276 0.03012 0 cm
<<
   /ImageType 1
   /Width 14
   /Height 46
   /ImageMatrix [14 0 0 -46 0 46]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 80 
   0f c0 
   1f e0 
   1f e0 
   1f e0 
   1f e0 
   0f c0 
   07 80 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   07 c0 
   ff c0 
   ff c0 
   0f c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   0f e0 
   ff fc 
   ff fc 
   >}
>>
imagemask
Q
Q
    }
    { % 7
0.590201 0 0.03125 0 0.558594 0.453125 d1
q
q 0.51204 0 0 0.4518 0.03012 -0.000000000000000056 cm
<<
   /ImageType 1
   /Width 34
   /Height 30
   /ImageMatrix [34 0 0 -30 0 30]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 c0 fe 00 00 
   ff c3 ff 80 00 
   ff c7 03 e0 00 
   0f de 01 f0 00 
   07 f8 01 f0 00 
   07 f0 00 f8 00 
   07 f0 00 f8 00 
   07 e0 00 f8 00 
   07 e0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   0f e0 01 fc 00 
   ff fe 1f ff c0 
   ff fe 1f ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 8
0.531166 0 0.03125 -0.226562 0.511719 0.453125 d1
q
q 0.46686 0 0 0.6777 0.03012 -0.2259 cm
<<
   /ImageType 1
   /Width 31
   /Height 45
   /ImageMatrix [31 0 0 -45 0 45]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 3f 00 f8 
   00 ff c3 fe 
   03 e1 ff 1e 
   07 80 7c 1e 
   0f 80 7c 0c 
   1f 00 3e 00 
   1f 00 3e 00 
   3e 00 1f 00 
   3e 00 1f 00 
   3e 00 1f 00 
   3e 00 1f 00 
   3e 00 1f 00 
   3e 00 1f 00 
   3e 00 1f 00 
   1f 00 3e 00 
   1f 00 3e 00 
   0f 80 7c 00 
   07 80 78 00 
   0f e1 f0 00 
   0c ff c0 00 
   1c 3f 00 00 
   1c 00 00 00 
   1c 00 00 00 
   1c 00 00 00 
   1e 00 00 00 
   1f 00 00 00 
   0f ff f8 00 
   0f ff ff 00 
   07 ff ff c0 
   0f ff ff f0 
   1e 00 07 f8 
   3c 00 00 f8 
   78 00 00 7c 
   f8 00 00 7c 
   f0 00 00 3c 
   f0 00 00 3c 
   f0 00 00 3c 
   f0 00 00 3c 
   f8 00 00 7c 
   7c 00 00 f8 
   3e 00 01 f0 
   1f 00 03 e0 
   07 e0 1f 80 
   01 ff fe 00 
   00 3f f0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 9
0.295025 0 0.0898438 0 0.226562 0.4375 d1
q
q 0.12048 0 0 0.43674 0.09036 0.000000000000000056 cm
<<
   /ImageType 1
   /Width 8
   /Height 29
   /ImageMatrix [8 0 0 -29 0 29]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   3c 
   7e 
   ff 
   ff 
   ff 
   ff 
   7e 
   3c 
   00 
   00 
   00 
   00 
   00 
   00 
   00 
   00 
   00 
   00 
   00 
   00 
   00 
   3c 
   7e 
   ff 
   ff 
   ff 
   ff 
   7e 
   3c 
   >}
>>
imagemask
Q
Q
    }
    { % 10
0.590201 0 0.03125 0 0.558594 0.691406 d1
q
q 0.51204 0 0 0.69276 0.03012 0 cm
<<
   /ImageType 1
   /Width 34
   /Height 46
   /ImageMatrix [34 0 0 -46 0 46]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 c0 00 00 00 
   ff c0 00 00 00 
   ff c0 00 00 00 
   0f c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 fe 00 00 
   07 c3 ff 80 00 
   07 c7 03 e0 00 
   07 de 01 f0 00 
   07 f8 01 f0 00 
   07 f0 00 f8 00 
   07 f0 00 f8 00 
   07 e0 00 f8 00 
   07 e0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   0f e0 01 fc 00 
   ff fe 1f ff c0 
   ff fe 1f ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 11
0.413999 0 0.03125 0 0.390625 0.453125 d1
q
q 0.34638 0 0 0.4518 0.03012 -0.000000000000000056 cm
<<
   /ImageType 1
   /Width 23
   /Height 30
   /ImageMatrix [23 0 0 -30 0 30]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 81 f0 
   ff 87 fc 
   ff 9e 7e 
   0f 98 7e 
   07 b8 7e 
   07 b0 7e 
   07 f0 3c 
   07 e0 00 
   07 e0 00 
   07 e0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   07 c0 00 
   0f e0 00 
   ff ff 00 
   ff ff 00 
   >}
>>
imagemask
Q
Q
    }
    { % 12
0.531166 0 0.03125 -0.015625 0.496094 0.46875 d1
q
q 0.4518 0 0 0.48192 0.03012 -0.01506 cm
<<
   /ImageType 1
   /Width 30
   /Height 32
   /ImageMatrix [30 0 0 -32 0 32]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 1f e0 00 
   00 7f f8 00 
   01 f0 3e 00 
   03 c0 0f 00 
   07 80 07 80 
   0f 00 03 c0 
   1f 00 03 e0 
   3e 00 01 f0 
   3e 00 01 f0 
   7c 00 00 f8 
   7c 00 00 f8 
   7c 00 00 f8 
   fc 00 00 fc 
   fc 00 00 fc 
   fc 00 00 fc 
   fc 00 00 fc 
   fc 00 00 fc 
   fc 00 00 fc 
   fc 00 00 fc 
   fc 00 00 fc 
   fc 00 00 fc 
   7c 00 00 f8 
   7c 00 00 f8 
   3e 00 01 f0 
   3e 00 01 f0 
   1f 00 03 e0 
   1f 00 03 e0 
   0f 80 07 c0 
   07 c0 0f 80 
   01 f0 3e 00 
   00 7f f8 00 
   00 1f e0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 13
0.472131 0 0.03125 -0.015625 0.4375 0.46875 d1
q
q 0.39156 0 0 0.48192 0.03012 -0.01506 cm
<<
   /ImageType 1
   /Width 26
   /Height 32
   /ImageMatrix [26 0 0 -32 0 32]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 1f e0 00 
   00 7f fc 00 
   01 f0 1e 00 
   03 e0 07 00 
   07 c0 1f 80 
   0f 80 1f 80 
   1f 00 1f 80 
   3f 00 1f 80 
   3e 00 0f 00 
   7e 00 00 00 
   7e 00 00 00 
   7c 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   fc 00 00 00 
   7e 00 00 00 
   7e 00 00 00 
   7e 00 00 c0 
   3f 00 00 c0 
   1f 00 01 c0 
   1f 80 01 80 
   0f c0 03 80 
   07 e0 07 00 
   01 f0 3e 00 
   00 7f f8 00 
   00 1f c0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 14
0.324543 0 0.015625 0 0.390625 0.707031 d1
q
q 0.36144 0 0 0.70782 0.01506 0 cm
<<
   /ImageType 1
   /Width 24
   /Height 47
   /ImageMatrix [24 0 0 -47 0 47]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 03 f0 
   00 0f fc 
   00 3e 1e 
   00 7c 3f 
   00 f8 3f 
   01 f0 3f 
   01 f0 3f 
   03 e0 0c 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   ff ff e0 
   ff ff e0 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   03 e0 00 
   07 f0 00 
   7f ff 80 
   7f ff 80 
   >}
>>
imagemask
Q
Q
    }
    { % 15
0.885227 0 0.03125 0 0.875 0.453125 d1
q
q 0.8283 0 0 0.4518 0.03012 -0.000000000000000056 cm
<<
   /ImageType 1
   /Width 55
   /Height 30
   /ImageMatrix [55 0 0 -30 0 30]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 c0 7f 00 07 f0 00 
   ff c3 ff c0 3f fc 00 
   ff c7 83 f0 78 3f 00 
   0f ce 01 f8 e0 1f 80 
   07 dc 00 f9 c0 0f 80 
   07 f8 00 ff 80 0f c0 
   07 f0 00 7f 00 07 c0 
   07 e0 00 7e 00 07 c0 
   07 e0 00 7e 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   07 c0 00 7c 00 07 c0 
   0f e0 00 fe 00 0f e0 
   ff fe 0f ff e0 ff fe 
   ff fe 0f ff e0 ff fe 
   >}
>>
imagemask
Q
Q
    }
    { % 16
0.531166 0 0.046875 -0.015625 0.527344 0.46875 d1
q
q 0.46686 0 0 0.48192 0.04518 -0.01506 cm
<<
   /ImageType 1
   /Width 31
   /Height 32
   /ImageMatrix [31 0 0 -32 0 32]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 ff 00 00 
   07 ff c0 00 
   0f 01 f0 00 
   1c 00 f8 00 
   3f 00 7c 00 
   3f 00 3e 00 
   3f 00 3e 00 
   3f 00 3f 00 
   1e 00 1f 00 
   00 00 1f 00 
   00 00 1f 00 
   00 00 1f 00 
   00 00 1f 00 
   00 07 ff 00 
   00 7f ff 00 
   01 fe 1f 00 
   07 f0 1f 00 
   1f c0 1f 00 
   3f 80 1f 00 
   7f 00 1f 00 
   7e 00 1f 00 
   fe 00 1f 06 
   fc 00 1f 06 
   fc 00 1f 06 
   fc 00 1f 06 
   fc 00 3f 06 
   fe 00 3f 06 
   7e 00 7f 06 
   7f 00 ef 8c 
   1f 83 c7 fc 
   0f ff 03 f8 
   01 fc 01 e0 
   >}
>>
imagemask
Q
Q
    }
    { % 17
0.295025 0 0.03125 0 0.269531 0.691406 d1
q
q 0.2259 0 0 0.69276 0.03012 0 cm
<<
   /ImageType 1
   /Width 15
   /Height 46
   /ImageMatrix [15 0 0 -46 0 46]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 c0 
   ff c0 
   ff c0 
   0f c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   07 c0 
   0f e0 
   ff fe 
   ff fe 
   >}
>>
imagemask
Q
Q
    }
    { % 18
0.590201 0 0.03125 -0.015625 0.558594 0.691406 d1
q
q 0.51204 0 0 0.70782 0.03012 -0.01506 cm
<<
   /ImageType 1
   /Width 34
   /Height 47
   /ImageMatrix [34 0 0 -47 0 47]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 c0 00 00 00 
   ff c0 00 00 00 
   ff c0 00 00 00 
   0f c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 00 00 00 
   07 c0 fe 00 00 
   07 c7 ff 80 00 
   07 cf 03 e0 00 
   07 dc 01 f0 00 
   07 f8 00 7c 00 
   07 f0 00 7e 00 
   07 e0 00 3e 00 
   07 c0 00 1f 00 
   07 c0 00 1f 80 
   07 c0 00 1f 80 
   07 c0 00 0f 80 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 0f c0 
   07 c0 00 1f 80 
   07 c0 00 1f 80 
   07 c0 00 1f 00 
   07 c0 00 3f 00 
   07 e0 00 3e 00 
   07 f0 00 7c 00 
   07 b0 00 f8 00 
   07 bc 01 f0 00 
   07 0e 07 e0 00 
   06 07 ff 80 00 
   00 01 fc 00 00 
   >}
>>
imagemask
Q
Q
    }
    { % 19
0.590201 0 0.03125 -0.015625 0.558594 0.453125 d1
q
q 0.51204 0 0 0.46686 0.03012 -0.01506 cm
<<
   /ImageType 1
   /Width 34
   /Height 31
   /ImageMatrix [34 0 0 -31 0 31]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   07 c0 00 f8 00 
   ff c0 1f f8 00 
   ff c0 1f f8 00 
   0f c0 01 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 00 f8 00 
   07 c0 01 f8 00 
   07 c0 01 f8 00 
   07 c0 01 f8 00 
   07 c0 03 f8 00 
   03 e0 07 f8 00 
   03 e0 0e fc 00 
   01 f8 1c ff c0 
   00 7f f8 ff c0 
   00 1f e0 f8 00 
   >}
>>
imagemask
Q
Q
    }
    { % 20
0.590201 0 0.03125 -0.015625 0.558594 0.691406 d1
q
q 0.51204 0 0 0.70782 0.03012 -0.01506 cm
<<
   /ImageType 1
   /Width 34
   /Height 47
   /ImageMatrix [34 0 0 -47 0 47]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 00 00 f8 00 
   00 00 1f f8 00 
   00 00 1f f8 00 
   00 00 01 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 00 00 f8 00 
   00 0f e0 f8 00 
   00 7f f8 f8 00 
   01 f8 1e f8 00 
   03 e0 07 f8 00 
   07 c0 03 f8 00 
   0f 80 01 f8 00 
   1f 00 01 f8 00 
   3f 00 00 f8 00 
   3e 00 00 f8 00 
   7e 00 00 f8 00 
   7e 00 00 f8 00 
   fc 00 00 f8 00 
   fc 00 00 f8 00 
   fc 00 00 f8 00 
   fc 00 00 f8 00 
   fc 00 00 f8 00 
   fc 00 00 f8 00 
   fc 00 00 f8 00 
   fc 00 00 f8 00 
   fc 00 00 f8 00 
   7c 00 00 f8 00 
   7e 00 00 f8 00 
   7e 00 00 f8 00 
   3e 00 01 f8 00 
   1f 00 01 f8 00 
   1f 80 03 f8 00 
   0f 80 07 f8 00 
   03 e0 0e fc 00 
   01 f0 3c ff c0 
   00 7f f0 ff c0 
   00 1f c0 f8 00 
   >}
>>
imagemask
Q
Q
    }
    { % 21
0.295025 0 0.0898438 -0.195312 0.242188 0.4375 d1
q
q 0.13554 0 0 0.63252 0.09036 -0.19578 cm
<<
   /ImageType 1
   /Width 9
   /Height 42
   /ImageMatrix [9 0 0 -42 0 42]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   3c 00 
   7e 00 
   ff 00 
   ff 00 
   ff 00 
   ff 00 
   7e 00 
   3c 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   00 00 
   3c 00 
   7e 00 
   ff 00 
   ff 00 
   ff 80 
   ff 80 
   7f 80 
   3d 80 
   01 80 
   01 80 
   01 80 
   03 80 
   03 00 
   03 00 
   07 00 
   06 00 
   0e 00 
   1c 00 
   38 00 
   70 00 
   60 00 
   >}
>>
imagemask
Q
Q
    }
    { % 22
0.413096 0 0.0898438 -0.253906 0.347656 0.753906 d1
q
q 0.24096 0 0 1.00902 0.09036 -0.25602 cm
<<
   /ImageType 1
   /Width 16
   /Height 67
   /ImageMatrix [16 0 0 -67 0 67]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   00 03 
   00 07 
   00 0e 
   00 1c 
   00 38 
   00 70 
   00 f0 
   01 e0 
   01 c0 
   03 c0 
   07 80 
   07 80 
   0f 00 
   0f 00 
   1e 00 
   1e 00 
   1e 00 
   3c 00 
   3c 00 
   3c 00 
   3c 00 
   78 00 
   78 00 
   78 00 
   78 00 
   78 00 
   f8 00 
   f8 00 
   f0 00 
   f0 00 
   f0 00 
   f0 00 
   f0 00 
   f0 00 
   f0 00 
   f0 00 
   f0 00 
   f0 00 
   f0 00 
   f8 00 
   f8 00 
   78 00 
   78 00 
   78 00 
   78 00 
   78 00 
   3c 00 
   3c 00 
   3c 00 
   3c 00 
   1e 00 
   1e 00 
   1e 00 
   0f 00 
   0f 00 
   07 80 
   07 80 
   03 c0 
   01 c0 
   01 e0 
   00 f0 
   00 70 
   00 38 
   00 1c 
   00 0e 
   00 07 
   00 03 
   >}
>>
imagemask
Q
Q
    }
    { % 23
0.413096 0 0.0585938 -0.253906 0.316406 0.753906 d1
q
q 0.24096 0 0 1.00902 0.06024 -0.25602 cm
<<
   /ImageType 1
   /Width 16
   /Height 67
   /ImageMatrix [16 0 0 -67 0 67]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   c0 00 
   e0 00 
   70 00 
   38 00 
   1c 00 
   0e 00 
   0f 00 
   07 80 
   03 80 
   03 c0 
   01 e0 
   01 e0 
   00 f0 
   00 f0 
   00 78 
   00 78 
   00 78 
   00 3c 
   00 3c 
   00 3c 
   00 3c 
   00 1e 
   00 1e 
   00 1e 
   00 1e 
   00 1e 
   00 1f 
   00 1f 
   00 0f 
   00 0f 
   00 0f 
   00 0f 
   00 0f 
   00 0f 
   00 0f 
   00 0f 
   00 0f 
   00 0f 
   00 0f 
   00 1f 
   00 1f 
   00 1e 
   00 1e 
   00 1e 
   00 1e 
   00 1e 
   00 3c 
   00 3c 
   00 3c 
   00 3c 
   00 78 
   00 78 
   00 78 
   00 f0 
   00 f0 
   01 e0 
   01 e0 
   03 c0 
   03 80 
   07 80 
   0f 00 
   0e 00 
   1c 00 
   38 00 
   70 00 
   e0 00 
   c0 00 
   >}
>>
imagemask
Q
Q
    }
    { % 24
1.062182 0 0 0.253906 1.070312 0.285156 d1
q
Q
    }
    { % 25
0.972725 0 0.046875 0 0.933594 0.679688 d1
q
q 0.87348 0 0 0.6777 0.04518 0.000000000000000111 cm
<<
   /ImageType 1
   /Width 58
   /Height 45
   /ImageMatrix [58 0 0 -45 0 45]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff f8 00 00 00 07 ff c0 
   ff fc 00 00 00 0f ff c0 
   03 fc 00 00 00 0f f0 00 
   01 fc 00 00 00 0f e0 00 
   01 be 00 00 00 1b e0 00 
   01 be 00 00 00 1b e0 00 
   01 9f 00 00 00 33 e0 00 
   01 9f 00 00 00 33 e0 00 
   01 9f 00 00 00 33 e0 00 
   01 8f 80 00 00 63 e0 00 
   01 8f 80 00 00 63 e0 00 
   01 87 c0 00 00 c3 e0 00 
   01 87 c0 00 00 c3 e0 00 
   01 83 e0 00 01 83 e0 00 
   01 83 e0 00 01 83 e0 00 
   01 83 e0 00 01 83 e0 00 
   01 81 f0 00 03 03 e0 00 
   01 81 f0 00 03 03 e0 00 
   01 80 f8 00 06 03 e0 00 
   01 80 f8 00 06 03 e0 00 
   01 80 f8 00 06 03 e0 00 
   01 80 7c 00 0c 03 e0 00 
   01 80 7c 00 0c 03 e0 00 
   01 80 3e 00 18 03 e0 00 
   01 80 3e 00 18 03 e0 00 
   01 80 3e 00 18 03 e0 00 
   01 80 1f 00 30 03 e0 00 
   01 80 1f 00 30 03 e0 00 
   01 80 0f 80 60 03 e0 00 
   01 80 0f 80 60 03 e0 00 
   01 80 07 c0 c0 03 e0 00 
   01 80 07 c0 c0 03 e0 00 
   01 80 07 c0 c0 03 e0 00 
   01 80 03 e1 80 03 e0 00 
   01 80 03 e1 80 03 e0 00 
   01 80 01 f3 00 03 e0 00 
   01 80 01 f3 00 03 e0 00 
   01 80 01 f3 00 03 e0 00 
   01 80 00 fe 00 03 e0 00 
   01 80 00 fe 00 03 e0 00 
   01 80 00 7c 00 03 e0 00 
   03 c0 00 7c 00 03 e0 00 
   0f f0 00 7c 00 07 f0 00 
   ff ff 00 38 01 ff ff c0 
   ff ff 00 38 01 ff ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 26
0.354061 0 0.015625 0.195312 0.300781 0.253906 d1
q
q 0.27108 0 0 0.06024 0.01506 0.19578 cm
<<
   /ImageType 1
   /Width 18
   /Height 4
   /ImageMatrix [18 0 0 -4 0 4]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff c0 
   ff ff c0 
   ff ff c0 
   ff ff c0 
   >}
>>
imagemask
Q
Q
    }
    { % 27
1.090645 0 0.015625 -0.015625 1.070312 0.679688 d1
q
q 1.03914 0 0 0.69276 0.01506 -0.01506 cm
<<
   /ImageType 1
   /Width 69
   /Height 46
   /ImageMatrix [69 0 0 -46 0 46]
   /Decode [1 0]
   /BitsPerComponent 1
   /DataSource {<
   ff ff 80 1f ff f0 01 ff f8 
   ff ff 80 1f ff f0 01 ff f8 
   07 fc 00 01 ff 00 00 3f c0 
   03 f0 00 00 fe 00 00 1f 00 
   03 f0 00 00 7e 00 00 0e 00 
   03 f0 00 00 7e 00 00 0e 00 
   01 f8 00 00 7f 00 00 0c 00 
   01 f8 00 00 7f 00 00 0c 00 
   01 fc 00 00 7f 00 00 1c 00 
   00 fc 00 00 df 80 00 18 00 
   00 fc 00 00 df 80 00 18 00 
   00 fe 00 00 df 80 00 38 00 
   00 7e 00 01 8f c0 00 30 00 
   00 7e 00 01 8f c0 00 30 00 
   00 7f 00 01 8f c0 00 70 00 
   00 3f 00 03 07 e0 00 60 00 
   00 3f 00 03 07 e0 00 60 00 
   00 3f 80 03 07 e0 00 e0 00 
   00 1f 80 06 03 f0 00 c0 00 
   00 1f 80 06 03 f0 00 c0 00 
   00 1f c0 06 03 f0 01 c0 00 
   00 0f c0 0c 01 f8 01 80 00 
   00 0f c0 0c 01 f8 01 80 00 
   00 0f e0 0c 01 f8 03 80 00 
   00 07 e0 18 00 fc 03 00 00 
   00 07 e0 18 00 fc 03 00 00 
   00 07 f0 18 00 fc 07 00 00 
   00 03 f0 30 00 7e 06 00 00 
   00 03 f0 30 00 7e 06 00 00 
   00 03 f8 30 00 7e 0e 00 00 
   00 01 f8 60 00 3f 0c 00 00 
   00 01 f8 60 00 3f 0c 00 00 
   00 01 fc 60 00 3f 1c 00 00 
   00 00 fc c0 00 1f 98 00 00 
   00 00 fc c0 00 1f 98 00 00 
   00 00 fe c0 00 1f b8 00 00 
   00 00 7f 80 00 0f f0 00 00 
   00 00 7f 80 00 0f f0 00 00 
   00 00 3f 80 00 0f e0 00 00 
   00 00 3f 00 00 07 e0 00 00 
   00 00 3f 00 00 07 e0 00 00 
   00 00 1f 00 00 07 c0 00 00 
   00 00 1e 00 00 03 c0 00 00 
   00 00 1e 00 00 03 c0 00 00 
   00 00 0e 00 00 03 80 00 00 
   00 00 0c 00 00 01 80 00 00 
   >}
>>
imagemask
Q
Q
    }
] def
/FontBBox [0 -0.253906 1.070312 0.753906] def
/BuildChar {
  exch /Glyphs get
  exch get
  10 dict begin exec end
} bind def
currentdict
end
/f-16-0 exch definefont pop
%%EndResource
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageOrientation: Portrait
%%PageMedia: Letter
%%PageBoundingBox: 151 130 476 638
612 792 cairo_set_page_size
%%EndPageSetup
q 151 130 325 508 rectclip q
0 g
BT
16.195223 0 0 16.195223 250.235719 625.862396 Tm
/f-0-0 1 Tf
[<0001>26<020304>-26<05060702080401>-313<0204>]TJ
/f-1-0 1 Tf
[<>-313<00>]TJ
6.936232 -0.25088 Td
<01>Tj
0.376291 0.25088 Td
<02>Tj
11.24674 0 0 11.24674 276.50966 571.065205 Tm
/f-2-0 1 Tf
[<00010203>27<04>-326<050607>-327<05080609>]TJ
13.496051 0 0 13.496051 151.840853 530.702736 Tm
/f-3-0 1 Tf
<00>Tj
/f-4-0 1 Tf
[<>-1100<00>]TJ
1.987913 -0.253726 Td
<01>Tj
0.380658 0.253726 Td
<02>Tj
/f-3-0 1 Tf
[<>-367<0102>-367<03>31<04>30<0502060705>]TJ
9.372221 0 0 9.372221 151.840853 510.177661 Tm
/f-5-0 1 Tf
<00>Tj
0.349909 -0.262482 Td
<01>Tj
0.393672 0.262482 Td
<02>Tj
/f-6-0 1 Tf
[<>-378<0001020304030504060708>-378<09>]TJ
/f-7-0 1 Tf
(")Tj
/f-6-0 1 Tf
<0a>Tj
/f-7-0 1 Tf
(I)Tj
/f-6-0 1 Tf
[<0b0c0d0e>-378<0f0c>-377<1004>-378<0301>-27<0704>-378<0c0305020607>-378
<0803>-27<0605110704>28<12>-378<010203>-28<06070c0c0302>-377<13100c0708>
-378<0304>-377<120301>-378<0314>]TJ
-0.743581 -1.199988 Td
[<121507>-333<161017>83<0718>]TJ
/f-8-0 1 Tf
[<>-333<000102>51<0304030000050607>]TJ
6.560536 0 0 6.560536 241.922396 502.331885 Tm
/f-9-0 1 Tf
<00>Tj
9.372221 0 0 9.372221 249.249823 498.931108 Tm
/f-6-0 1 Tf
<0c190c1207111a>Tj
11.24674 0 0 11.24674 151.840853 472.698561 Tm
/f-10-0 1 Tf
[<000100>-1125<02>94<03040506070308>]TJ
9.372221 0 0 9.372221 151.840853 455.400225 Tm
/f-6-0 1 Tf
[<1b121c0c>-383<10>-384<15>28<1913020f08>-383<0314>-384<1d1e1f1b1d1e20>
-383<100408>-383<161017>83<07181a>-383<1715070207>-384<100207>-383<111004>
28<19>-384<120711010a1012070c>-383<1203>-383<06>28<1503>-28<030c07>]TJ
0 -1.199988 Td
[<14020311>-333<00140302>-334<13>-27<03>-28<030b0c21>-333<020701>-28<0302
120c21>-333<22060e>-334<1a>-444<171507>-333<0c0305020607>-333<0803>-28<06
05110704>28<12>-334<0803>-27<070c041c12>-334<0a03>-27<030b>-334<0a0f0b>
28<07>-333<0603>-28<08071a>]TJ
1.50001 -1.200088 Td
[<23>83<0302>-333<07241011010a0721>-333<12150f0c>-333<0f0c>-334<10>-333
<0a0f0c12>-333<0314>-333<12150f04250c>-334<0f12>-333<061004>-333<080326>
]TJ
-0.277538 -1.99998 Td
[<271a>-500<1d>83<020f120f0425>-333<07280510120f03040c1a>]TJ
0 -1.99998 Td
[<291a>-500<2a020807020708>-333<100408>-333<0504030208070208>-334<0a0f0c1
20c1a>]TJ
0 -1.99998 Td
[<2b1a>-500<2c0408>-333<111004>28<19>83<21>-333<111004>28<19>-334<0312150
7020c>-333<140302111012120f0425>-333<0301120f03040c1a>]TJ
11.24674 0 0 11.24674 151.840853 350.440872 Tm
/f-10-0 1 Tf
[<09>94<070a050a0b0c>-375<0d0e0604050a0f0b08>]TJ
9.372221 0 0 9.372221 151.840853 329.52633 Tm
/f-6-0 1 Tf
[<171507>-333<0410120502100a>-334<140207280507040619>-333<0f0c>-333<08072
d040708>-333<100c>]TJ
/f-11-1 1 Tf
[<>-334<01>]TJ
6.560536 0 0 6.560536 305.408266 328.120864 Tm
/f-12-0 1 Tf
(n)Tj
9.372221 0 0 9.372221 313.11293 329.52633 Tm
/f-13-0 1 Tf
(=)Tj
/f-14-1 1 Tf
1.055548 1.172585 Td
<01>Tj
ET
0.374415 w
0 J
0 j
[] 0.0 d
10 M q 1 0 0 1 0 791.999983 cm
332.379 -451.297 m 341.277 -451.297 l S Q
BT
6.560536 0 0 6.560536 334.756546 333.216855 Tm
/f-12-0 1 Tf
(k)Tj
ET
q 1 0 0 1 0 791.999983 cm
333.504 -460.129 m 340.152 -460.129 l S Q
BT
6.560536 0 0 6.560536 333.502539 326.294887 Tm
/f-12-0 1 Tf
(m)Tj
9.372221 0 0 9.372221 344.401958 329.52633 Tm
/f-6-0 1 Tf
[<000f042e0a0f0407>-333<07280510120f03040e21>-333<0302>]TJ
/f-11-1 1 Tf
-5.604862 -3.363781 Td
<01>Tj
6.560536 0 0 6.560536 297.705483 296.593829 Tm
/f-12-0 1 Tf
(n)Tj
9.372221 0 0 9.372221 305.410147 298.000236 Tm
/f-13-0 1 Tf
(=)Tj
/f-14-1 1 Tf
1.055548 1.59627 Td
<02>Tj
ET
q 1 0 0 1 0 791.999983 cm
324.676 -478.852 m 335.152 -478.852 l S Q
BT
9.372221 0 0 9.372221 327.327518 304.339886 Tm
/f-11-0 1 Tf
(k)Tj
ET
q 1 0 0 1 0 791.999983 cm
325.801 -491.656 m 334.027 -491.656 l S Q
BT
9.372221 0 0 9.372221 325.799756 291.571216 Tm
/f-11-0 1 Tf
(m)Tj
/f-6-0 1 Tf
-17.061109 -1.866481 Td
[<100c>-333<10>-334<2f0f0c010a10>28<19>-333<23>83<030211>28<050a101a>-444
<2a0221>]TJ
/f-11-1 1 Tf
13.44107 -2.976331 Td
<01>Tj
6.560536 0 0 6.560536 297.705483 244.776904 Tm
/f-12-0 1 Tf
(n)Tj
9.372221 0 0 9.372221 305.410147 246.183311 Tm
/f-13-0 1 Tf
(=)Tj
/f-14-1 1 Tf
1.055548 1.59627 Td
<02>Tj
ET
q 1 0 0 1 0 791.999983 cm
324.676 -530.668 m 335.152 -530.668 l S Q
BT
9.372221 0 0 9.372221 327.327518 252.523901 Tm
/f-11-0 1 Tf
(k)Tj
ET
q 1 0 0 1 0 791.999983 cm
325.801 -543.473 m 334.027 -543.473 l S Q
BT
9.372221 0 0 9.372221 325.799756 239.75429 Tm
/f-11-0 1 Tf
(m)Tj
/f-6-0 1 Tf
14.661534 0.685966 Td
<00270e>Tj
-31.722643 -2.15245 Td
[<171510121c0c>-333<06100a0a0708>-333<10>-334<300511>28<13>-28<07020708>
-333<23>84<030211>27<050a101a>]TJ
ET
q 1 0 0 1 0 791.999983 cm
151.84 -606.191 m 281.176 -606.191 l S Q
BT
5.62337 0 0 5.62337 162.272724 179.576064 Tm
/f-15-0 1 Tf
<00>Tj
7.497796 0 0 7.497796 166.176797 176.929761 Tm
/f-16-0 1 Tf
[<00>29<0102>-29<030403050506070809>-437<09>-436<050a03>-283<020b0c>-30
<0d030404>-283<0c0e>-283<04030505060708>-283<0f1005030b061011>-284<0607>
-283<05>30<0102>-30<03>-283<0c0b>-283<0607>29<050c>-283<10>-283<0e0c0b0f>
-283<050c>-283<12>-30<03>-283<13040314>-283<0607>-283<020b0607>29<05060708
15>]TJ
-1.912021 -1.187438 Td
[<1011040c>-368<09>-500<050a03>-368<020b0c>-30<0d030404>-368<0c0e>-368<02
0b0c>-29<14130d060708>-368<080b10020a060d>-368<0f100505030b>-368<161004>
-368<050a0b0c13080a>-368<10>-368<0d0c0f021305030b>-368<04010405030f17>-368
<18>-368<19030b0b06100f1a>]TJ
0 -1.187564 Td
[<1b>88<03120405030b>]TJ
9.372221 0 0 9.372221 311.170301 131.002812 Tm
/f-6-0 1 Tf
<27>Tj
ET
Q Q
showpage
%%Trailer
%%EOF
